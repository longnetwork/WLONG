{
	"id": "89762374b1ed7de40676e309c02eb7af",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"wLONG/wLONG.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// wrapped LONG Coin (wLONG). This is a token obtained by burning a LONG COIN to an address \n// without a private key: 1111111111111111111114oLvT2. After burning you get a unique coupon \n// in the amount of burned LONG. This coupon is used to top up wLONG at an address \n// in Binance Smart Chain or Ethereum network.\n\npragma solidity ^0.8.0;\n\nimport \"./ERC20.sol\";\nimport \"./Context.sol\";\nimport \"./Ownable.sol\";\n\n\ncontract wLONG is ERC20, Ownable {\n\n    constructor() ERC20(\"wrapped LONG\",\"wLONG\") {\n    }\n    /** @dev \n     * decimals столькоже сколько и в орегинальном LONG coin, totalSupply изначально 0, так как\n     * токены минтятся юзерами через купоны, подтверждающие сжигание LONG\n    */\n    function decimals() public view virtual override returns (uint8) {\n        return 0;\n    }\n\n    /////////////////////// А теперь все таинство минтинга обернутой монеты за счет газа минтера ///////////////////////////////\n\n    /** @dev\n     * Для проверки купонов на сожженный LONG используем механизм ECDSA-подписи, \n     * где r-часть юзабельна как одноразовый лицензионный ключ.\n     * Чтобы не было подделок нужно r=k*G генерировать каждый раз из нового случайного k (nonce)!!!\n     * При такой схеме в хешь сообщения включается число сожженных LONG а восстанавливаемый при проверке \n     * сигнатуры адрес (публичный ключь) - это _owner-адрес в контракте (возможна его смена при компроментации)\n     * Важно! Для предотвращения Front Running в хешь сообщения подмешивается также адрес отправителя (_msgSender()),\n     * то есть купоны на сжигание всегда именные и заюзать с другого адреса невозможно\n     * \n    */\n\n    mapping(bytes32 => bool) private _rset;    // r-част подписи созданная из случайного k mod n ( r = k*G  mod n)\n                                               // ее достаточно для обеспечения уникальности купона при не повторяемых k\n                                               // фактически это и есть купон с приватным ключем k, где r - его публичный ключь\n\n    /** @dev\n     * Это единственный метод для минтинга wLONG. Вызывающий адрес долже предоставить валидную\n     * сигнатуру (купон), полученную после сжигагия орегинальных LONG в количестве amount\n    */\n    function mint(uint256 amount, bytes memory signature) external virtual returns (bool) {\n        //require(signature.length == 64, \"wLONG: invalid signature length\");\n\n        address minter=_msgSender();\n\n        bytes32 r; bytes32 s; \n        assembly {\n            r := mload(add(signature, 0x20))\n            s := mload(add(signature, 0x40))\n        }\n        require(!_rset[r], \"wLONG: key has already been used\");\n\n        bytes32 h = keccak256(abi.encodePacked(minter,\"\\x19\\x01\",amount)); // Хешь сообщения, содержащего число wLONG, и примесь минтера\n\n        /** @dev\n         * При восстановлении точки публичного ключа (адреса) есть неоднозначность (malleable) в сигнатуре вида +-s mod n,\n         * которая даст один и тот-же адрес. Поскольку r сохраняется в контракте, то второй раз использовать \"противоположную\"\n         * s не удастся. Поскольку сигнатура генерится из случайного k, а ecrecover() предполагает восстановление из \n         * malleable-сигнатур, мы вынуждены проверить два варианта для v ∈ {27, 28} без лишних заморочек, тратящих газ.\n        */\n        address signer1 = ecrecover(h, uint8(27), r, s); address signer2 = ecrecover(h, uint8(28), r, s);\n        require(signer1==owner() || signer2==owner(), \"wLONG: signature is not valid\"); // Проверка публичного ключа подписанта\n\n        // Если сюда дошли, то можно минтить wLONG\n        _rset[r]=true;          // Купон одноразовый (запоминаем его)\n        _mint(minter, amount);  // Инкрементарная (адрес на 0 проверит)\n        \n        return true;\n    }\n}"
			},
			"wLONG/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    //function renounceOwnership() public virtual onlyOwner {\n    //    _transferOwnership(address(0));\n    //}\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"wLONG/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"wLONG/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./IERC20Metadata.sol\";\nimport \"./Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, _allowances[owner][spender] + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = _allowances[owner][spender];\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        //_beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n        }\n        _balances[to] += amount;\n\n        emit Transfer(from, to, amount);\n\n        //_afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        //_beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n\n        //_afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    /*function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        //_beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n        }\n        _totalSupply -= amount;\n\n        emit Transfer(account, address(0), amount);\n\n        //_afterTokenTransfer(account, address(0), amount);\n    }*/\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Spend `amount` form the allowance of `owner` toward `spender`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    //function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    //function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n}\n"
			},
			"wLONG/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"wLONG/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /** \n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"wLONG/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"wLONG/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"wLONG/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"wLONG/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"wLONG/ERC20.sol\":1382:12565  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"wLONG/ERC20.sol\":1957:2070  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"wLONG/ERC20.sol\":2023:2036  _name = name_ */\n  dup2\n  mload\n  tag_6\n  swap1\n    /* \"wLONG/ERC20.sol\":2023:2028  _name */\n  0x03\n  swap1\n    /* \"wLONG/ERC20.sol\":2023:2036  _name = name_ */\n  0x20\n  dup6\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"wLONG/ERC20.sol\":2046:2063  _symbol = symbol_ */\n  dup1\n  mload\n  tag_8\n  swap1\n    /* \"wLONG/ERC20.sol\":2046:2053  _symbol */\n  0x04\n  swap1\n    /* \"wLONG/ERC20.sol\":2046:2063  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"wLONG/ERC20.sol\":1957:2070  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"wLONG/ERC20.sol\":1382:12565  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  jump(tag_21)\ntag_7:\n  dup3\n  dup1\n  sload\n  tag_10\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_13\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_16)\ntag_13:\n  dup3\n  0x1f\n  lt\n  tag_14\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_16)\ntag_14:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_16\n  jumpi\n  swap2\n  dup3\n  add\ntag_15:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_16\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_15)\ntag_16:\n  pop\n  tag_17\n  swap3\n  swap2\n  pop\n  tag_18\n  jump\t// in\ntag_17:\n  pop\n  swap1\n  jump\t// out\ntag_18:\ntag_19:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_17\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_19)\n    /* \"#utility.yul\":14:899   */\ntag_22:\n    /* \"#utility.yul\":68:73   */\n  0x00\n    /* \"#utility.yul\":121:124   */\n  dup3\n    /* \"#utility.yul\":114:118   */\n  0x1f\n    /* \"#utility.yul\":106:112   */\n  dup4\n    /* \"#utility.yul\":102:119   */\n  add\n    /* \"#utility.yul\":98:125   */\n  slt\n    /* \"#utility.yul\":88:143   */\n  tag_24\n  jumpi\n    /* \"#utility.yul\":139:140   */\n  0x00\n    /* \"#utility.yul\":136:137   */\n  dup1\n    /* \"#utility.yul\":129:141   */\n  revert\n    /* \"#utility.yul\":88:143   */\ntag_24:\n    /* \"#utility.yul\":162:175   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":224:234   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":221:257   */\n  iszero\n  tag_26\n  jumpi\n    /* \"#utility.yul\":237:255   */\n  tag_26\n  tag_27\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":312:314   */\n  0x40\n    /* \"#utility.yul\":306:315   */\n  mload\n    /* \"#utility.yul\":280:282   */\n  0x1f\n    /* \"#utility.yul\":366:379   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":362:384   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":386:388   */\n  0x3f\n    /* \"#utility.yul\":358:389   */\n  add\n    /* \"#utility.yul\":354:394   */\n  and\n    /* \"#utility.yul\":342:395   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":410:428   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":430:452   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":407:453   */\n  or\n    /* \"#utility.yul\":404:476   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":456:474   */\n  tag_29\n  tag_27\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":496:506   */\n  dup2\n    /* \"#utility.yul\":492:494   */\n  0x40\n    /* \"#utility.yul\":485:507   */\n  mstore\n    /* \"#utility.yul\":531:533   */\n  dup4\n    /* \"#utility.yul\":523:529   */\n  dup2\n    /* \"#utility.yul\":516:534   */\n  mstore\n    /* \"#utility.yul\":553:557   */\n  0x20\n    /* \"#utility.yul\":543:557   */\n  swap3\n  pop\n    /* \"#utility.yul\":598:601   */\n  dup7\n    /* \"#utility.yul\":593:595   */\n  dup4\n    /* \"#utility.yul\":588:590   */\n  dup6\n    /* \"#utility.yul\":580:586   */\n  dup9\n    /* \"#utility.yul\":576:591   */\n  add\n    /* \"#utility.yul\":572:596   */\n  add\n    /* \"#utility.yul\":569:602   */\n  gt\n    /* \"#utility.yul\":566:619   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":615:616   */\n  0x00\n    /* \"#utility.yul\":612:613   */\n  dup1\n    /* \"#utility.yul\":605:617   */\n  revert\n    /* \"#utility.yul\":566:619   */\ntag_30:\n    /* \"#utility.yul\":637:638   */\n  0x00\n    /* \"#utility.yul\":628:638   */\n  swap2\n  pop\n    /* \"#utility.yul\":647:780   */\ntag_31:\n    /* \"#utility.yul\":661:663   */\n  dup4\n    /* \"#utility.yul\":658:659   */\n  dup3\n    /* \"#utility.yul\":655:664   */\n  lt\n    /* \"#utility.yul\":647:780   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":749:763   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":745:768   */\n  dup4\n  add\n    /* \"#utility.yul\":739:769   */\n  mload\n    /* \"#utility.yul\":718:732   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":714:737   */\n  dup5\n  add\n    /* \"#utility.yul\":707:770   */\n  mstore\n    /* \"#utility.yul\":672:682   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":647:780   */\n  jump(tag_31)\ntag_33:\n    /* \"#utility.yul\":798:800   */\n  dup4\n    /* \"#utility.yul\":795:796   */\n  dup3\n    /* \"#utility.yul\":792:801   */\n  gt\n    /* \"#utility.yul\":789:869   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":857:858   */\n  0x00\n    /* \"#utility.yul\":852:854   */\n  dup4\n    /* \"#utility.yul\":847:849   */\n  dup6\n    /* \"#utility.yul\":839:845   */\n  dup4\n    /* \"#utility.yul\":835:850   */\n  add\n    /* \"#utility.yul\":831:855   */\n  add\n    /* \"#utility.yul\":824:859   */\n  mstore\n    /* \"#utility.yul\":789:869   */\ntag_34:\n    /* \"#utility.yul\":887:893   */\n  swap7\n    /* \"#utility.yul\":14:899   */\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":904:1466   */\ntag_3:\n    /* \"#utility.yul\":1003:1009   */\n  0x00\n    /* \"#utility.yul\":1011:1017   */\n  dup1\n    /* \"#utility.yul\":1064:1066   */\n  0x40\n    /* \"#utility.yul\":1052:1061   */\n  dup4\n    /* \"#utility.yul\":1043:1050   */\n  dup6\n    /* \"#utility.yul\":1039:1062   */\n  sub\n    /* \"#utility.yul\":1035:1067   */\n  slt\n    /* \"#utility.yul\":1032:1084   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1080:1081   */\n  0x00\n    /* \"#utility.yul\":1077:1078   */\n  dup1\n    /* \"#utility.yul\":1070:1082   */\n  revert\n    /* \"#utility.yul\":1032:1084   */\ntag_36:\n    /* \"#utility.yul\":1107:1123   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1172:1186   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1169:1203   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1199:1200   */\n  0x00\n    /* \"#utility.yul\":1196:1197   */\n  dup1\n    /* \"#utility.yul\":1189:1201   */\n  revert\n    /* \"#utility.yul\":1169:1203   */\ntag_37:\n    /* \"#utility.yul\":1222:1283   */\n  tag_38\n    /* \"#utility.yul\":1275:1282   */\n  dup7\n    /* \"#utility.yul\":1266:1272   */\n  dup4\n    /* \"#utility.yul\":1255:1264   */\n  dup8\n    /* \"#utility.yul\":1251:1273   */\n  add\n    /* \"#utility.yul\":1222:1283   */\n  tag_22\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1212:1283   */\n  swap4\n  pop\n    /* \"#utility.yul\":1329:1331   */\n  0x20\n    /* \"#utility.yul\":1318:1327   */\n  dup6\n    /* \"#utility.yul\":1314:1332   */\n  add\n    /* \"#utility.yul\":1308:1333   */\n  mload\n    /* \"#utility.yul\":1292:1333   */\n  swap2\n  pop\n    /* \"#utility.yul\":1358:1360   */\n  dup1\n    /* \"#utility.yul\":1348:1356   */\n  dup3\n    /* \"#utility.yul\":1345:1361   */\n  gt\n    /* \"#utility.yul\":1342:1378   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":1374:1375   */\n  0x00\n    /* \"#utility.yul\":1371:1372   */\n  dup1\n    /* \"#utility.yul\":1364:1376   */\n  revert\n    /* \"#utility.yul\":1342:1378   */\ntag_39:\n  pop\n    /* \"#utility.yul\":1397:1460   */\n  tag_40\n    /* \"#utility.yul\":1452:1459   */\n  dup6\n    /* \"#utility.yul\":1441:1449   */\n  dup3\n    /* \"#utility.yul\":1430:1439   */\n  dup7\n    /* \"#utility.yul\":1426:1450   */\n  add\n    /* \"#utility.yul\":1397:1460   */\n  tag_22\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1387:1460   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":904:1466   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1471:1851   */\ntag_11:\n    /* \"#utility.yul\":1550:1551   */\n  0x01\n    /* \"#utility.yul\":1546:1558   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1593:1605   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1614:1675   */\n  tag_42\n  jumpi\n    /* \"#utility.yul\":1668:1672   */\n  0x7f\n    /* \"#utility.yul\":1660:1666   */\n  dup3\n    /* \"#utility.yul\":1656:1673   */\n  and\n    /* \"#utility.yul\":1646:1673   */\n  swap2\n  pop\n    /* \"#utility.yul\":1614:1675   */\ntag_42:\n    /* \"#utility.yul\":1721:1723   */\n  0x20\n    /* \"#utility.yul\":1713:1719   */\n  dup3\n    /* \"#utility.yul\":1710:1724   */\n  lt\n    /* \"#utility.yul\":1690:1708   */\n  dup2\n    /* \"#utility.yul\":1687:1725   */\n  eq\n    /* \"#utility.yul\":1684:1845   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1767:1777   */\n  0x4e487b71\n    /* \"#utility.yul\":1762:1765   */\n  0xe0\n    /* \"#utility.yul\":1758:1778   */\n  shl\n    /* \"#utility.yul\":1755:1756   */\n  0x00\n    /* \"#utility.yul\":1748:1779   */\n  mstore\n    /* \"#utility.yul\":1802:1806   */\n  0x22\n    /* \"#utility.yul\":1799:1800   */\n  0x04\n    /* \"#utility.yul\":1792:1807   */\n  mstore\n    /* \"#utility.yul\":1830:1834   */\n  0x24\n    /* \"#utility.yul\":1827:1828   */\n  0x00\n    /* \"#utility.yul\":1820:1835   */\n  revert\n    /* \"#utility.yul\":1684:1845   */\ntag_43:\n  pop\n    /* \"#utility.yul\":1471:1851   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1856:1983   */\ntag_27:\n    /* \"#utility.yul\":1917:1927   */\n  0x4e487b71\n    /* \"#utility.yul\":1912:1915   */\n  0xe0\n    /* \"#utility.yul\":1908:1928   */\n  shl\n    /* \"#utility.yul\":1905:1906   */\n  0x00\n    /* \"#utility.yul\":1898:1929   */\n  mstore\n    /* \"#utility.yul\":1948:1952   */\n  0x41\n    /* \"#utility.yul\":1945:1946   */\n  0x04\n    /* \"#utility.yul\":1938:1953   */\n  mstore\n    /* \"#utility.yul\":1972:1976   */\n  0x24\n    /* \"#utility.yul\":1969:1970   */\n  0x00\n    /* \"#utility.yul\":1962:1977   */\n  revert\n    /* \"#utility.yul\":1856:1983   */\ntag_21:\n    /* \"wLONG/ERC20.sol\":1382:12565  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"wLONG/ERC20.sol\":1382:12565  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"wLONG/ERC20.sol\":2135:2233  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"wLONG/ERC20.sol\":4412:4609  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n        /* \"#utility.yul\":1405:1419   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1398:1420   */\n      iszero\n        /* \"#utility.yul\":1380:1421   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1368:1370   */\n      0x20\n        /* \"#utility.yul\":1353:1371   */\n      add\n        /* \"wLONG/ERC20.sol\":4412:4609  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_17\n        /* \"#utility.yul\":1240:1427   */\n      jump\n        /* \"wLONG/ERC20.sol\":3223:3329  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"wLONG/ERC20.sol\":3310:3322  _totalSupply */\n      sload(0x02)\n        /* \"wLONG/ERC20.sol\":3223:3329  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":4969:4994   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":4957:4959   */\n      0x20\n        /* \"#utility.yul\":4942:4960   */\n      add\n        /* \"wLONG/ERC20.sol\":3223:3329  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_17\n        /* \"#utility.yul\":4823:5000   */\n      jump\n        /* \"wLONG/ERC20.sol\":5171:5457  function transferFrom(... */\n    tag_6:\n      tag_19\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n        /* \"wLONG/ERC20.sol\":3072:3163  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"wLONG/ERC20.sol\":3154:3156  18 */\n      0x12\n        /* \"#utility.yul\":5147:5183   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5135:5137   */\n      0x20\n        /* \"#utility.yul\":5120:5138   */\n      add\n        /* \"wLONG/ERC20.sol\":3072:3163  function decimals() public view virtual override returns (uint8) {... */\n      tag_17\n        /* \"#utility.yul\":5005:5189   */\n      jump\n        /* \"wLONG/ERC20.sol\":5852:6088  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_19\n      tag_39\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n        /* \"wLONG/ERC20.sol\":3387:3512  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_25\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"wLONG/ERC20.sol\":3487:3505  _balances[account] */\n      and\n        /* \"wLONG/ERC20.sol\":3461:3468  uint256 */\n      0x00\n        /* \"wLONG/ERC20.sol\":3487:3505  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"wLONG/ERC20.sol\":3387:3512  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"wLONG/ERC20.sol\":2346:2448  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_15\n      tag_48\n      jump\t// in\n        /* \"wLONG/ERC20.sol\":6575:7004  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_19\n      tag_51\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n        /* \"wLONG/ERC20.sol\":3708:3897  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_19\n      tag_55\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n        /* \"wLONG/ERC20.sol\":3955:4104  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_25\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"wLONG/ERC20.sol\":4070:4088  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"wLONG/ERC20.sol\":4044:4051  uint256 */\n      0x00\n        /* \"wLONG/ERC20.sol\":4070:4088  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"wLONG/ERC20.sol\":4070:4081  _allowances */\n      0x01\n        /* \"wLONG/ERC20.sol\":4070:4088  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"wLONG/ERC20.sol\":4070:4097  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"wLONG/ERC20.sol\":3955:4104  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\n        /* \"wLONG/ERC20.sol\":2135:2233  function name() public view virtual override returns (string memory) {... */\n    tag_16:\n        /* \"wLONG/ERC20.sol\":2189:2202  string memory */\n      0x60\n        /* \"wLONG/ERC20.sol\":2221:2226  _name */\n      0x03\n        /* \"wLONG/ERC20.sol\":2214:2226  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"wLONG/ERC20.sol\":2135:2233  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"wLONG/ERC20.sol\":4412:4609  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_22:\n        /* \"wLONG/ERC20.sol\":4495:4499  bool */\n      0x00\n        /* \"wLONG/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"wLONG/ERC20.sol\":4549:4581  _approve(owner, spender, amount) */\n      tag_73\n        /* \"wLONG/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"wLONG/ERC20.sol\":4565:4572  spender */\n      dup6\n        /* \"wLONG/ERC20.sol\":4574:4580  amount */\n      dup6\n        /* \"wLONG/ERC20.sol\":4549:4557  _approve */\n      tag_74\n        /* \"wLONG/ERC20.sol\":4549:4581  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_73:\n      pop\n        /* \"wLONG/ERC20.sol\":4598:4602  true */\n      0x01\n      swap4\n        /* \"wLONG/ERC20.sol\":4412:4609  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"wLONG/ERC20.sol\":5171:5457  function transferFrom(... */\n    tag_32:\n        /* \"wLONG/ERC20.sol\":5298:5302  bool */\n      0x00\n        /* \"wLONG/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"wLONG/ERC20.sol\":5354:5392  _spendAllowance(from, spender, amount) */\n      tag_78\n        /* \"wLONG/ERC20.sol\":5370:5374  from */\n      dup6\n        /* \"wLONG/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"wLONG/ERC20.sol\":5385:5391  amount */\n      dup6\n        /* \"wLONG/ERC20.sol\":5354:5369  _spendAllowance */\n      tag_79\n        /* \"wLONG/ERC20.sol\":5354:5392  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_78:\n        /* \"wLONG/ERC20.sol\":5402:5429  _transfer(from, to, amount) */\n      tag_80\n        /* \"wLONG/ERC20.sol\":5412:5416  from */\n      dup6\n        /* \"wLONG/ERC20.sol\":5418:5420  to */\n      dup6\n        /* \"wLONG/ERC20.sol\":5422:5428  amount */\n      dup6\n        /* \"wLONG/ERC20.sol\":5402:5411  _transfer */\n      tag_81\n        /* \"wLONG/ERC20.sol\":5402:5429  _transfer(from, to, amount) */\n      jump\t// in\n    tag_80:\n      pop\n        /* \"wLONG/ERC20.sol\":5446:5450  true */\n      0x01\n      swap5\n        /* \"wLONG/ERC20.sol\":5171:5457  function transferFrom(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"wLONG/ERC20.sol\":5852:6088  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_40:\n        /* \"wLONG/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"wLONG/ERC20.sol\":5940:5944  bool */\n      0x00\n        /* \"wLONG/ERC20.sol\":6019:6037  _allowances[owner] */\n      dup2\n      dup2\n      mstore\n        /* \"wLONG/ERC20.sol\":6019:6030  _allowances */\n      0x01\n        /* \"wLONG/ERC20.sol\":6019:6037  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"wLONG/ERC20.sol\":6019:6046  _allowances[owner][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"wLONG/ERC20.sol\":5940:5944  bool */\n      swap1\n      swap2\n        /* \"wLONG/Context.sol\":719:729  msg.sender */\n      swap1\n        /* \"wLONG/ERC20.sol\":5994:6060  _approve(owner, spender, _allowances[owner][spender] + addedValue) */\n      tag_73\n      swap1\n        /* \"wLONG/Context.sol\":719:729  msg.sender */\n      dup3\n      swap1\n        /* \"wLONG/ERC20.sol\":6019:6046  _allowances[owner][spender] */\n      dup7\n      swap1\n        /* \"wLONG/ERC20.sol\":6019:6059  _allowances[owner][spender] + addedValue */\n      tag_86\n      swap1\n        /* \"wLONG/ERC20.sol\":6049:6059  addedValue */\n      dup8\n      swap1\n        /* \"wLONG/ERC20.sol\":6019:6059  _allowances[owner][spender] + addedValue */\n      tag_87\n      jump\t// in\n    tag_86:\n        /* \"wLONG/ERC20.sol\":5994:6002  _approve */\n      tag_74\n        /* \"wLONG/ERC20.sol\":5994:6060  _approve(owner, spender, _allowances[owner][spender] + addedValue) */\n      jump\t// in\n        /* \"wLONG/ERC20.sol\":2346:2448  function symbol() public view virtual override returns (string memory) {... */\n    tag_48:\n        /* \"wLONG/ERC20.sol\":2402:2415  string memory */\n      0x60\n        /* \"wLONG/ERC20.sol\":2434:2441  _symbol */\n      0x04\n        /* \"wLONG/ERC20.sol\":2427:2441  return _symbol */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n        /* \"wLONG/ERC20.sol\":6575:7004  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_52:\n        /* \"wLONG/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"wLONG/ERC20.sol\":6668:6672  bool */\n      0x00\n        /* \"wLONG/ERC20.sol\":6749:6767  _allowances[owner] */\n      dup2\n      dup2\n      mstore\n        /* \"wLONG/ERC20.sol\":6749:6760  _allowances */\n      0x01\n        /* \"wLONG/ERC20.sol\":6749:6767  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"wLONG/ERC20.sol\":6749:6776  _allowances[owner][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"wLONG/ERC20.sol\":6668:6672  bool */\n      swap1\n      swap2\n        /* \"wLONG/Context.sol\":719:729  msg.sender */\n      swap1\n        /* \"wLONG/ERC20.sol\":6794:6829  currentAllowance >= subtractedValue */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"wLONG/ERC20.sol\":6786:6871  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_97\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4619:4621   */\n      0x20\n        /* \"wLONG/ERC20.sol\":6786:6871  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4601:4622   */\n      mstore\n        /* \"#utility.yul\":4658:4660   */\n      0x25\n        /* \"#utility.yul\":4638:4656   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4631:4661   */\n      mstore\n        /* \"#utility.yul\":4697:4731   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":4677:4695   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4670:4732   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":4748:4766   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4741:4776   */\n      mstore\n        /* \"#utility.yul\":4793:4812   */\n      0x84\n      add\n        /* \"wLONG/ERC20.sol\":6786:6871  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_97:\n        /* \"wLONG/ERC20.sol\":6905:6965  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_80\n        /* \"wLONG/ERC20.sol\":6914:6919  owner */\n      dup3\n        /* \"wLONG/ERC20.sol\":6921:6928  spender */\n      dup7\n        /* \"wLONG/ERC20.sol\":6949:6964  subtractedValue */\n      dup7\n        /* \"wLONG/ERC20.sol\":6930:6946  currentAllowance */\n      dup5\n        /* \"wLONG/ERC20.sol\":6930:6964  currentAllowance - subtractedValue */\n      sub\n        /* \"wLONG/ERC20.sol\":6905:6913  _approve */\n      tag_74\n        /* \"wLONG/ERC20.sol\":6905:6965  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"wLONG/ERC20.sol\":3708:3897  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_56:\n        /* \"wLONG/ERC20.sol\":3787:3791  bool */\n      0x00\n        /* \"wLONG/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"wLONG/ERC20.sol\":3841:3869  _transfer(owner, to, amount) */\n      tag_73\n        /* \"wLONG/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"wLONG/ERC20.sol\":3858:3860  to */\n      dup6\n        /* \"wLONG/ERC20.sol\":3862:3868  amount */\n      dup6\n        /* \"wLONG/ERC20.sol\":3841:3850  _transfer */\n      tag_81\n        /* \"wLONG/ERC20.sol\":3841:3869  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"wLONG/ERC20.sol\":10118:10488  function _approve(... */\n    tag_74:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"wLONG/ERC20.sol\":10249:10268  owner != address(0) */\n      dup4\n      and\n        /* \"wLONG/ERC20.sol\":10241:10309  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_107\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4214:4216   */\n      0x20\n        /* \"wLONG/ERC20.sol\":10241:10309  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4196:4217   */\n      mstore\n        /* \"#utility.yul\":4253:4255   */\n      0x24\n        /* \"#utility.yul\":4233:4251   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4226:4256   */\n      mstore\n        /* \"#utility.yul\":4292:4326   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":4272:4290   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4265:4327   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":4343:4361   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4336:4370   */\n      mstore\n        /* \"#utility.yul\":4387:4406   */\n      0x84\n      add\n        /* \"wLONG/ERC20.sol\":10241:10309  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_98\n        /* \"#utility.yul\":4012:4412   */\n      jump\n        /* \"wLONG/ERC20.sol\":10241:10309  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_107:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"wLONG/ERC20.sol\":10327:10348  spender != address(0) */\n      dup3\n      and\n        /* \"wLONG/ERC20.sol\":10319:10387  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_110\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2640:2642   */\n      0x20\n        /* \"wLONG/ERC20.sol\":10319:10387  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2622:2643   */\n      mstore\n        /* \"#utility.yul\":2679:2681   */\n      0x22\n        /* \"#utility.yul\":2659:2677   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2652:2682   */\n      mstore\n        /* \"#utility.yul\":2718:2752   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":2698:2716   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2691:2753   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":2769:2787   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2762:2794   */\n      mstore\n        /* \"#utility.yul\":2811:2830   */\n      0x84\n      add\n        /* \"wLONG/ERC20.sol\":10319:10387  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_98\n        /* \"#utility.yul\":2438:2836   */\n      jump\n        /* \"wLONG/ERC20.sol\":10319:10387  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_110:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"wLONG/ERC20.sol\":10398:10416  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"wLONG/ERC20.sol\":10398:10409  _allowances */\n      0x01\n        /* \"wLONG/ERC20.sol\":10398:10416  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"wLONG/ERC20.sol\":10398:10425  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"wLONG/ERC20.sol\":10398:10434  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"wLONG/ERC20.sol\":10449:10481  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":4969:4994   */\n      dup5\n      dup2\n      mstore\n        /* \"wLONG/ERC20.sol\":10449:10481  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":4942:4960   */\n      add\n        /* \"wLONG/ERC20.sol\":10449:10481  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"wLONG/ERC20.sol\":10118:10488  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"wLONG/ERC20.sol\":10765:11206  function _spendAllowance(... */\n    tag_79:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"wLONG/ERC20.sol\":4070:4088  _allowances[owner] */\n      dup4\n      dup2\n      and\n        /* \"wLONG/ERC20.sol\":10895:10919  uint256 currentAllowance */\n      0x00\n        /* \"wLONG/ERC20.sol\":4070:4088  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"wLONG/ERC20.sol\":4070:4081  _allowances */\n      0x01\n        /* \"wLONG/ERC20.sol\":4070:4088  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"wLONG/ERC20.sol\":4070:4097  _allowances[owner][spender] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      not(0x00)\n        /* \"wLONG/ERC20.sol\":10961:10998  currentAllowance != type(uint256).max */\n      dup2\n      eq\n        /* \"wLONG/ERC20.sol\":10957:11200  if (currentAllowance != type(uint256).max) {... */\n      tag_120\n      jumpi\n        /* \"wLONG/ERC20.sol\":11042:11048  amount */\n      dup2\n        /* \"wLONG/ERC20.sol\":11022:11038  currentAllowance */\n      dup2\n        /* \"wLONG/ERC20.sol\":11022:11048  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"wLONG/ERC20.sol\":11014:11082  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_117\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3043:3045   */\n      0x20\n        /* \"wLONG/ERC20.sol\":11014:11082  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3025:3046   */\n      mstore\n        /* \"#utility.yul\":3082:3084   */\n      0x1d\n        /* \"#utility.yul\":3062:3080   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3055:3085   */\n      mstore\n        /* \"#utility.yul\":3121:3152   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":3101:3119   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3094:3153   */\n      mstore\n        /* \"#utility.yul\":3170:3188   */\n      0x64\n      add\n        /* \"wLONG/ERC20.sol\":11014:11082  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_98\n        /* \"#utility.yul\":2841:3194   */\n      jump\n        /* \"wLONG/ERC20.sol\":11014:11082  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_117:\n        /* \"wLONG/ERC20.sol\":11124:11175  _approve(owner, spender, currentAllowance - amount) */\n      tag_120\n        /* \"wLONG/ERC20.sol\":11133:11138  owner */\n      dup5\n        /* \"wLONG/ERC20.sol\":11140:11147  spender */\n      dup5\n        /* \"wLONG/ERC20.sol\":11168:11174  amount */\n      dup5\n        /* \"wLONG/ERC20.sol\":11149:11165  currentAllowance */\n      dup5\n        /* \"wLONG/ERC20.sol\":11149:11174  currentAllowance - amount */\n      sub\n        /* \"wLONG/ERC20.sol\":11124:11132  _approve */\n      tag_74\n        /* \"wLONG/ERC20.sol\":11124:11175  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_120:\n        /* \"wLONG/ERC20.sol\":10885:11206  {... */\n      pop\n        /* \"wLONG/ERC20.sol\":10765:11206  function _spendAllowance(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"wLONG/ERC20.sol\":7467:8122  function _transfer(... */\n    tag_81:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"wLONG/ERC20.sol\":7593:7611  from != address(0) */\n      dup4\n      and\n        /* \"wLONG/ERC20.sol\":7585:7653  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_122\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3808:3810   */\n      0x20\n        /* \"wLONG/ERC20.sol\":7585:7653  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3790:3811   */\n      mstore\n        /* \"#utility.yul\":3847:3849   */\n      0x25\n        /* \"#utility.yul\":3827:3845   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3820:3850   */\n      mstore\n        /* \"#utility.yul\":3886:3920   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":3866:3884   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3859:3921   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":3937:3955   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3930:3965   */\n      mstore\n        /* \"#utility.yul\":3982:4001   */\n      0x84\n      add\n        /* \"wLONG/ERC20.sol\":7585:7653  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_98\n        /* \"#utility.yul\":3606:4007   */\n      jump\n        /* \"wLONG/ERC20.sol\":7585:7653  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_122:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"wLONG/ERC20.sol\":7671:7687  to != address(0) */\n      dup3\n      and\n        /* \"wLONG/ERC20.sol\":7663:7727  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_125\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2236:2238   */\n      0x20\n        /* \"wLONG/ERC20.sol\":7663:7727  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2218:2239   */\n      mstore\n        /* \"#utility.yul\":2275:2277   */\n      0x23\n        /* \"#utility.yul\":2255:2273   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2248:2278   */\n      mstore\n        /* \"#utility.yul\":2314:2348   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":2294:2312   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2287:2349   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":2365:2383   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2358:2391   */\n      mstore\n        /* \"#utility.yul\":2408:2427   */\n      0x84\n      add\n        /* \"wLONG/ERC20.sol\":7663:7727  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_98\n        /* \"#utility.yul\":2034:2433   */\n      jump\n        /* \"wLONG/ERC20.sol\":7663:7727  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_125:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"wLONG/ERC20.sol\":7811:7826  _balances[from] */\n      dup4\n      and\n        /* \"wLONG/ERC20.sol\":7789:7808  uint256 fromBalance */\n      0x00\n        /* \"wLONG/ERC20.sol\":7811:7826  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"wLONG/ERC20.sol\":7844:7865  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"wLONG/ERC20.sol\":7836:7908  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_128\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3401:3403   */\n      0x20\n        /* \"wLONG/ERC20.sol\":7836:7908  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3383:3404   */\n      mstore\n        /* \"#utility.yul\":3440:3442   */\n      0x26\n        /* \"#utility.yul\":3420:3438   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3413:3443   */\n      mstore\n        /* \"#utility.yul\":3479:3513   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":3459:3477   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3452:3514   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":3530:3548   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3523:3559   */\n      mstore\n        /* \"#utility.yul\":3576:3595   */\n      0x84\n      add\n        /* \"wLONG/ERC20.sol\":7836:7908  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_98\n        /* \"#utility.yul\":3199:3601   */\n      jump\n        /* \"wLONG/ERC20.sol\":7836:7908  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_128:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"wLONG/ERC20.sol\":7942:7957  _balances[from] */\n      dup1\n      dup6\n      and\n        /* \"wLONG/ERC20.sol\":7942:7951  _balances */\n      0x00\n        /* \"wLONG/ERC20.sol\":7942:7957  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"wLONG/ERC20.sol\":7960:7980  fromBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"wLONG/ERC20.sol\":7942:7980  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"wLONG/ERC20.sol\":8000:8013  _balances[to] */\n      swap2\n      dup6\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"wLONG/ERC20.sol\":8000:8023  _balances[to] += amount */\n      dup1\n      sload\n        /* \"wLONG/ERC20.sol\":7974:7980  amount */\n      dup5\n      swap3\n        /* \"wLONG/ERC20.sol\":7942:7951  _balances */\n      swap1\n        /* \"wLONG/ERC20.sol\":8000:8023  _balances[to] += amount */\n      tag_131\n      swap1\n        /* \"wLONG/ERC20.sol\":7974:7980  amount */\n      dup5\n      swap1\n        /* \"wLONG/ERC20.sol\":8000:8023  _balances[to] += amount */\n      tag_87\n      jump\t// in\n    tag_131:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"wLONG/ERC20.sol\":8054:8056  to */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"wLONG/ERC20.sol\":8039:8065  Transfer(from, to, amount) */\n      and\n        /* \"wLONG/ERC20.sol\":8048:8052  from */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"wLONG/ERC20.sol\":8039:8065  Transfer(from, to, amount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"wLONG/ERC20.sol\":8058:8064  amount */\n      dup5\n        /* \"wLONG/ERC20.sol\":8039:8065  Transfer(from, to, amount) */\n      mload(0x40)\n      tag_132\n      swap2\n        /* \"#utility.yul\":4969:4994   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4957:4959   */\n      0x20\n        /* \"#utility.yul\":4942:4960   */\n      add\n      swap1\n        /* \"#utility.yul\":4823:5000   */\n      jump\n        /* \"wLONG/ERC20.sol\":8039:8065  Transfer(from, to, amount) */\n    tag_132:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"wLONG/ERC20.sol\":7575:8122  {... */\n      pop\n        /* \"wLONG/ERC20.sol\":7467:8122  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:187   */\n    tag_134:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_136\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_136:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:378   */\n    tag_44:\n        /* \"#utility.yul\":251:257   */\n      0x00\n        /* \"#utility.yul\":304:306   */\n      0x20\n        /* \"#utility.yul\":292:301   */\n      dup3\n        /* \"#utility.yul\":283:290   */\n      dup5\n        /* \"#utility.yul\":279:302   */\n      sub\n        /* \"#utility.yul\":275:307   */\n      slt\n        /* \"#utility.yul\":272:324   */\n      iszero\n      tag_138\n      jumpi\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":272:324   */\n    tag_138:\n        /* \"#utility.yul\":343:372   */\n      tag_139\n        /* \"#utility.yul\":362:371   */\n      dup3\n        /* \"#utility.yul\":343:372   */\n      tag_134\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":333:372   */\n      swap4\n        /* \"#utility.yul\":192:378   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":383:643   */\n    tag_60:\n        /* \"#utility.yul\":451:457   */\n      0x00\n        /* \"#utility.yul\":459:465   */\n      dup1\n        /* \"#utility.yul\":512:514   */\n      0x40\n        /* \"#utility.yul\":500:509   */\n      dup4\n        /* \"#utility.yul\":491:498   */\n      dup6\n        /* \"#utility.yul\":487:510   */\n      sub\n        /* \"#utility.yul\":483:515   */\n      slt\n        /* \"#utility.yul\":480:532   */\n      iszero\n      tag_141\n      jumpi\n        /* \"#utility.yul\":528:529   */\n      0x00\n        /* \"#utility.yul\":525:526   */\n      dup1\n        /* \"#utility.yul\":518:530   */\n      revert\n        /* \"#utility.yul\":480:532   */\n    tag_141:\n        /* \"#utility.yul\":551:580   */\n      tag_142\n        /* \"#utility.yul\":570:579   */\n      dup4\n        /* \"#utility.yul\":551:580   */\n      tag_134\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":541:580   */\n      swap2\n      pop\n        /* \"#utility.yul\":599:637   */\n      tag_143\n        /* \"#utility.yul\":633:635   */\n      0x20\n        /* \"#utility.yul\":622:631   */\n      dup5\n        /* \"#utility.yul\":618:636   */\n      add\n        /* \"#utility.yul\":599:637   */\n      tag_134\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":589:637   */\n      swap1\n      pop\n        /* \"#utility.yul\":383:643   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":648:976   */\n    tag_31:\n        /* \"#utility.yul\":725:731   */\n      0x00\n        /* \"#utility.yul\":733:739   */\n      dup1\n        /* \"#utility.yul\":741:747   */\n      0x00\n        /* \"#utility.yul\":794:796   */\n      0x60\n        /* \"#utility.yul\":782:791   */\n      dup5\n        /* \"#utility.yul\":773:780   */\n      dup7\n        /* \"#utility.yul\":769:792   */\n      sub\n        /* \"#utility.yul\":765:797   */\n      slt\n        /* \"#utility.yul\":762:814   */\n      iszero\n      tag_145\n      jumpi\n        /* \"#utility.yul\":810:811   */\n      0x00\n        /* \"#utility.yul\":807:808   */\n      dup1\n        /* \"#utility.yul\":800:812   */\n      revert\n        /* \"#utility.yul\":762:814   */\n    tag_145:\n        /* \"#utility.yul\":833:862   */\n      tag_146\n        /* \"#utility.yul\":852:861   */\n      dup5\n        /* \"#utility.yul\":833:862   */\n      tag_134\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":823:862   */\n      swap3\n      pop\n        /* \"#utility.yul\":881:919   */\n      tag_147\n        /* \"#utility.yul\":915:917   */\n      0x20\n        /* \"#utility.yul\":904:913   */\n      dup6\n        /* \"#utility.yul\":900:918   */\n      add\n        /* \"#utility.yul\":881:919   */\n      tag_134\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":871:919   */\n      swap2\n      pop\n        /* \"#utility.yul\":966:968   */\n      0x40\n        /* \"#utility.yul\":955:964   */\n      dup5\n        /* \"#utility.yul\":951:969   */\n      add\n        /* \"#utility.yul\":938:970   */\n      calldataload\n        /* \"#utility.yul\":928:970   */\n      swap1\n      pop\n        /* \"#utility.yul\":648:976   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":981:1235   */\n    tag_21:\n        /* \"#utility.yul\":1049:1055   */\n      0x00\n        /* \"#utility.yul\":1057:1063   */\n      dup1\n        /* \"#utility.yul\":1110:1112   */\n      0x40\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1089:1096   */\n      dup6\n        /* \"#utility.yul\":1085:1108   */\n      sub\n        /* \"#utility.yul\":1081:1113   */\n      slt\n        /* \"#utility.yul\":1078:1130   */\n      iszero\n      tag_149\n      jumpi\n        /* \"#utility.yul\":1126:1127   */\n      0x00\n        /* \"#utility.yul\":1123:1124   */\n      dup1\n        /* \"#utility.yul\":1116:1128   */\n      revert\n        /* \"#utility.yul\":1078:1130   */\n    tag_149:\n        /* \"#utility.yul\":1149:1178   */\n      tag_150\n        /* \"#utility.yul\":1168:1177   */\n      dup4\n        /* \"#utility.yul\":1149:1178   */\n      tag_134\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":1139:1178   */\n      swap5\n        /* \"#utility.yul\":1225:1227   */\n      0x20\n        /* \"#utility.yul\":1210:1228   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1197:1229   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":981:1235   */\n      jump\t// out\n        /* \"#utility.yul\":1432:2029   */\n    tag_18:\n        /* \"#utility.yul\":1544:1548   */\n      0x00\n        /* \"#utility.yul\":1573:1575   */\n      0x20\n        /* \"#utility.yul\":1602:1604   */\n      dup1\n        /* \"#utility.yul\":1591:1600   */\n      dup4\n        /* \"#utility.yul\":1584:1605   */\n      mstore\n        /* \"#utility.yul\":1634:1640   */\n      dup4\n        /* \"#utility.yul\":1628:1641   */\n      mload\n        /* \"#utility.yul\":1677:1683   */\n      dup1\n        /* \"#utility.yul\":1672:1674   */\n      dup3\n        /* \"#utility.yul\":1661:1670   */\n      dup6\n        /* \"#utility.yul\":1657:1675   */\n      add\n        /* \"#utility.yul\":1650:1684   */\n      mstore\n        /* \"#utility.yul\":1702:1703   */\n      0x00\n        /* \"#utility.yul\":1712:1852   */\n    tag_153:\n        /* \"#utility.yul\":1726:1732   */\n      dup2\n        /* \"#utility.yul\":1723:1724   */\n      dup2\n        /* \"#utility.yul\":1720:1733   */\n      lt\n        /* \"#utility.yul\":1712:1852   */\n      iszero\n      tag_155\n      jumpi\n        /* \"#utility.yul\":1821:1835   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":1817:1840   */\n      dup4\n      add\n        /* \"#utility.yul\":1811:1841   */\n      mload\n        /* \"#utility.yul\":1787:1804   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":1806:1808   */\n      0x40\n        /* \"#utility.yul\":1783:1809   */\n      add\n        /* \"#utility.yul\":1776:1842   */\n      mstore\n        /* \"#utility.yul\":1741:1751   */\n      dup3\n      add\n        /* \"#utility.yul\":1712:1852   */\n      jump(tag_153)\n    tag_155:\n        /* \"#utility.yul\":1870:1876   */\n      dup2\n        /* \"#utility.yul\":1867:1868   */\n      dup2\n        /* \"#utility.yul\":1864:1877   */\n      gt\n        /* \"#utility.yul\":1861:1952   */\n      iszero\n      tag_156\n      jumpi\n        /* \"#utility.yul\":1940:1941   */\n      0x00\n        /* \"#utility.yul\":1935:1937   */\n      0x40\n        /* \"#utility.yul\":1926:1932   */\n      dup4\n        /* \"#utility.yul\":1915:1924   */\n      dup8\n        /* \"#utility.yul\":1911:1933   */\n      add\n        /* \"#utility.yul\":1907:1938   */\n      add\n        /* \"#utility.yul\":1900:1942   */\n      mstore\n        /* \"#utility.yul\":1861:1952   */\n    tag_156:\n      pop\n        /* \"#utility.yul\":2013:2015   */\n      0x1f\n        /* \"#utility.yul\":1992:2007   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1988:2017   */\n      and\n        /* \"#utility.yul\":1973:2018   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":2020:2022   */\n      0x40\n        /* \"#utility.yul\":1969:2023   */\n      add\n      swap4\n        /* \"#utility.yul\":1432:2029   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5194:5419   */\n    tag_87:\n        /* \"#utility.yul\":5234:5237   */\n      0x00\n        /* \"#utility.yul\":5265:5266   */\n      dup3\n        /* \"#utility.yul\":5261:5267   */\n      not\n        /* \"#utility.yul\":5258:5259   */\n      dup3\n        /* \"#utility.yul\":5255:5268   */\n      gt\n        /* \"#utility.yul\":5252:5388   */\n      iszero\n      tag_167\n      jumpi\n        /* \"#utility.yul\":5310:5320   */\n      0x4e487b71\n        /* \"#utility.yul\":5305:5308   */\n      0xe0\n        /* \"#utility.yul\":5301:5321   */\n      shl\n        /* \"#utility.yul\":5298:5299   */\n      0x00\n        /* \"#utility.yul\":5291:5322   */\n      mstore\n        /* \"#utility.yul\":5345:5349   */\n      0x11\n        /* \"#utility.yul\":5342:5343   */\n      0x04\n        /* \"#utility.yul\":5335:5350   */\n      mstore\n        /* \"#utility.yul\":5373:5377   */\n      0x24\n        /* \"#utility.yul\":5370:5371   */\n      0x00\n        /* \"#utility.yul\":5363:5378   */\n      revert\n        /* \"#utility.yul\":5252:5388   */\n    tag_167:\n      pop\n        /* \"#utility.yul\":5404:5413   */\n      add\n      swap1\n        /* \"#utility.yul\":5194:5419   */\n      jump\t// out\n        /* \"#utility.yul\":5424:5804   */\n    tag_65:\n        /* \"#utility.yul\":5503:5504   */\n      0x01\n        /* \"#utility.yul\":5499:5511   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":5546:5558   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":5567:5628   */\n      tag_169\n      jumpi\n        /* \"#utility.yul\":5621:5625   */\n      0x7f\n        /* \"#utility.yul\":5613:5619   */\n      dup3\n        /* \"#utility.yul\":5609:5626   */\n      and\n        /* \"#utility.yul\":5599:5626   */\n      swap2\n      pop\n        /* \"#utility.yul\":5567:5628   */\n    tag_169:\n        /* \"#utility.yul\":5674:5676   */\n      0x20\n        /* \"#utility.yul\":5666:5672   */\n      dup3\n        /* \"#utility.yul\":5663:5677   */\n      lt\n        /* \"#utility.yul\":5643:5661   */\n      dup2\n        /* \"#utility.yul\":5640:5678   */\n      eq\n        /* \"#utility.yul\":5637:5798   */\n      iszero\n      tag_170\n      jumpi\n        /* \"#utility.yul\":5720:5730   */\n      0x4e487b71\n        /* \"#utility.yul\":5715:5718   */\n      0xe0\n        /* \"#utility.yul\":5711:5731   */\n      shl\n        /* \"#utility.yul\":5708:5709   */\n      0x00\n        /* \"#utility.yul\":5701:5732   */\n      mstore\n        /* \"#utility.yul\":5755:5759   */\n      0x22\n        /* \"#utility.yul\":5752:5753   */\n      0x04\n        /* \"#utility.yul\":5745:5760   */\n      mstore\n        /* \"#utility.yul\":5783:5787   */\n      0x24\n        /* \"#utility.yul\":5780:5781   */\n      0x00\n        /* \"#utility.yul\":5773:5788   */\n      revert\n        /* \"#utility.yul\":5637:5798   */\n    tag_170:\n      pop\n        /* \"#utility.yul\":5424:5804   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220694807b36a8ef4704e51683eafa1ee420ad855213c30eb8ea0291860dacd824b64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_66": {
									"entryPoint": null,
									"id": 66,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 270,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 453,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"extract_byte_array_length": {
									"entryPoint": 559,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 620,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1985:6",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "78:821:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "127:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "136:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "129:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "129:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "129:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "106:6:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "114:4:6",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "102:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "102:17:6"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "121:3:6"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "98:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "98:27:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "91:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "91:35:6"
															},
															"nodeType": "YulIf",
															"src": "88:55:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "152:23:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "168:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "162:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "162:13:6"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "156:2:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "184:28:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "202:2:6",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "206:1:6",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "198:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "198:10:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "210:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "194:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "194:18:6"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "188:2:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "235:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "237:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "237:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "237:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "227:2:6"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "231:2:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "224:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "224:10:6"
															},
															"nodeType": "YulIf",
															"src": "221:36:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "266:17:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "280:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "276:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "276:7:6"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "270:2:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "292:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "312:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "306:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "306:9:6"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "296:6:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "324:71:6",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "346:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "370:2:6"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "374:4:6",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "366:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "366:13:6"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "381:2:6"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "362:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "362:22:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "386:2:6",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "358:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "358:31:6"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "391:2:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "354:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "354:40:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "342:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "342:53:6"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "328:10:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "454:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "456:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "456:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "456:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "413:10:6"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "425:2:6"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "410:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "410:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "433:10:6"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "445:6:6"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "430:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "430:22:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "407:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "407:46:6"
															},
															"nodeType": "YulIf",
															"src": "404:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "492:2:6",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "496:10:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "485:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "485:22:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "485:22:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "523:6:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "531:2:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "516:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "516:18:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "516:18:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "543:14:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "553:4:6",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "547:2:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "603:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "612:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "615:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "605:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "605:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "605:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "580:6:6"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "588:2:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "576:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "576:15:6"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "593:2:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "572:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "572:24:6"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "598:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "569:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "569:33:6"
															},
															"nodeType": "YulIf",
															"src": "566:53:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "628:10:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "637:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "632:1:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "693:87:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "722:6:6"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "730:1:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "718:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "718:14:6"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "734:2:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "714:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "714:23:6"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "753:6:6"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "761:1:6"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "749:3:6"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "749:14:6"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "765:2:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "745:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "745:23:6"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "739:5:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "739:30:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "707:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "707:63:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "707:63:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "658:1:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "661:2:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "655:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "655:9:6"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "665:19:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "667:15:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "676:1:6"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "679:2:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "672:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "672:10:6"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "667:1:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "651:3:6",
																"statements": []
															},
															"src": "647:133:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "810:59:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "839:6:6"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "847:2:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "835:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "835:15:6"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "852:2:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "831:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "831:24:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "857:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "824:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "824:35:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "824:35:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "795:1:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "798:2:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "792:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "792:9:6"
															},
															"nodeType": "YulIf",
															"src": "789:80:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "878:15:6",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "887:6:6"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "878:5:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "52:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "60:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "68:5:6",
														"type": ""
													}
												],
												"src": "14:885:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1022:444:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1068:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1077:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1080:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1070:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1070:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1070:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1043:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1052:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1039:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1039:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1064:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1035:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1035:32:6"
															},
															"nodeType": "YulIf",
															"src": "1032:52:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1093:30:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1113:9:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1107:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1107:16:6"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1097:6:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1132:28:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1150:2:6",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1154:1:6",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1146:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1146:10:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1158:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1142:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1142:18:6"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1136:2:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1187:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1196:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1199:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1189:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1189:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1189:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1175:6:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1183:2:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1172:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1172:14:6"
															},
															"nodeType": "YulIf",
															"src": "1169:34:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1212:71:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1255:9:6"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1266:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1251:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1251:22:6"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1275:7:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1222:28:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1222:61:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1292:41:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1318:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1329:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1314:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1314:18:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1308:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1308:25:6"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1296:8:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1362:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1371:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1374:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1364:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1364:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1364:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1348:8:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1358:2:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1345:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1345:16:6"
															},
															"nodeType": "YulIf",
															"src": "1342:36:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1387:73:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1430:9:6"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1441:8:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1426:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1426:24:6"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1452:7:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1397:28:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1397:63:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1387:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "980:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "991:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1003:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1011:6:6",
														"type": ""
													}
												],
												"src": "904:562:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1526:325:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1536:22:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1550:1:6",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1553:4:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1546:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1546:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1536:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1567:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1597:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1603:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1593:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1593:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1571:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1644:31:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1646:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1660:6:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1668:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1656:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1656:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1646:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1624:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1617:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1617:26:6"
															},
															"nodeType": "YulIf",
															"src": "1614:61:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1734:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1755:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1762:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1767:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1758:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1758:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1748:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1748:31:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1748:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1799:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1802:4:6",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1792:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1792:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1792:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1827:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1830:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1820:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1820:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1820:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1690:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1713:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1721:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1710:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1710:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1687:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1687:38:6"
															},
															"nodeType": "YulIf",
															"src": "1684:161:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1506:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1515:6:6",
														"type": ""
													}
												],
												"src": "1471:380:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1888:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1905:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1912:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1917:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1908:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1908:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1898:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1898:31:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1898:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1945:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1948:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1938:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1938:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1938:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1969:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1972:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1962:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1962:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1962:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1856:127:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), 0)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162000b6138038062000b618339810160408190526200003491620001c5565b81516200004990600390602085019062000068565b5080516200005f90600490602084019062000068565b50505062000282565b82805462000076906200022f565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b600082601f8301126200012057600080fd5b81516001600160401b03808211156200013d576200013d6200026c565b604051601f8301601f19908116603f011681019082821181831017156200016857620001686200026c565b816040528381526020925086838588010111156200018557600080fd5b600091505b83821015620001a957858201830151818301840152908201906200018a565b83821115620001bb5760008385830101525b9695505050505050565b60008060408385031215620001d957600080fd5b82516001600160401b0380821115620001f157600080fd5b620001ff868387016200010e565b935060208501519150808211156200021657600080fd5b5062000225858286016200010e565b9150509250929050565b600181811c908216806200024457607f821691505b602082108114156200026657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6108cf80620002926000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101c6565b6040516100c391906107e3565b60405180910390f35b6100df6100da3660046107b9565b610258565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f36600461077d565b610270565b604051601281526020016100c3565b6100df6101313660046107b9565b610294565b6100f3610144366004610728565b6001600160a01b031660009081526020819052604090205490565b6100b66102d3565b6100df6101753660046107b9565b6102e2565b6100df6101883660046107b9565b610379565b6100f361019b36600461074a565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101d59061085e565b80601f01602080910402602001604051908101604052809291908181526020018280546102019061085e565b801561024e5780601f106102235761010080835404028352916020019161024e565b820191906000526020600020905b81548152906001019060200180831161023157829003601f168201915b5050505050905090565b600033610266818585610387565b5060019392505050565b60003361027e8582856104ab565b61028985858561053d565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919061026690829086906102ce908790610838565b610387565b6060600480546101d59061085e565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091908381101561036c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102898286868403610387565b60003361026681858561053d565b6001600160a01b0383166103e95760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610363565b6001600160a01b03821661044a5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610363565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610537578181101561052a5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610363565b6105378484848403610387565b50505050565b6001600160a01b0383166105a15760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610363565b6001600160a01b0382166106035760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610363565b6001600160a01b0383166000908152602081905260409020548181101561067b5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610363565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106b2908490610838565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106fe91815260200190565b60405180910390a350505050565b80356001600160a01b038116811461072357600080fd5b919050565b60006020828403121561073a57600080fd5b6107438261070c565b9392505050565b6000806040838503121561075d57600080fd5b6107668361070c565b91506107746020840161070c565b90509250929050565b60008060006060848603121561079257600080fd5b61079b8461070c565b92506107a96020850161070c565b9150604084013590509250925092565b600080604083850312156107cc57600080fd5b6107d58361070c565b946020939093013593505050565b600060208083528351808285015260005b81811015610810578581018301518582016040015282016107f4565b81811115610822576000604083870101525b50601f01601f1916929092016040019392505050565b6000821982111561085957634e487b7160e01b600052601160045260246000fd5b500190565b600181811c9082168061087257607f821691505b6020821081141561089357634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220694807b36a8ef4704e51683eafa1ee420ad855213c30eb8ea0291860dacd824b64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xB61 CODESIZE SUB DUP1 PUSH3 0xB61 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x1C5 JUMP JUMPDEST DUP2 MLOAD PUSH3 0x49 SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x5F SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP POP POP PUSH3 0x282 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x76 SWAP1 PUSH3 0x22F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x9A JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xB5 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xE5 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xE5 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xC8 JUMP JUMPDEST POP PUSH3 0xF3 SWAP3 SWAP2 POP PUSH3 0xF7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0xF3 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0xF8 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x13D JUMPI PUSH3 0x13D PUSH3 0x26C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x168 JUMPI PUSH3 0x168 PUSH3 0x26C JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x1A9 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x18A JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x1BB JUMPI PUSH1 0x0 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x1F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1FF DUP7 DUP4 DUP8 ADD PUSH3 0x10E JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x216 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x225 DUP6 DUP3 DUP7 ADD PUSH3 0x10E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x244 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x266 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x8CF DUP1 PUSH3 0x292 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x7E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x7B9 JUMP JUMPDEST PUSH2 0x258 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x77D JUMP JUMPDEST PUSH2 0x270 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x7B9 JUMP JUMPDEST PUSH2 0x294 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x728 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x2D3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x7B9 JUMP JUMPDEST PUSH2 0x2E2 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x7B9 JUMP JUMPDEST PUSH2 0x379 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x74A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x85E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x201 SWAP1 PUSH2 0x85E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x24E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x223 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x24E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x231 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x266 DUP2 DUP6 DUP6 PUSH2 0x387 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x27E DUP6 DUP3 DUP6 PUSH2 0x4AB JUMP JUMPDEST PUSH2 0x289 DUP6 DUP6 DUP6 PUSH2 0x53D JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x266 SWAP1 DUP3 SWAP1 DUP7 SWAP1 PUSH2 0x2CE SWAP1 DUP8 SWAP1 PUSH2 0x838 JUMP JUMPDEST PUSH2 0x387 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x85E JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP4 DUP2 LT ISZERO PUSH2 0x36C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x289 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x387 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x266 DUP2 DUP6 DUP6 PUSH2 0x53D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x363 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x44A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x363 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x537 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x52A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x363 JUMP JUMPDEST PUSH2 0x537 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x387 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x363 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x603 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x363 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x67B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x363 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6B2 SWAP1 DUP5 SWAP1 PUSH2 0x838 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6FE SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x723 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x73A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x743 DUP3 PUSH2 0x70C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x75D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x766 DUP4 PUSH2 0x70C JUMP JUMPDEST SWAP2 POP PUSH2 0x774 PUSH1 0x20 DUP5 ADD PUSH2 0x70C JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x792 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x79B DUP5 PUSH2 0x70C JUMP JUMPDEST SWAP3 POP PUSH2 0x7A9 PUSH1 0x20 DUP6 ADD PUSH2 0x70C JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7D5 DUP4 PUSH2 0x70C JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x810 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x7F4 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x822 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x859 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x872 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x893 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0x4807B36A8EF4704E5168 RETURNDATACOPY 0xAF LOG1 0xEE TIMESTAMP EXP 0xD8 SSTORE 0x21 EXTCODECOPY ADDRESS 0xEB DUP15 LOG0 0x29 XOR PUSH1 0xDA 0xCD DUP3 0x4B PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "1382:11183:1:-:0;;;1957:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2023:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;2046:17:1;;;;:7;;:17;;;;;:::i;:::-;;1957:113;;1382:11183;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1382:11183:1;;;-1:-1:-1;1382:11183:1;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:885:6;68:5;121:3;114:4;106:6;102:17;98:27;88:55;;139:1;136;129:12;88:55;162:13;;-1:-1:-1;;;;;224:10:6;;;221:36;;;237:18;;:::i;:::-;312:2;306:9;280:2;366:13;;-1:-1:-1;;362:22:6;;;386:2;358:31;354:40;342:53;;;410:18;;;430:22;;;407:46;404:72;;;456:18;;:::i;:::-;496:10;492:2;485:22;531:2;523:6;516:18;553:4;543:14;;598:3;593:2;588;580:6;576:15;572:24;569:33;566:53;;;615:1;612;605:12;566:53;637:1;628:10;;647:133;661:2;658:1;655:9;647:133;;;749:14;;;745:23;;739:30;718:14;;;714:23;;707:63;672:10;;;;647:133;;;798:2;795:1;792:9;789:80;;;857:1;852:2;847;839:6;835:15;831:24;824:35;789:80;887:6;14:885;-1:-1:-1;;;;;;14:885:6:o;904:562::-;1003:6;1011;1064:2;1052:9;1043:7;1039:23;1035:32;1032:52;;;1080:1;1077;1070:12;1032:52;1107:16;;-1:-1:-1;;;;;1172:14:6;;;1169:34;;;1199:1;1196;1189:12;1169:34;1222:61;1275:7;1266:6;1255:9;1251:22;1222:61;:::i;:::-;1212:71;;1329:2;1318:9;1314:18;1308:25;1292:41;;1358:2;1348:8;1345:16;1342:36;;;1374:1;1371;1364:12;1342:36;;1397:63;1452:7;1441:8;1430:9;1426:24;1397:63;:::i;:::-;1387:73;;;904:562;;;;;:::o;1471:380::-;1550:1;1546:12;;;;1593;;;1614:61;;1668:4;1660:6;1656:17;1646:27;;1614:61;1721:2;1713:6;1710:14;1690:18;1687:38;1684:161;;;1767:10;1762:3;1758:20;1755:1;1748:31;1802:4;1799:1;1792:15;1830:4;1827:1;1820:15;1684:161;;1471:380;;;:::o;1856:127::-;1917:10;1912:3;1908:20;1905:1;1898:31;1948:4;1945:1;1938:15;1972:4;1969:1;1962:15;1856:127;1382:11183:1;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_441": {
									"entryPoint": 903,
									"id": 441,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_11": {
									"entryPoint": null,
									"id": 11,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_484": {
									"entryPoint": 1195,
									"id": 484,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_358": {
									"entryPoint": 1341,
									"id": 358,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_163": {
									"entryPoint": null,
									"id": 163,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_188": {
									"entryPoint": 600,
									"id": 188,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_120": {
									"entryPoint": null,
									"id": 120,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_96": {
									"entryPoint": null,
									"id": 96,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_293": {
									"entryPoint": 738,
									"id": 293,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_251": {
									"entryPoint": 660,
									"id": 251,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_76": {
									"entryPoint": 454,
									"id": 76,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_86": {
									"entryPoint": 723,
									"id": 86,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_106": {
									"entryPoint": null,
									"id": 106,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_221": {
									"entryPoint": 624,
									"id": 221,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_145": {
									"entryPoint": 889,
									"id": 145,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1804,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1832,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1866,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1917,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1977,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2019,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2104,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2142,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5806:6",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:6"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:6",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:6"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:6"
															},
															"nodeType": "YulIf",
															"src": "111:70:6"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:6",
														"type": ""
													}
												],
												"src": "14:173:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "262:116:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "308:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "317:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "320:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "310:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "310:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "283:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "292:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "279:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "304:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:32:6"
															},
															"nodeType": "YulIf",
															"src": "272:52:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "333:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "343:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "343:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "333:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "228:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "239:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "251:6:6",
														"type": ""
													}
												],
												"src": "192:186:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "470:173:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "516:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "525:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "528:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "518:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "518:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "518:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "491:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "500:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "487:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "487:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "512:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "483:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "483:32:6"
															},
															"nodeType": "YulIf",
															"src": "480:52:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "541:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "570:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "551:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "551:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "541:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "589:48:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "622:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "633:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "618:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "618:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "599:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "599:38:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "589:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "428:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "439:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "451:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "459:6:6",
														"type": ""
													}
												],
												"src": "383:260:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "752:224:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "798:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "807:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "810:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "800:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "800:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "800:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "773:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "782:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "769:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "769:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "794:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "765:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "765:32:6"
															},
															"nodeType": "YulIf",
															"src": "762:52:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "823:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "852:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "833:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "833:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "871:48:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "904:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "915:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "900:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "900:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "881:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "881:38:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "871:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "928:42:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "955:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "966:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "951:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "951:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "938:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "938:32:6"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "928:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "702:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "713:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "725:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "733:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "741:6:6",
														"type": ""
													}
												],
												"src": "648:328:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1068:167:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1114:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1123:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1126:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1116:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1116:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1116:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1089:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1085:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1085:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1110:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1081:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1081:32:6"
															},
															"nodeType": "YulIf",
															"src": "1078:52:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1139:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1168:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1149:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1149:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1139:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1187:42:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1214:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1225:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1210:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1210:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1197:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1197:32:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1187:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1026:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1037:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1049:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1057:6:6",
														"type": ""
													}
												],
												"src": "981:254:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1335:92:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1345:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1357:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1368:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1353:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1353:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1345:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1387:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1412:6:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1405:6:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1405:14:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1398:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1398:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1380:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1380:41:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1380:41:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1304:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1315:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1326:4:6",
														"type": ""
													}
												],
												"src": "1240:187:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1553:476:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1563:12:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1573:2:6",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1567:2:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1591:9:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1602:2:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1584:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1584:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1584:21:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1614:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1634:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1628:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1628:13:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1618:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1661:9:6"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1672:2:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1657:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1657:18:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1677:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1650:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1650:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1650:34:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1693:10:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1702:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1697:1:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1762:90:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "1791:9:6"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1802:1:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1787:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1787:17:6"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1806:2:6",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1783:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1783:26:6"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "1825:6:6"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "1833:1:6"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1821:3:6"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1821:14:6"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1837:2:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1817:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1817:23:6"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1811:5:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1811:30:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1776:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1776:66:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1776:66:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1723:1:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1726:6:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1720:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1720:13:6"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1734:19:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1736:15:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1745:1:6"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1748:2:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1741:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1741:10:6"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1736:1:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1716:3:6",
																"statements": []
															},
															"src": "1712:140:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1886:66:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "1915:9:6"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "1926:6:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1911:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1911:22:6"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1935:2:6",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1907:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1907:31:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1940:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1900:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1900:42:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1900:42:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1867:1:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1870:6:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1864:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1864:13:6"
															},
															"nodeType": "YulIf",
															"src": "1861:91:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1961:62:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1977:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1996:6:6"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2004:2:6",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1992:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1992:15:6"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2013:2:6",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "2009:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2009:7:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1988:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1988:29:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1973:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1973:45:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2020:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1969:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1969:54:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1961:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1522:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1533:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1544:4:6",
														"type": ""
													}
												],
												"src": "1432:597:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2208:225:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2225:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2236:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2218:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2218:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2218:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2259:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2270:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2255:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2255:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2275:2:6",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2248:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2248:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2248:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2298:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2309:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2294:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2294:18:6"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2314:34:6",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2287:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2287:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2287:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2369:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2380:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2365:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2365:18:6"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2385:5:6",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2358:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2358:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2358:33:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2400:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2412:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2423:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2408:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2408:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2400:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2185:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2199:4:6",
														"type": ""
													}
												],
												"src": "2034:399:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2612:224:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2629:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2640:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2622:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2622:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2622:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2663:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2674:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2659:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2659:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2679:2:6",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2652:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2652:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2652:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2702:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2713:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2698:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2698:18:6"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2718:34:6",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2691:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2691:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2691:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2773:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2784:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2769:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2769:18:6"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2789:4:6",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2762:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2762:32:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2762:32:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2803:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2815:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2826:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2811:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2811:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2803:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2589:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2603:4:6",
														"type": ""
													}
												],
												"src": "2438:398:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3015:179:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3032:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3043:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3025:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3025:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3025:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3066:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3077:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3062:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3062:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3082:2:6",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3055:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3055:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3055:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3105:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3116:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3101:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3101:18:6"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3121:31:6",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3094:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3094:59:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3094:59:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3162:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3174:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3185:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3170:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3170:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3162:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2992:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3006:4:6",
														"type": ""
													}
												],
												"src": "2841:353:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3373:228:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3390:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3401:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3383:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3383:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3383:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3424:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3435:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3420:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3420:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3440:2:6",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3413:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3413:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3413:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3463:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3474:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3459:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3459:18:6"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3479:34:6",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3452:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3452:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3452:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3534:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3545:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3530:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3530:18:6"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3550:8:6",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3523:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3523:36:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3523:36:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3568:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3580:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3591:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3576:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3576:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3568:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3350:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3364:4:6",
														"type": ""
													}
												],
												"src": "3199:402:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3780:227:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3797:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3808:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3790:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3790:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3790:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3831:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3842:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3827:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3827:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3847:2:6",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3820:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3820:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3820:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3870:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3881:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3866:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3866:18:6"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3886:34:6",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3859:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3859:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3859:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3941:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3952:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3937:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3937:18:6"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3957:7:6",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3930:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3930:35:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3930:35:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3974:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3986:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3997:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3982:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3982:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3974:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3757:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3771:4:6",
														"type": ""
													}
												],
												"src": "3606:401:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4186:226:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4203:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4196:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4196:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4196:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4237:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4248:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4233:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4233:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4253:2:6",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4226:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4226:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4226:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4276:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4287:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4272:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4272:18:6"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4292:34:6",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4265:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4265:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4265:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4347:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4358:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4343:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4343:18:6"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4363:6:6",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4336:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4336:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4336:34:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4379:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4391:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4402:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4387:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4387:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4379:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4163:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4177:4:6",
														"type": ""
													}
												],
												"src": "4012:400:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4591:227:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4608:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4619:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4601:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4601:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4601:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4642:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4653:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4638:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4638:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4658:2:6",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4631:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4631:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4631:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4681:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4692:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4677:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4677:18:6"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4697:34:6",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4670:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4670:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4670:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4752:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4763:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4748:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4748:18:6"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4768:7:6",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4741:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4741:35:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4741:35:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4785:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4797:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4808:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4793:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4793:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4785:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4568:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4582:4:6",
														"type": ""
													}
												],
												"src": "4417:401:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4924:76:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4934:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4946:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4957:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4942:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4942:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4934:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4976:9:6"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4987:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4969:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4969:25:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4969:25:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4893:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4904:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4915:4:6",
														"type": ""
													}
												],
												"src": "4823:177:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5102:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5112:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5124:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5135:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5120:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5120:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5112:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5154:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5169:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5177:4:6",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5165:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5165:17:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5147:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5147:36:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5147:36:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5071:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5082:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5093:4:6",
														"type": ""
													}
												],
												"src": "5005:184:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5242:177:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5277:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5298:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5305:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5310:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5301:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5301:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5291:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5291:31:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5291:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5342:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5345:4:6",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5335:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5335:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5335:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5370:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5373:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5363:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5363:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5363:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5258:1:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "5265:1:6"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "5261:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5261:6:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5255:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5255:13:6"
															},
															"nodeType": "YulIf",
															"src": "5252:136:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5397:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5408:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5411:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5404:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5404:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "5397:3:6"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5225:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5228:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "5234:3:6",
														"type": ""
													}
												],
												"src": "5194:225:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5479:325:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5489:22:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5503:1:6",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5506:4:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5499:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5499:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "5489:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5520:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5550:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5556:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5546:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5546:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "5524:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5597:31:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5599:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "5613:6:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5621:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "5609:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5609:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5599:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5577:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5570:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5570:26:6"
															},
															"nodeType": "YulIf",
															"src": "5567:61:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5687:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5708:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5715:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5720:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5711:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5711:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5701:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5701:31:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5701:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5752:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5755:4:6",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5745:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5745:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5745:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5780:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5783:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5773:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5773:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5773:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5643:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5666:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5674:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "5663:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5663:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "5640:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5640:38:6"
															},
															"nodeType": "YulIf",
															"src": "5637:161:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "5459:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5468:6:6",
														"type": ""
													}
												],
												"src": "5424:380:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101c6565b6040516100c391906107e3565b60405180910390f35b6100df6100da3660046107b9565b610258565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f36600461077d565b610270565b604051601281526020016100c3565b6100df6101313660046107b9565b610294565b6100f3610144366004610728565b6001600160a01b031660009081526020819052604090205490565b6100b66102d3565b6100df6101753660046107b9565b6102e2565b6100df6101883660046107b9565b610379565b6100f361019b36600461074a565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101d59061085e565b80601f01602080910402602001604051908101604052809291908181526020018280546102019061085e565b801561024e5780601f106102235761010080835404028352916020019161024e565b820191906000526020600020905b81548152906001019060200180831161023157829003601f168201915b5050505050905090565b600033610266818585610387565b5060019392505050565b60003361027e8582856104ab565b61028985858561053d565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919061026690829086906102ce908790610838565b610387565b6060600480546101d59061085e565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091908381101561036c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102898286868403610387565b60003361026681858561053d565b6001600160a01b0383166103e95760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610363565b6001600160a01b03821661044a5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610363565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610537578181101561052a5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610363565b6105378484848403610387565b50505050565b6001600160a01b0383166105a15760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610363565b6001600160a01b0382166106035760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610363565b6001600160a01b0383166000908152602081905260409020548181101561067b5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610363565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106b2908490610838565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106fe91815260200190565b60405180910390a350505050565b80356001600160a01b038116811461072357600080fd5b919050565b60006020828403121561073a57600080fd5b6107438261070c565b9392505050565b6000806040838503121561075d57600080fd5b6107668361070c565b91506107746020840161070c565b90509250929050565b60008060006060848603121561079257600080fd5b61079b8461070c565b92506107a96020850161070c565b9150604084013590509250925092565b600080604083850312156107cc57600080fd5b6107d58361070c565b946020939093013593505050565b600060208083528351808285015260005b81811015610810578581018301518582016040015282016107f4565b81811115610822576000604083870101525b50601f01601f1916929092016040019392505050565b6000821982111561085957634e487b7160e01b600052601160045260246000fd5b500190565b600181811c9082168061087257607f821691505b6020821081141561089357634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220694807b36a8ef4704e51683eafa1ee420ad855213c30eb8ea0291860dacd824b64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x7E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x7B9 JUMP JUMPDEST PUSH2 0x258 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x77D JUMP JUMPDEST PUSH2 0x270 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x7B9 JUMP JUMPDEST PUSH2 0x294 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x728 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x2D3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x7B9 JUMP JUMPDEST PUSH2 0x2E2 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x7B9 JUMP JUMPDEST PUSH2 0x379 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x74A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x85E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x201 SWAP1 PUSH2 0x85E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x24E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x223 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x24E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x231 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x266 DUP2 DUP6 DUP6 PUSH2 0x387 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x27E DUP6 DUP3 DUP6 PUSH2 0x4AB JUMP JUMPDEST PUSH2 0x289 DUP6 DUP6 DUP6 PUSH2 0x53D JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x266 SWAP1 DUP3 SWAP1 DUP7 SWAP1 PUSH2 0x2CE SWAP1 DUP8 SWAP1 PUSH2 0x838 JUMP JUMPDEST PUSH2 0x387 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x85E JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP4 DUP2 LT ISZERO PUSH2 0x36C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x289 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x387 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x266 DUP2 DUP6 DUP6 PUSH2 0x53D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x363 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x44A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x363 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x537 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x52A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x363 JUMP JUMPDEST PUSH2 0x537 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x387 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x363 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x603 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x363 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x67B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x363 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6B2 SWAP1 DUP5 SWAP1 PUSH2 0x838 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6FE SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x723 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x73A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x743 DUP3 PUSH2 0x70C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x75D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x766 DUP4 PUSH2 0x70C JUMP JUMPDEST SWAP2 POP PUSH2 0x774 PUSH1 0x20 DUP5 ADD PUSH2 0x70C JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x792 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x79B DUP5 PUSH2 0x70C JUMP JUMPDEST SWAP3 POP PUSH2 0x7A9 PUSH1 0x20 DUP6 ADD PUSH2 0x70C JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7D5 DUP4 PUSH2 0x70C JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x810 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x7F4 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x822 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x859 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x872 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x893 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0x4807B36A8EF4704E5168 RETURNDATACOPY 0xAF LOG1 0xEE TIMESTAMP EXP 0xD8 SSTORE 0x21 EXTCODECOPY ADDRESS 0xEB DUP15 LOG0 0x29 XOR PUSH1 0xDA 0xCD DUP3 0x4B PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "1382:11183:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2135:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4412:197;;;;;;:::i;:::-;;:::i;:::-;;;1405:14:6;;1398:22;1380:41;;1368:2;1353:18;4412:197:1;1240:187:6;3223:106:1;3310:12;;3223:106;;;4969:25:6;;;4957:2;4942:18;3223:106:1;4823:177:6;5171:286:1;;;;;;:::i;:::-;;:::i;3072:91::-;;;3154:2;5147:36:6;;5135:2;5120:18;3072:91:1;5005:184:6;5852:236:1;;;;;;:::i;:::-;;:::i;3387:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3487:18:1;3461:7;3487:18;;;;;;;;;;;;3387:125;2346:102;;;:::i;6575:429::-;;;;;;:::i;:::-;;:::i;3708:189::-;;;;;;:::i;:::-;;:::i;3955:149::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4070:18:1;;;4044:7;4070:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3955:149;2135:98;2189:13;2221:5;2214:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2135:98;:::o;4412:197::-;4495:4;719:10:0;4549:32:1;719:10:0;4565:7:1;4574:6;4549:8;:32::i;:::-;-1:-1:-1;4598:4:1;;4412:197;-1:-1:-1;;;4412:197:1:o;5171:286::-;5298:4;719:10:0;5354:38:1;5370:4;719:10:0;5385:6:1;5354:15;:38::i;:::-;5402:27;5412:4;5418:2;5422:6;5402:9;:27::i;:::-;-1:-1:-1;5446:4:1;;5171:286;-1:-1:-1;;;;5171:286:1:o;5852:236::-;719:10:0;5940:4:1;6019:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;6019:27:1;;;;;;;;;;5940:4;;719:10:0;5994:66:1;;719:10:0;;6019:27:1;;:40;;6049:10;;6019:40;:::i;:::-;5994:8;:66::i;2346:102::-;2402:13;2434:7;2427:14;;;;;:::i;6575:429::-;719:10:0;6668:4:1;6749:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;6749:27:1;;;;;;;;;;6668:4;;719:10:0;6794:35:1;;;;6786:85;;;;-1:-1:-1;;;6786:85:1;;4619:2:6;6786:85:1;;;4601:21:6;4658:2;4638:18;;;4631:30;4697:34;4677:18;;;4670:62;-1:-1:-1;;;4748:18:6;;;4741:35;4793:19;;6786:85:1;;;;;;;;;6905:60;6914:5;6921:7;6949:15;6930:16;:34;6905:8;:60::i;3708:189::-;3787:4;719:10:0;3841:28:1;719:10:0;3858:2:1;3862:6;3841:9;:28::i;10118:370::-;-1:-1:-1;;;;;10249:19:1;;10241:68;;;;-1:-1:-1;;;10241:68:1;;4214:2:6;10241:68:1;;;4196:21:6;4253:2;4233:18;;;4226:30;4292:34;4272:18;;;4265:62;-1:-1:-1;;;4343:18:6;;;4336:34;4387:19;;10241:68:1;4012:400:6;10241:68:1;-1:-1:-1;;;;;10327:21:1;;10319:68;;;;-1:-1:-1;;;10319:68:1;;2640:2:6;10319:68:1;;;2622:21:6;2679:2;2659:18;;;2652:30;2718:34;2698:18;;;2691:62;-1:-1:-1;;;2769:18:6;;;2762:32;2811:19;;10319:68:1;2438:398:6;10319:68:1;-1:-1:-1;;;;;10398:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10449:32;;4969:25:6;;;10449:32:1;;4942:18:6;10449:32:1;;;;;;;10118:370;;;:::o;10765:441::-;-1:-1:-1;;;;;4070:18:1;;;10895:24;4070:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10961:37:1;;10957:243;;11042:6;11022:16;:26;;11014:68;;;;-1:-1:-1;;;11014:68:1;;3043:2:6;11014:68:1;;;3025:21:6;3082:2;3062:18;;;3055:30;3121:31;3101:18;;;3094:59;3170:18;;11014:68:1;2841:353:6;11014:68:1;11124:51;11133:5;11140:7;11168:6;11149:16;:25;11124:8;:51::i;:::-;10885:321;10765:441;;;:::o;7467:655::-;-1:-1:-1;;;;;7593:18:1;;7585:68;;;;-1:-1:-1;;;7585:68:1;;3808:2:6;7585:68:1;;;3790:21:6;3847:2;3827:18;;;3820:30;3886:34;3866:18;;;3859:62;-1:-1:-1;;;3937:18:6;;;3930:35;3982:19;;7585:68:1;3606:401:6;7585:68:1;-1:-1:-1;;;;;7671:16:1;;7663:64;;;;-1:-1:-1;;;7663:64:1;;2236:2:6;7663:64:1;;;2218:21:6;2275:2;2255:18;;;2248:30;2314:34;2294:18;;;2287:62;-1:-1:-1;;;2365:18:6;;;2358:33;2408:19;;7663:64:1;2034:399:6;7663:64:1;-1:-1:-1;;;;;7811:15:1;;7789:19;7811:15;;;;;;;;;;;7844:21;;;;7836:72;;;;-1:-1:-1;;;7836:72:1;;3401:2:6;7836:72:1;;;3383:21:6;3440:2;3420:18;;;3413:30;3479:34;3459:18;;;3452:62;-1:-1:-1;;;3530:18:6;;;3523:36;3576:19;;7836:72:1;3199:402:6;7836:72:1;-1:-1:-1;;;;;7942:15:1;;;:9;:15;;;;;;;;;;;7960:20;;;7942:38;;8000:13;;;;;;;;:23;;7974:6;;7942:9;8000:23;;7974:6;;8000:23;:::i;:::-;;;;;;;;8054:2;-1:-1:-1;;;;;8039:26:1;8048:4;-1:-1:-1;;;;;8039:26:1;;8058:6;8039:26;;;;4969:25:6;;4957:2;4942:18;;4823:177;8039:26:1;;;;;;;;7575:547;7467:655;;;:::o;14:173:6:-;82:20;;-1:-1:-1;;;;;131:31:6;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;:::-;333:39;192:186;-1:-1:-1;;;192:186:6:o;383:260::-;451:6;459;512:2;500:9;491:7;487:23;483:32;480:52;;;528:1;525;518:12;480:52;551:29;570:9;551:29;:::i;:::-;541:39;;599:38;633:2;622:9;618:18;599:38;:::i;:::-;589:48;;383:260;;;;;:::o;648:328::-;725:6;733;741;794:2;782:9;773:7;769:23;765:32;762:52;;;810:1;807;800:12;762:52;833:29;852:9;833:29;:::i;:::-;823:39;;881:38;915:2;904:9;900:18;881:38;:::i;:::-;871:48;;966:2;955:9;951:18;938:32;928:42;;648:328;;;;;:::o;981:254::-;1049:6;1057;1110:2;1098:9;1089:7;1085:23;1081:32;1078:52;;;1126:1;1123;1116:12;1078:52;1149:29;1168:9;1149:29;:::i;:::-;1139:39;1225:2;1210:18;;;;1197:32;;-1:-1:-1;;;981:254:6:o;1432:597::-;1544:4;1573:2;1602;1591:9;1584:21;1634:6;1628:13;1677:6;1672:2;1661:9;1657:18;1650:34;1702:1;1712:140;1726:6;1723:1;1720:13;1712:140;;;1821:14;;;1817:23;;1811:30;1787:17;;;1806:2;1783:26;1776:66;1741:10;;1712:140;;;1870:6;1867:1;1864:13;1861:91;;;1940:1;1935:2;1926:6;1915:9;1911:22;1907:31;1900:42;1861:91;-1:-1:-1;2013:2:6;1992:15;-1:-1:-1;;1988:29:6;1973:45;;;;2020:2;1969:54;;1432:597;-1:-1:-1;;;1432:597:6:o;5194:225::-;5234:3;5265:1;5261:6;5258:1;5255:13;5252:136;;;5310:10;5305:3;5301:20;5298:1;5291:31;5345:4;5342:1;5335:15;5373:4;5370:1;5363:15;5252:136;-1:-1:-1;5404:9:6;;5194:225::o;5424:380::-;5503:1;5499:12;;;;5546;;;5567:61;;5621:4;5613:6;5609:17;5599:27;;5567:61;5674:2;5666:6;5663:14;5643:18;5640:38;5637:161;;;5720:10;5715:3;5711:20;5708:1;5701:31;5755:4;5752:1;5745:15;5783:4;5780:1;5773:15;5637:161;;5424:380;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "451000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24624",
								"balanceOf(address)": "2562",
								"decimals()": "266",
								"decreaseAllowance(address,uint256)": "26966",
								"increaseAllowance(address,uint256)": "26945",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2326",
								"transfer(address,uint256)": "51258",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1382,
									"end": 12565,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1957,
									"end": 2070,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 1957,
									"end": 2070,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1957,
									"end": 2070,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1957,
									"end": 2070,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1957,
									"end": 2070,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1957,
									"end": 2070,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1957,
									"end": 2070,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1957,
									"end": 2070,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1957,
									"end": 2070,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1957,
									"end": 2070,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1957,
									"end": 2070,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1957,
									"end": 2070,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1957,
									"end": 2070,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1957,
									"end": 2070,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1957,
									"end": 2070,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 1957,
									"end": 2070,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1957,
									"end": 2070,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1957,
									"end": 2070,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1957,
									"end": 2070,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1957,
									"end": 2070,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1957,
									"end": 2070,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1957,
									"end": 2070,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1957,
									"end": 2070,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1957,
									"end": 2070,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1957,
									"end": 2070,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1957,
									"end": 2070,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1957,
									"end": 2070,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1957,
									"end": 2070,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1957,
									"end": 2070,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1957,
									"end": 2070,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1957,
									"end": 2070,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1957,
									"end": 2070,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2023,
									"end": 2036,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2023,
									"end": 2036,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2023,
									"end": 2036,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 2023,
									"end": 2036,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2023,
									"end": 2028,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2023,
									"end": 2028,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2023,
									"end": 2036,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2023,
									"end": 2036,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2023,
									"end": 2036,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2023,
									"end": 2036,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2023,
									"end": 2036,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 2023,
									"end": 2036,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2023,
									"end": 2036,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 2023,
									"end": 2036,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2046,
									"end": 2063,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2063,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2063,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2046,
									"end": 2063,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2053,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 2046,
									"end": 2053,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2063,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2046,
									"end": 2063,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2063,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2063,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2063,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 2046,
									"end": 2063,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2046,
									"end": 2063,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2046,
									"end": 2063,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2063,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1957,
									"end": 2070,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1957,
									"end": 2070,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 899,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 14,
									"end": 899,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 68,
									"end": 73,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 121,
									"end": 124,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 114,
									"end": 118,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 106,
									"end": 112,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 102,
									"end": 119,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 98,
									"end": 125,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 88,
									"end": 143,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 88,
									"end": 143,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 139,
									"end": 140,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 136,
									"end": 137,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 129,
									"end": 141,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 88,
									"end": 143,
									"name": "tag",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 88,
									"end": 143,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 162,
									"end": 175,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 162,
									"end": 175,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 234,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 224,
									"end": 234,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 224,
									"end": 234,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 221,
									"end": 257,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 221,
									"end": 257,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 221,
									"end": 257,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 237,
									"end": 255,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "tag",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 312,
									"end": 314,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 306,
									"end": 315,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 280,
									"end": 282,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 366,
									"end": 379,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 366,
									"end": 379,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 362,
									"end": 384,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 362,
									"end": 384,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 362,
									"end": 384,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 386,
									"end": 388,
									"name": "PUSH",
									"source": 6,
									"value": "3F"
								},
								{
									"begin": 358,
									"end": 389,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 354,
									"end": 394,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 342,
									"end": 395,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 342,
									"end": 395,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 342,
									"end": 395,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 410,
									"end": 428,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 410,
									"end": 428,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 410,
									"end": 428,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 430,
									"end": 452,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 430,
									"end": 452,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 430,
									"end": 452,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 407,
									"end": 453,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 404,
									"end": 476,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 404,
									"end": 476,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 404,
									"end": 476,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 456,
									"end": 474,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "tag",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 496,
									"end": 506,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 492,
									"end": 494,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 485,
									"end": 507,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 531,
									"end": 533,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 523,
									"end": 529,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 516,
									"end": 534,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 553,
									"end": 557,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 543,
									"end": 557,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 543,
									"end": 557,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 598,
									"end": 601,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 593,
									"end": 595,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 588,
									"end": 590,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 580,
									"end": 586,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 576,
									"end": 591,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 572,
									"end": 596,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 569,
									"end": 602,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 566,
									"end": 619,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 566,
									"end": 619,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 566,
									"end": 619,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 615,
									"end": 616,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 612,
									"end": 613,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 605,
									"end": 617,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 566,
									"end": 619,
									"name": "tag",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 566,
									"end": 619,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 637,
									"end": 638,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 628,
									"end": 638,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 628,
									"end": 638,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 647,
									"end": 780,
									"name": "tag",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 661,
									"end": 663,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 658,
									"end": 659,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 655,
									"end": 664,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 647,
									"end": 780,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 647,
									"end": 780,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 749,
									"end": 763,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 749,
									"end": 763,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 749,
									"end": 763,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 745,
									"end": 768,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 745,
									"end": 768,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 739,
									"end": 769,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 718,
									"end": 732,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 718,
									"end": 732,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 718,
									"end": 732,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 714,
									"end": 737,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 714,
									"end": 737,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 707,
									"end": 770,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 672,
									"end": 682,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 672,
									"end": 682,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 672,
									"end": 682,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 672,
									"end": 682,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 647,
									"end": 780,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 647,
									"end": 780,
									"name": "tag",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 798,
									"end": 800,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 795,
									"end": 796,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 792,
									"end": 801,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 789,
									"end": 869,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 789,
									"end": 869,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 789,
									"end": 869,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 857,
									"end": 858,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 852,
									"end": 854,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 847,
									"end": 849,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 839,
									"end": 845,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 835,
									"end": 850,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 831,
									"end": 855,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 824,
									"end": 859,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 789,
									"end": 869,
									"name": "tag",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 789,
									"end": 869,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 887,
									"end": 893,
									"name": "SWAP7",
									"source": 6
								},
								{
									"begin": 14,
									"end": 899,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 899,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1003,
									"end": 1009,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1011,
									"end": 1017,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1064,
									"end": 1066,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1052,
									"end": 1061,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1043,
									"end": 1050,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1039,
									"end": 1062,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1035,
									"end": 1067,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1080,
									"end": 1081,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1077,
									"end": 1078,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1070,
									"end": 1082,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "tag",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1107,
									"end": 1123,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1107,
									"end": 1123,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1172,
									"end": 1186,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1172,
									"end": 1186,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1172,
									"end": 1186,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1199,
									"end": 1200,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1196,
									"end": 1197,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1189,
									"end": 1201,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "tag",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 1275,
									"end": 1282,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1266,
									"end": 1272,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1255,
									"end": 1264,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 1251,
									"end": 1273,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "tag",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1212,
									"end": 1283,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 1212,
									"end": 1283,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1329,
									"end": 1331,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1318,
									"end": 1327,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1314,
									"end": 1332,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1308,
									"end": 1333,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1292,
									"end": 1333,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1292,
									"end": 1333,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1358,
									"end": 1360,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1348,
									"end": 1356,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1345,
									"end": 1361,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1374,
									"end": 1375,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1371,
									"end": 1372,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1364,
									"end": 1376,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "tag",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1452,
									"end": 1459,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1441,
									"end": 1449,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1430,
									"end": 1439,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1426,
									"end": 1450,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "tag",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1387,
									"end": 1460,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1387,
									"end": 1460,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1387,
									"end": 1460,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "tag",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1550,
									"end": 1551,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1593,
									"end": 1605,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1593,
									"end": 1605,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1593,
									"end": 1605,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1614,
									"end": 1675,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 1614,
									"end": 1675,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1668,
									"end": 1672,
									"name": "PUSH",
									"source": 6,
									"value": "7F"
								},
								{
									"begin": 1660,
									"end": 1666,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1656,
									"end": 1673,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1646,
									"end": 1673,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1646,
									"end": 1673,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1614,
									"end": 1675,
									"name": "tag",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 1614,
									"end": 1675,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1721,
									"end": 1723,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1713,
									"end": 1719,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1710,
									"end": 1724,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1690,
									"end": 1708,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1687,
									"end": 1725,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1767,
									"end": 1777,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B71"
								},
								{
									"begin": 1762,
									"end": 1765,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 1758,
									"end": 1778,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1755,
									"end": 1756,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1748,
									"end": 1779,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1802,
									"end": 1806,
									"name": "PUSH",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1799,
									"end": 1800,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1792,
									"end": 1807,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1830,
									"end": 1834,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1827,
									"end": 1828,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1820,
									"end": 1835,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "tag",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "tag",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1917,
									"end": 1927,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B71"
								},
								{
									"begin": 1912,
									"end": 1915,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 1908,
									"end": 1928,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1905,
									"end": 1906,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1898,
									"end": 1929,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1948,
									"end": 1952,
									"name": "PUSH",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 1945,
									"end": 1946,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1938,
									"end": 1953,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1972,
									"end": 1976,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1969,
									"end": 1970,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1962,
									"end": 1977,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1382,
									"end": 12565,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220694807b36a8ef4704e51683eafa1ee420ad855213c30eb8ea0291860dacd824b64736f6c63430008070033",
									".code": [
										{
											"begin": 1382,
											"end": 12565,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1382,
											"end": 12565,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1382,
											"end": 12565,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1382,
											"end": 12565,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1382,
											"end": 12565,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1382,
											"end": 12565,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1382,
											"end": 12565,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1382,
											"end": 12565,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1382,
											"end": 12565,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1382,
											"end": 12565,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1382,
											"end": 12565,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1382,
											"end": 12565,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1382,
											"end": 12565,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1382,
											"end": 12565,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1382,
											"end": 12565,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1382,
											"end": 12565,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1382,
											"end": 12565,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1382,
											"end": 12565,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1382,
											"end": 12565,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1382,
											"end": 12565,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1382,
											"end": 12565,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1382,
											"end": 12565,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1382,
											"end": 12565,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 1382,
											"end": 12565,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1382,
											"end": 12565,
											"name": "PUSH",
											"source": 1,
											"value": "39509351"
										},
										{
											"begin": 1382,
											"end": 12565,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1382,
											"end": 12565,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1382,
											"end": 12565,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1382,
											"end": 12565,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1382,
											"end": 12565,
											"name": "PUSH",
											"source": 1,
											"value": "39509351"
										},
										{
											"begin": 1382,
											"end": 12565,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1382,
											"end": 12565,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1382,
											"end": 12565,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1382,
											"end": 12565,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1382,
											"end": 12565,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 1382,
											"end": 12565,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1382,
											"end": 12565,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1382,
											"end": 12565,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1382,
											"end": 12565,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1382,
											"end": 12565,
											"name": "PUSH",
											"source": 1,
											"value": "95D89B41"
										},
										{
											"begin": 1382,
											"end": 12565,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1382,
											"end": 12565,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1382,
											"end": 12565,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1382,
											"end": 12565,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1382,
											"end": 12565,
											"name": "PUSH",
											"source": 1,
											"value": "A457C2D7"
										},
										{
											"begin": 1382,
											"end": 12565,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1382,
											"end": 12565,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1382,
											"end": 12565,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1382,
											"end": 12565,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1382,
											"end": 12565,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 1382,
											"end": 12565,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1382,
											"end": 12565,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1382,
											"end": 12565,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1382,
											"end": 12565,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1382,
											"end": 12565,
											"name": "PUSH",
											"source": 1,
											"value": "DD62ED3E"
										},
										{
											"begin": 1382,
											"end": 12565,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1382,
											"end": 12565,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1382,
											"end": 12565,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1382,
											"end": 12565,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1382,
											"end": 12565,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1382,
											"end": 12565,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1382,
											"end": 12565,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1382,
											"end": 12565,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1382,
											"end": 12565,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1382,
											"end": 12565,
											"name": "PUSH",
											"source": 1,
											"value": "6FDDE03"
										},
										{
											"begin": 1382,
											"end": 12565,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1382,
											"end": 12565,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1382,
											"end": 12565,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1382,
											"end": 12565,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1382,
											"end": 12565,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 1382,
											"end": 12565,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1382,
											"end": 12565,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1382,
											"end": 12565,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1382,
											"end": 12565,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1382,
											"end": 12565,
											"name": "PUSH",
											"source": 1,
											"value": "18160DDD"
										},
										{
											"begin": 1382,
											"end": 12565,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1382,
											"end": 12565,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1382,
											"end": 12565,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1382,
											"end": 12565,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1382,
											"end": 12565,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 1382,
											"end": 12565,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1382,
											"end": 12565,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1382,
											"end": 12565,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1382,
											"end": 12565,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1382,
											"end": 12565,
											"name": "PUSH",
											"source": 1,
											"value": "313CE567"
										},
										{
											"begin": 1382,
											"end": 12565,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1382,
											"end": 12565,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1382,
											"end": 12565,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1382,
											"end": 12565,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1382,
											"end": 12565,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1382,
											"end": 12565,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1382,
											"end": 12565,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1382,
											"end": 12565,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2135,
											"end": 2233,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2135,
											"end": 2233,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2135,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2135,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2135,
											"end": 2233,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2135,
											"end": 2233,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2135,
											"end": 2233,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2135,
											"end": 2233,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2135,
											"end": 2233,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2135,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2135,
											"end": 2233,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2135,
											"end": 2233,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2135,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2135,
											"end": 2233,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2135,
											"end": 2233,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2135,
											"end": 2233,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2135,
											"end": 2233,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2135,
											"end": 2233,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2135,
											"end": 2233,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2135,
											"end": 2233,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2135,
											"end": 2233,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2135,
											"end": 2233,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2135,
											"end": 2233,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4412,
											"end": 4609,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4412,
											"end": 4609,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4412,
											"end": 4609,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4412,
											"end": 4609,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4412,
											"end": 4609,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4412,
											"end": 4609,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4412,
											"end": 4609,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 4412,
											"end": 4609,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4412,
											"end": 4609,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4412,
											"end": 4609,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4412,
											"end": 4609,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4412,
											"end": 4609,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4412,
											"end": 4609,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4412,
											"end": 4609,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4412,
											"end": 4609,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4412,
											"end": 4609,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1405,
											"end": 1419,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1405,
											"end": 1419,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1398,
											"end": 1420,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1421,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1421,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1368,
											"end": 1370,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1353,
											"end": 1371,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4412,
											"end": 4609,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1240,
											"end": 1427,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3223,
											"end": 3329,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3223,
											"end": 3329,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3310,
											"end": 3322,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3310,
											"end": 3322,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3223,
											"end": 3329,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3223,
											"end": 3329,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3223,
											"end": 3329,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3223,
											"end": 3329,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4969,
											"end": 4994,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4969,
											"end": 4994,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4969,
											"end": 4994,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4957,
											"end": 4959,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4942,
											"end": 4960,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3223,
											"end": 3329,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 4823,
											"end": 5000,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5171,
											"end": 5457,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 5171,
											"end": 5457,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5171,
											"end": 5457,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 5171,
											"end": 5457,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 5171,
											"end": 5457,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5171,
											"end": 5457,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5171,
											"end": 5457,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 5171,
											"end": 5457,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5171,
											"end": 5457,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 5171,
											"end": 5457,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5171,
											"end": 5457,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 5171,
											"end": 5457,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3072,
											"end": 3163,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 3072,
											"end": 3163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3072,
											"end": 3163,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3072,
											"end": 3163,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3154,
											"end": 3156,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 5147,
											"end": 5183,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5147,
											"end": 5183,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5135,
											"end": 5137,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5120,
											"end": 5138,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3072,
											"end": 3163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 5005,
											"end": 5189,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5852,
											"end": 6088,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5852,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5852,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 5852,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 5852,
											"end": 6088,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5852,
											"end": 6088,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5852,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 5852,
											"end": 6088,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5852,
											"end": 6088,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 5852,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5852,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5852,
											"end": 6088,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3387,
											"end": 3512,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 3387,
											"end": 3512,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3387,
											"end": 3512,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3387,
											"end": 3512,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3387,
											"end": 3512,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3387,
											"end": 3512,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3387,
											"end": 3512,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3387,
											"end": 3512,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3387,
											"end": 3512,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3387,
											"end": 3512,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3487,
											"end": 3505,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3461,
											"end": 3468,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3487,
											"end": 3505,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3487,
											"end": 3505,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3487,
											"end": 3505,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3487,
											"end": 3505,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3487,
											"end": 3505,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3487,
											"end": 3505,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3487,
											"end": 3505,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3487,
											"end": 3505,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3487,
											"end": 3505,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3487,
											"end": 3505,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3487,
											"end": 3505,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3487,
											"end": 3505,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3387,
											"end": 3512,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2346,
											"end": 2448,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2346,
											"end": 2448,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2346,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2346,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2346,
											"end": 2448,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6575,
											"end": 7004,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 6575,
											"end": 7004,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6575,
											"end": 7004,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 6575,
											"end": 7004,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 6575,
											"end": 7004,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6575,
											"end": 7004,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6575,
											"end": 7004,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 6575,
											"end": 7004,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6575,
											"end": 7004,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 6575,
											"end": 7004,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6575,
											"end": 7004,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 6575,
											"end": 7004,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3708,
											"end": 3897,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3708,
											"end": 3897,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3897,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 3708,
											"end": 3897,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3708,
											"end": 3897,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3897,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3708,
											"end": 3897,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 3708,
											"end": 3897,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3708,
											"end": 3897,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3708,
											"end": 3897,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3897,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3708,
											"end": 3897,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3955,
											"end": 4104,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 3955,
											"end": 4104,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3955,
											"end": 4104,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3955,
											"end": 4104,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3955,
											"end": 4104,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3955,
											"end": 4104,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3955,
											"end": 4104,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3955,
											"end": 4104,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3955,
											"end": 4104,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3955,
											"end": 4104,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4070,
											"end": 4088,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4088,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4088,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4044,
											"end": 4051,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4070,
											"end": 4088,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4088,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4088,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4081,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4070,
											"end": 4088,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4070,
											"end": 4088,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4088,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4088,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4088,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4070,
											"end": 4088,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4088,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4088,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4097,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4097,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4097,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4097,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4097,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4097,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4097,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4097,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4097,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4097,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4097,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4097,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4097,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3955,
											"end": 4104,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2135,
											"end": 2233,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2135,
											"end": 2233,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 2202,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2221,
											"end": 2226,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2135,
											"end": 2233,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2135,
											"end": 2233,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4412,
											"end": 4609,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4412,
											"end": 4609,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4495,
											"end": 4499,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4549,
											"end": 4581,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4565,
											"end": 4572,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4574,
											"end": 4580,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4549,
											"end": 4557,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 4549,
											"end": 4581,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4549,
											"end": 4581,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 4549,
											"end": 4581,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4598,
											"end": 4602,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4598,
											"end": 4602,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4412,
											"end": 4609,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4412,
											"end": 4609,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5171,
											"end": 5457,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 5171,
											"end": 5457,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5298,
											"end": 5302,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5392,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 5370,
											"end": 5374,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5385,
											"end": 5391,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5354,
											"end": 5369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 5354,
											"end": 5392,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5354,
											"end": 5392,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 5354,
											"end": 5392,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5402,
											"end": 5429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5412,
											"end": 5416,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5418,
											"end": 5420,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5422,
											"end": 5428,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5402,
											"end": 5411,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 5402,
											"end": 5429,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5402,
											"end": 5429,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5402,
											"end": 5429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5446,
											"end": 5450,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5446,
											"end": 5450,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5171,
											"end": 5457,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5171,
											"end": 5457,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5852,
											"end": 6088,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5852,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5944,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6019,
											"end": 6037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6019,
											"end": 6037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6019,
											"end": 6037,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6019,
											"end": 6030,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6019,
											"end": 6037,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6019,
											"end": 6037,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6019,
											"end": 6037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6019,
											"end": 6037,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6019,
											"end": 6037,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6019,
											"end": 6037,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6019,
											"end": 6037,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6019,
											"end": 6037,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6019,
											"end": 6046,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6019,
											"end": 6046,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6019,
											"end": 6046,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6019,
											"end": 6046,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6019,
											"end": 6046,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6019,
											"end": 6046,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6019,
											"end": 6046,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6019,
											"end": 6046,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6019,
											"end": 6046,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6019,
											"end": 6046,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5940,
											"end": 5944,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5940,
											"end": 5944,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5994,
											"end": 6060,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 5994,
											"end": 6060,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6019,
											"end": 6046,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6019,
											"end": 6046,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6019,
											"end": 6059,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 6019,
											"end": 6059,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6049,
											"end": 6059,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6049,
											"end": 6059,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6019,
											"end": 6059,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 6019,
											"end": 6059,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6019,
											"end": 6059,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 6019,
											"end": 6059,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5994,
											"end": 6002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 5994,
											"end": 6060,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2346,
											"end": 2448,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2346,
											"end": 2448,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2402,
											"end": 2415,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2434,
											"end": 2441,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2427,
											"end": 2441,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2427,
											"end": 2441,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2427,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2427,
											"end": 2441,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2427,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2427,
											"end": 2441,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6575,
											"end": 7004,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 6575,
											"end": 7004,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 6668,
											"end": 6672,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6749,
											"end": 6767,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6749,
											"end": 6767,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6749,
											"end": 6767,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6749,
											"end": 6760,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6749,
											"end": 6767,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6749,
											"end": 6767,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6749,
											"end": 6767,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6749,
											"end": 6767,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6749,
											"end": 6767,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6749,
											"end": 6767,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6749,
											"end": 6767,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6749,
											"end": 6767,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6749,
											"end": 6776,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6749,
											"end": 6776,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6749,
											"end": 6776,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6749,
											"end": 6776,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6749,
											"end": 6776,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6749,
											"end": 6776,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6749,
											"end": 6776,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6749,
											"end": 6776,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6749,
											"end": 6776,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6749,
											"end": 6776,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6668,
											"end": 6672,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6668,
											"end": 6672,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6794,
											"end": 6829,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6794,
											"end": 6829,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6794,
											"end": 6829,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6794,
											"end": 6829,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6786,
											"end": 6871,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 6786,
											"end": 6871,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6786,
											"end": 6871,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6786,
											"end": 6871,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6786,
											"end": 6871,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6786,
											"end": 6871,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4619,
											"end": 4621,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6786,
											"end": 6871,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6786,
											"end": 6871,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6786,
											"end": 6871,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4601,
											"end": 4622,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4658,
											"end": 4660,
											"name": "PUSH",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 4638,
											"end": 4656,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4638,
											"end": 4656,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4638,
											"end": 4656,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4631,
											"end": 4661,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4697,
											"end": 4731,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 4677,
											"end": 4695,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4677,
											"end": 4695,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4677,
											"end": 4695,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4670,
											"end": 4732,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4748,
											"end": 4766,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4748,
											"end": 4766,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4748,
											"end": 4766,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4741,
											"end": 4776,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4793,
											"end": 4812,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 4793,
											"end": 4812,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6786,
											"end": 6871,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 6786,
											"end": 6871,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6786,
											"end": 6871,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6786,
											"end": 6871,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6786,
											"end": 6871,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6786,
											"end": 6871,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6786,
											"end": 6871,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6786,
											"end": 6871,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6786,
											"end": 6871,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6786,
											"end": 6871,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 6786,
											"end": 6871,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6905,
											"end": 6965,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 6914,
											"end": 6919,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6921,
											"end": 6928,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6949,
											"end": 6964,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6930,
											"end": 6964,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6905,
											"end": 6913,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 6905,
											"end": 6965,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3708,
											"end": 3897,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3708,
											"end": 3897,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3787,
											"end": 3791,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3841,
											"end": 3869,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3858,
											"end": 3860,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3862,
											"end": 3868,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3841,
											"end": 3850,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3841,
											"end": 3869,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10118,
											"end": 10488,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 10118,
											"end": 10488,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10249,
											"end": 10268,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10249,
											"end": 10268,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10241,
											"end": 10309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 10241,
											"end": 10309,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10241,
											"end": 10309,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10241,
											"end": 10309,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10241,
											"end": 10309,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10241,
											"end": 10309,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10241,
											"end": 10309,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10241,
											"end": 10309,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10241,
											"end": 10309,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4196,
											"end": 4217,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4253,
											"end": 4255,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4233,
											"end": 4251,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4251,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4251,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4226,
											"end": 4256,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4292,
											"end": 4326,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 4272,
											"end": 4290,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4272,
											"end": 4290,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4272,
											"end": 4290,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4265,
											"end": 4327,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4343,
											"end": 4361,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4343,
											"end": 4361,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4343,
											"end": 4361,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4336,
											"end": 4370,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4387,
											"end": 4406,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 4387,
											"end": 4406,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10241,
											"end": 10309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 4012,
											"end": 4412,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10241,
											"end": 10309,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 10241,
											"end": 10309,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10327,
											"end": 10348,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10327,
											"end": 10348,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10319,
											"end": 10387,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 10319,
											"end": 10387,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10319,
											"end": 10387,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10319,
											"end": 10387,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10319,
											"end": 10387,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10319,
											"end": 10387,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2640,
											"end": 2642,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10319,
											"end": 10387,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10319,
											"end": 10387,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10319,
											"end": 10387,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2622,
											"end": 2643,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2679,
											"end": 2681,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 2659,
											"end": 2677,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2659,
											"end": 2677,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2659,
											"end": 2677,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2652,
											"end": 2682,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2718,
											"end": 2752,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 2698,
											"end": 2716,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 2698,
											"end": 2716,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2698,
											"end": 2716,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2691,
											"end": 2753,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2769,
											"end": 2787,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2769,
											"end": 2787,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2769,
											"end": 2787,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2762,
											"end": 2794,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2811,
											"end": 2830,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 2811,
											"end": 2830,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10319,
											"end": 10387,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 2438,
											"end": 2836,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10319,
											"end": 10387,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 10319,
											"end": 10387,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10398,
											"end": 10416,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10398,
											"end": 10416,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10398,
											"end": 10416,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10398,
											"end": 10416,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10398,
											"end": 10416,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10398,
											"end": 10416,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10398,
											"end": 10416,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10398,
											"end": 10409,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10398,
											"end": 10416,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10398,
											"end": 10416,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10398,
											"end": 10416,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10398,
											"end": 10416,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10398,
											"end": 10416,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10398,
											"end": 10416,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10398,
											"end": 10416,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10398,
											"end": 10416,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10398,
											"end": 10425,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 10398,
											"end": 10425,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 10398,
											"end": 10425,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10398,
											"end": 10425,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10398,
											"end": 10425,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10398,
											"end": 10425,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10398,
											"end": 10425,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 10398,
											"end": 10425,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10398,
											"end": 10425,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10398,
											"end": 10425,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10398,
											"end": 10425,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10398,
											"end": 10425,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10398,
											"end": 10425,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10398,
											"end": 10434,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10398,
											"end": 10434,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10398,
											"end": 10434,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10449,
											"end": 10481,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10449,
											"end": 10481,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4969,
											"end": 4994,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4969,
											"end": 4994,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4969,
											"end": 4994,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10449,
											"end": 10481,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10449,
											"end": 10481,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4942,
											"end": 4960,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10449,
											"end": 10481,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10449,
											"end": 10481,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10449,
											"end": 10481,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10449,
											"end": 10481,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10449,
											"end": 10481,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10449,
											"end": 10481,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10449,
											"end": 10481,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10488,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10488,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10488,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10488,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10765,
											"end": 11206,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 10765,
											"end": 11206,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4070,
											"end": 4088,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4088,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4088,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10895,
											"end": 10919,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4070,
											"end": 4088,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4088,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4088,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4081,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4070,
											"end": 4088,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4070,
											"end": 4088,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4088,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4088,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4088,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4070,
											"end": 4088,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4088,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4088,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4097,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4097,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4097,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4097,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4097,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4097,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4097,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4097,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4097,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4097,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10961,
											"end": 10998,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10961,
											"end": 10998,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11200,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 10957,
											"end": 11200,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11042,
											"end": 11048,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11022,
											"end": 11038,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11022,
											"end": 11048,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 11022,
											"end": 11048,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11014,
											"end": 11082,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 11014,
											"end": 11082,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11014,
											"end": 11082,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11014,
											"end": 11082,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11014,
											"end": 11082,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11014,
											"end": 11082,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3043,
											"end": 3045,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11014,
											"end": 11082,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11014,
											"end": 11082,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11014,
											"end": 11082,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3025,
											"end": 3046,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3082,
											"end": 3084,
											"name": "PUSH",
											"source": 6,
											"value": "1D"
										},
										{
											"begin": 3062,
											"end": 3080,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3062,
											"end": 3080,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3062,
											"end": 3080,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3055,
											"end": 3085,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3121,
											"end": 3152,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 3101,
											"end": 3119,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3101,
											"end": 3119,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3101,
											"end": 3119,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3094,
											"end": 3153,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3170,
											"end": 3188,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3170,
											"end": 3188,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11014,
											"end": 11082,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 2841,
											"end": 3194,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11014,
											"end": 11082,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 11014,
											"end": 11082,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11124,
											"end": 11175,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 11133,
											"end": 11138,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11140,
											"end": 11147,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11168,
											"end": 11174,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11149,
											"end": 11165,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11149,
											"end": 11174,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11124,
											"end": 11132,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 11124,
											"end": 11175,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11124,
											"end": 11175,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 11124,
											"end": 11175,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10885,
											"end": 11206,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10765,
											"end": 11206,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10765,
											"end": 11206,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10765,
											"end": 11206,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10765,
											"end": 11206,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7467,
											"end": 8122,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 7467,
											"end": 8122,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7585,
											"end": 7653,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 7585,
											"end": 7653,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7585,
											"end": 7653,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7585,
											"end": 7653,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7585,
											"end": 7653,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7585,
											"end": 7653,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3808,
											"end": 3810,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7585,
											"end": 7653,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7585,
											"end": 7653,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7585,
											"end": 7653,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3790,
											"end": 3811,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3847,
											"end": 3849,
											"name": "PUSH",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 3827,
											"end": 3845,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3827,
											"end": 3845,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3827,
											"end": 3845,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3820,
											"end": 3850,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3886,
											"end": 3920,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 3866,
											"end": 3884,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3866,
											"end": 3884,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3866,
											"end": 3884,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3859,
											"end": 3921,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3937,
											"end": 3955,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3937,
											"end": 3955,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3937,
											"end": 3955,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3930,
											"end": 3965,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3982,
											"end": 4001,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 3982,
											"end": 4001,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7585,
											"end": 7653,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 3606,
											"end": 4007,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7585,
											"end": 7653,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 7585,
											"end": 7653,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7671,
											"end": 7687,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7671,
											"end": 7687,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7663,
											"end": 7727,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 7663,
											"end": 7727,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7663,
											"end": 7727,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7663,
											"end": 7727,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7663,
											"end": 7727,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7663,
											"end": 7727,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2236,
											"end": 2238,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7663,
											"end": 7727,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7663,
											"end": 7727,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7663,
											"end": 7727,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2218,
											"end": 2239,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2275,
											"end": 2277,
											"name": "PUSH",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 2255,
											"end": 2273,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2255,
											"end": 2273,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2255,
											"end": 2273,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2248,
											"end": 2278,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2314,
											"end": 2348,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 2294,
											"end": 2312,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 2294,
											"end": 2312,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2294,
											"end": 2312,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2349,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2365,
											"end": 2383,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2365,
											"end": 2383,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2365,
											"end": 2383,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2358,
											"end": 2391,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2408,
											"end": 2427,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 2408,
											"end": 2427,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7663,
											"end": 7727,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 2034,
											"end": 2433,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7663,
											"end": 7727,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 7663,
											"end": 7727,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7811,
											"end": 7826,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7811,
											"end": 7826,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7789,
											"end": 7808,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7811,
											"end": 7826,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7811,
											"end": 7826,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7811,
											"end": 7826,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7811,
											"end": 7826,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7811,
											"end": 7826,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7811,
											"end": 7826,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7811,
											"end": 7826,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7811,
											"end": 7826,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7811,
											"end": 7826,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7811,
											"end": 7826,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7811,
											"end": 7826,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7844,
											"end": 7865,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7844,
											"end": 7865,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7844,
											"end": 7865,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7844,
											"end": 7865,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7836,
											"end": 7908,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 7836,
											"end": 7908,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7836,
											"end": 7908,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7836,
											"end": 7908,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7836,
											"end": 7908,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7836,
											"end": 7908,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3401,
											"end": 3403,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7836,
											"end": 7908,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7836,
											"end": 7908,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7836,
											"end": 7908,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3383,
											"end": 3404,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3440,
											"end": 3442,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 3420,
											"end": 3438,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3420,
											"end": 3438,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3420,
											"end": 3438,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3413,
											"end": 3443,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3479,
											"end": 3513,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 3459,
											"end": 3477,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3459,
											"end": 3477,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3459,
											"end": 3477,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3452,
											"end": 3514,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3530,
											"end": 3548,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3530,
											"end": 3548,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3530,
											"end": 3548,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3523,
											"end": 3559,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3576,
											"end": 3595,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 3576,
											"end": 3595,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7836,
											"end": 7908,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 3199,
											"end": 3601,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7836,
											"end": 7908,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 7836,
											"end": 7908,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7942,
											"end": 7957,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7942,
											"end": 7957,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7942,
											"end": 7957,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7942,
											"end": 7951,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7942,
											"end": 7957,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7942,
											"end": 7957,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7942,
											"end": 7957,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7942,
											"end": 7957,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7942,
											"end": 7957,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7942,
											"end": 7957,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7942,
											"end": 7957,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7942,
											"end": 7957,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7942,
											"end": 7957,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7942,
											"end": 7957,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7942,
											"end": 7957,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7960,
											"end": 7980,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7960,
											"end": 7980,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7960,
											"end": 7980,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7942,
											"end": 7980,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7942,
											"end": 7980,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8000,
											"end": 8013,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8000,
											"end": 8013,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8000,
											"end": 8013,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8000,
											"end": 8013,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8000,
											"end": 8013,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8000,
											"end": 8013,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8000,
											"end": 8013,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8000,
											"end": 8013,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8000,
											"end": 8023,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8000,
											"end": 8023,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7974,
											"end": 7980,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7974,
											"end": 7980,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7942,
											"end": 7951,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8000,
											"end": 8023,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 8000,
											"end": 8023,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7974,
											"end": 7980,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7974,
											"end": 7980,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8000,
											"end": 8023,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 8000,
											"end": 8023,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8000,
											"end": 8023,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 8000,
											"end": 8023,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8000,
											"end": 8023,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8000,
											"end": 8023,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8000,
											"end": 8023,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8000,
											"end": 8023,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8000,
											"end": 8023,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8000,
											"end": 8023,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8000,
											"end": 8023,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8054,
											"end": 8056,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8039,
											"end": 8065,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8048,
											"end": 8052,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8039,
											"end": 8065,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8039,
											"end": 8065,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8058,
											"end": 8064,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8039,
											"end": 8065,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8039,
											"end": 8065,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8039,
											"end": 8065,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 8039,
											"end": 8065,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4969,
											"end": 4994,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4969,
											"end": 4994,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4957,
											"end": 4959,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4942,
											"end": 4960,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4942,
											"end": 4960,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4823,
											"end": 5000,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8039,
											"end": 8065,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 8039,
											"end": 8065,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8039,
											"end": 8065,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8039,
											"end": 8065,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8039,
											"end": 8065,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8039,
											"end": 8065,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8039,
											"end": 8065,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8039,
											"end": 8065,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8039,
											"end": 8065,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 7575,
											"end": 8122,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7467,
											"end": 8122,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7467,
											"end": 8122,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7467,
											"end": 8122,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7467,
											"end": 8122,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 251,
											"end": 257,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 301,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 283,
											"end": 290,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 275,
											"end": 307,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 272,
											"end": 324,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 272,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 272,
											"end": 324,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 362,
											"end": 371,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 333,
											"end": 372,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 192,
											"end": 378,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 383,
											"end": 643,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 383,
											"end": 643,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 451,
											"end": 457,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 459,
											"end": 465,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 512,
											"end": 514,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 500,
											"end": 509,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 491,
											"end": 498,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 487,
											"end": 510,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 483,
											"end": 515,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 480,
											"end": 532,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 480,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 480,
											"end": 532,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 528,
											"end": 529,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 525,
											"end": 526,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 518,
											"end": 530,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 480,
											"end": 532,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 480,
											"end": 532,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 551,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 570,
											"end": 579,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 551,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 541,
											"end": 580,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 541,
											"end": 580,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 599,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 633,
											"end": 635,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 622,
											"end": 631,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 618,
											"end": 636,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 599,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 589,
											"end": 637,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 589,
											"end": 637,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 383,
											"end": 643,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 383,
											"end": 643,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 383,
											"end": 643,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 383,
											"end": 643,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 383,
											"end": 643,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 383,
											"end": 643,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 648,
											"end": 976,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 648,
											"end": 976,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 725,
											"end": 731,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 733,
											"end": 739,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 741,
											"end": 747,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 794,
											"end": 796,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 782,
											"end": 791,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 773,
											"end": 780,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 769,
											"end": 792,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 765,
											"end": 797,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 762,
											"end": 814,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 762,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 762,
											"end": 814,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 810,
											"end": 811,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 808,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 800,
											"end": 812,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 762,
											"end": 814,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 762,
											"end": 814,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 833,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 852,
											"end": 861,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 833,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 823,
											"end": 862,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 823,
											"end": 862,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 881,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 915,
											"end": 917,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 904,
											"end": 913,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 900,
											"end": 918,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 881,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 871,
											"end": 919,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 871,
											"end": 919,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 966,
											"end": 968,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 955,
											"end": 964,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 951,
											"end": 969,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 938,
											"end": 970,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 928,
											"end": 970,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 928,
											"end": 970,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 648,
											"end": 976,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 648,
											"end": 976,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 648,
											"end": 976,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 648,
											"end": 976,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 648,
											"end": 976,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 648,
											"end": 976,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 981,
											"end": 1235,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 981,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1049,
											"end": 1055,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1057,
											"end": 1063,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1110,
											"end": 1112,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1089,
											"end": 1096,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1085,
											"end": 1108,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1113,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1126,
											"end": 1127,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1123,
											"end": 1124,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1116,
											"end": 1128,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 1168,
											"end": 1177,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1139,
											"end": 1178,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 1225,
											"end": 1227,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1197,
											"end": 1229,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1197,
											"end": 1229,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 981,
											"end": 1235,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1432,
											"end": 2029,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 1432,
											"end": 2029,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1544,
											"end": 1548,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1573,
											"end": 1575,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1602,
											"end": 1604,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1591,
											"end": 1600,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1584,
											"end": 1605,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1640,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1628,
											"end": 1641,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1677,
											"end": 1683,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1672,
											"end": 1674,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1661,
											"end": 1670,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1657,
											"end": 1675,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1650,
											"end": 1684,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1702,
											"end": 1703,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1726,
											"end": 1732,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1723,
											"end": 1724,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1720,
											"end": 1733,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1821,
											"end": 1835,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1821,
											"end": 1835,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1821,
											"end": 1835,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1817,
											"end": 1840,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1817,
											"end": 1840,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1811,
											"end": 1841,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1787,
											"end": 1804,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1787,
											"end": 1804,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1787,
											"end": 1804,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1806,
											"end": 1808,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1783,
											"end": 1809,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1776,
											"end": 1842,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1741,
											"end": 1751,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1741,
											"end": 1751,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1870,
											"end": 1876,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1867,
											"end": 1868,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1864,
											"end": 1877,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1861,
											"end": 1952,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1861,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 1861,
											"end": 1952,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1940,
											"end": 1941,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1935,
											"end": 1937,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1926,
											"end": 1932,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1915,
											"end": 1924,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1933,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1907,
											"end": 1938,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1900,
											"end": 1942,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1861,
											"end": 1952,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 1861,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2013,
											"end": 2015,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1992,
											"end": 2007,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1988,
											"end": 2017,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1973,
											"end": 2018,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1973,
											"end": 2018,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1973,
											"end": 2018,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1973,
											"end": 2018,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2022,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1969,
											"end": 2023,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1969,
											"end": 2023,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1432,
											"end": 2029,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1432,
											"end": 2029,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5194,
											"end": 5419,
											"name": "tag",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 5194,
											"end": 5419,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5234,
											"end": 5237,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5265,
											"end": 5266,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5261,
											"end": 5267,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 5258,
											"end": 5259,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5255,
											"end": 5268,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5252,
											"end": 5388,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5252,
											"end": 5388,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 5252,
											"end": 5388,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5310,
											"end": 5320,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 5305,
											"end": 5308,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 5301,
											"end": 5321,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 5298,
											"end": 5299,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5291,
											"end": 5322,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5345,
											"end": 5349,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 5342,
											"end": 5343,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5335,
											"end": 5350,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5373,
											"end": 5377,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5370,
											"end": 5371,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5363,
											"end": 5378,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5252,
											"end": 5388,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 5252,
											"end": 5388,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5404,
											"end": 5413,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5404,
											"end": 5413,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5194,
											"end": 5419,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5424,
											"end": 5804,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 5424,
											"end": 5804,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5503,
											"end": 5504,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5499,
											"end": 5511,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5499,
											"end": 5511,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5499,
											"end": 5511,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 5499,
											"end": 5511,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5567,
											"end": 5628,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 5567,
											"end": 5628,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5621,
											"end": 5625,
											"name": "PUSH",
											"source": 6,
											"value": "7F"
										},
										{
											"begin": 5613,
											"end": 5619,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5609,
											"end": 5626,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5599,
											"end": 5626,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5599,
											"end": 5626,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5567,
											"end": 5628,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 5567,
											"end": 5628,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5674,
											"end": 5676,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5666,
											"end": 5672,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5663,
											"end": 5677,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5643,
											"end": 5661,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5640,
											"end": 5678,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 5637,
											"end": 5798,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5637,
											"end": 5798,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 5637,
											"end": 5798,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5720,
											"end": 5730,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 5715,
											"end": 5718,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 5711,
											"end": 5731,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 5708,
											"end": 5709,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5701,
											"end": 5732,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5755,
											"end": 5759,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 5752,
											"end": 5753,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5745,
											"end": 5760,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5783,
											"end": 5787,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5780,
											"end": 5781,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5773,
											"end": 5788,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5637,
											"end": 5798,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 5637,
											"end": 5798,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5637,
											"end": 5798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5424,
											"end": 5804,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5424,
											"end": 5804,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5424,
											"end": 5804,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5424,
											"end": 5804,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"wLONG/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"wLONG/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"wLONG/ERC20.sol\":{\"keccak256\":\"0x502b3c5628698f37a5fa40e176566b97970628471678f7a077c4d7e28c070f4f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b3361bd7195607a59cc5a624cefc89ce3f4bad791a5ae60e875dfcca6d4c299\",\"dweb:/ipfs/QmdypjtxS53WedhoNM1ZZfcqpCJXEiF3edkLWz9QtENSGe\"]},\"wLONG/IERC20.sol\":{\"keccak256\":\"0x8b6892b3623b26123d16a0fe6ee822d293d570a620e8e3c2a4167bb48b2e837a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fa89422c1d99038539ed51c528f0284f78d62f09dd9975789495d220a6fadb69\",\"dweb:/ipfs/QmfMLTkCvWJL8v5G1oyGgD1MfWvu1MC6HoCvDu1A4JTzZm\"]},\"wLONG/IERC20Metadata.sol\":{\"keccak256\":\"0xc9728de78b2dc3785bc6cc070e1ed8a2a855459b99f6bc1b8d17b4d2821fe36e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2977d4a4bfcd16800b9442abd22134592100c156d5a5f2b6d1cd3d62818ab7b\",\"dweb:/ipfs/QmcKhKHMKriycRzyFKaQMAqFun33547tykyn2A1tA1KBBW\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"wLONG/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"wLONG/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"wLONG/IERC20.sol\":{\"keccak256\":\"0x8b6892b3623b26123d16a0fe6ee822d293d570a620e8e3c2a4167bb48b2e837a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fa89422c1d99038539ed51c528f0284f78d62f09dd9975789495d220a6fadb69\",\"dweb:/ipfs/QmfMLTkCvWJL8v5G1oyGgD1MfWvu1MC6HoCvDu1A4JTzZm\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"wLONG/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"wLONG/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"wLONG/IERC20.sol\":{\"keccak256\":\"0x8b6892b3623b26123d16a0fe6ee822d293d570a620e8e3c2a4167bb48b2e837a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fa89422c1d99038539ed51c528f0284f78d62f09dd9975789495d220a6fadb69\",\"dweb:/ipfs/QmfMLTkCvWJL8v5G1oyGgD1MfWvu1MC6HoCvDu1A4JTzZm\"]},\"wLONG/IERC20Metadata.sol\":{\"keccak256\":\"0xc9728de78b2dc3785bc6cc070e1ed8a2a855459b99f6bc1b8d17b4d2821fe36e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2977d4a4bfcd16800b9442abd22134592100c156d5a5f2b6d1cd3d62818ab7b\",\"dweb:/ipfs/QmcKhKHMKriycRzyFKaQMAqFun33547tykyn2A1tA1KBBW\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"wLONG/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"wLONG/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"wLONG/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"wLONG/Ownable.sol\":{\"keccak256\":\"0xbcc9148a06a43bc84a2b808bedebbbe84b92b43fc6bb9dd3db45778765e7d847\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://79f5a2d7fb3c0a8ed15b39cca0fd18b1d451a989ecf57338a902ded590e03ba3\",\"dweb:/ipfs/QmUSn9dnKP1NRTL1HHvCSBhLZiXqHEBknVEMtnW9ETWVLs\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"wLONG/wLONG.sol": {
				"wLONG": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": " decimals столькоже сколько и в орегинальном LONG coin, totalSupply изначально 0, так как токены минтятся юзерами через купоны, подтверждающие сжигание LONG"
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"mint(uint256,bytes)": {
								"details": "Это единственный метод для минтинга wLONG. Вызывающий адрес долже предоставить валидную сигнатуру (купон), полученную после сжигагия орегинальных LONG в количестве amount"
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"stateVariables": {
							"_rset": {
								"details": "Для проверки купонов на сожженный LONG используем механизм ECDSA-подписи,  где r-часть юзабельна как одноразовый лицензионный ключ. Чтобы не было подделок нужно r=k*G генерировать каждый раз из нового случайного k (nonce)!!! При такой схеме в хешь сообщения включается число сожженных LONG а восстанавливаемый при проверке  сигнатуры адрес (публичный ключь) - это _owner-адрес в контракте (возможна его смена при компроментации) Важно! Для предотвращения Front Running в хешь сообщения подмешивается также адрес отправителя (_msgSender()), то есть купоны на сжигание всегда именные и заюзать с другого адреса невозможно "
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"wLONG/wLONG.sol\":448:5150  contract wLONG is ERC20, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"wLONG/wLONG.sol\":488:539  constructor() ERC20(\"wrapped LONG\",\"wLONG\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"wLONG/ERC20.sol\":1957:2070  constructor(string memory name_, string memory symbol_) {... */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  dup3\n  mstore\n  0x0c\n  dup2\n  mstore\n  shl(0xa0, 0x77726170706564204c4f4e47)\n  0x20\n  dup1\n  dup4\n  add\n  swap2\n  dup3\n  mstore\n  dup4\n  mload\n  dup1\n  dup6\n  add\n  swap1\n  swap5\n  mstore\n  0x05\n  dup5\n  mstore\n  shl(0xd8, 0x774c4f4e47)\n  swap1\n  dup5\n  add\n  mstore\n    /* \"wLONG/ERC20.sol\":2023:2036  _name = name_ */\n  dup2\n  mload\n    /* \"wLONG/ERC20.sol\":1957:2070  constructor(string memory name_, string memory symbol_) {... */\n  swap2\n  swap3\n  swap2\n    /* \"wLONG/ERC20.sol\":2023:2036  _name = name_ */\n  tag_6\n  swap2\n    /* \"wLONG/ERC20.sol\":2023:2028  _name */\n  0x03\n  swap2\n    /* \"wLONG/ERC20.sol\":2023:2036  _name = name_ */\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"wLONG/ERC20.sol\":2046:2063  _symbol = symbol_ */\n  dup1\n  mload\n  tag_8\n  swap1\n    /* \"wLONG/ERC20.sol\":2046:2053  _symbol */\n  0x04\n  swap1\n    /* \"wLONG/ERC20.sol\":2046:2063  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"wLONG/ERC20.sol\":1957:2070  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"wLONG/Ownable.sol\":914:946  _transferOwnership(_msgSender()) */\n  tag_10\n    /* \"wLONG/Ownable.sol\":933:945  _msgSender() */\n  tag_11\n    /* \"wLONG/Ownable.sol\":933:943  _msgSender */\n  shl(0x20, tag_12)\n    /* \"wLONG/Ownable.sol\":933:945  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"wLONG/Ownable.sol\":914:932  _transferOwnership */\n  tag_13\n    /* \"wLONG/Ownable.sol\":914:946  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_10:\n    /* \"wLONG/wLONG.sol\":448:5150  contract wLONG is ERC20, Ownable {... */\n  jump(tag_29)\n    /* \"wLONG/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_12:\n    /* \"wLONG/Context.sol\":719:729  msg.sender */\n  caller\n  swap1\n    /* \"wLONG/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  jump\t// out\n    /* \"wLONG/Ownable.sol\":2269:2456  function _transferOwnership(address newOwner) internal virtual {... */\ntag_13:\n    /* \"wLONG/Ownable.sol\":2361:2367  _owner */\n  0x05\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"wLONG/Ownable.sol\":2377:2394  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"wLONG/Ownable.sol\":2409:2449  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"wLONG/Ownable.sol\":2361:2367  _owner */\n  swap2\n  and\n  swap2\n    /* \"wLONG/Ownable.sol\":2377:2394  _owner = newOwner */\n  swap1\n    /* \"wLONG/Ownable.sol\":2361:2367  _owner */\n  dup3\n  swap1\n    /* \"wLONG/Ownable.sol\":2409:2449  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"wLONG/Ownable.sol\":2342:2358  address oldOwner */\n  0x00\n  swap1\n    /* \"wLONG/Ownable.sol\":2409:2449  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"wLONG/Ownable.sol\":2332:2456  {... */\n  pop\n    /* \"wLONG/Ownable.sol\":2269:2456  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"wLONG/wLONG.sol\":448:5150  contract wLONG is ERC20, Ownable {... */\ntag_7:\n  dup3\n  dup1\n  sload\n  tag_18\n  swap1\n  tag_19\n  jump\t// in\ntag_18:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_21\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_24)\ntag_21:\n  dup3\n  0x1f\n  lt\n  tag_22\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_24)\ntag_22:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_24\n  jumpi\n  swap2\n  dup3\n  add\ntag_23:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_24\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_23)\ntag_24:\n  pop\n  tag_25\n  swap3\n  swap2\n  pop\n  tag_26\n  jump\t// in\ntag_25:\n  pop\n  swap1\n  jump\t// out\ntag_26:\ntag_27:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_25\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_27)\n    /* \"#utility.yul\":14:394   */\ntag_19:\n    /* \"#utility.yul\":93:94   */\n  0x01\n    /* \"#utility.yul\":89:101   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":136:148   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":157:218   */\n  tag_31\n  jumpi\n    /* \"#utility.yul\":211:215   */\n  0x7f\n    /* \"#utility.yul\":203:209   */\n  dup3\n    /* \"#utility.yul\":199:216   */\n  and\n    /* \"#utility.yul\":189:216   */\n  swap2\n  pop\n    /* \"#utility.yul\":157:218   */\ntag_31:\n    /* \"#utility.yul\":264:266   */\n  0x20\n    /* \"#utility.yul\":256:262   */\n  dup3\n    /* \"#utility.yul\":253:267   */\n  lt\n    /* \"#utility.yul\":233:251   */\n  dup2\n    /* \"#utility.yul\":230:268   */\n  eq\n    /* \"#utility.yul\":227:388   */\n  iszero\n  tag_32\n  jumpi\n    /* \"#utility.yul\":310:320   */\n  0x4e487b71\n    /* \"#utility.yul\":305:308   */\n  0xe0\n    /* \"#utility.yul\":301:321   */\n  shl\n    /* \"#utility.yul\":298:299   */\n  0x00\n    /* \"#utility.yul\":291:322   */\n  mstore\n    /* \"#utility.yul\":345:349   */\n  0x22\n    /* \"#utility.yul\":342:343   */\n  0x04\n    /* \"#utility.yul\":335:350   */\n  mstore\n    /* \"#utility.yul\":373:377   */\n  0x24\n    /* \"#utility.yul\":370:371   */\n  0x00\n    /* \"#utility.yul\":363:378   */\n  revert\n    /* \"#utility.yul\":227:388   */\ntag_32:\n  pop\n    /* \"#utility.yul\":14:394   */\n  swap2\n  swap1\n  pop\n  jump\t// out\ntag_29:\n    /* \"wLONG/wLONG.sol\":448:5150  contract wLONG is ERC20, Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"wLONG/wLONG.sol\":448:5150  contract wLONG is ERC20, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xdb7fd408\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      dup1\n      0x8da5cb5b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      dup1\n      0x23b872dd\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"wLONG/ERC20.sol\":2135:2233  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"wLONG/ERC20.sol\":4412:4609  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_24\n      tag_25\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n        /* \"#utility.yul\":3052:3066   */\n      swap1\n      iszero\n        /* \"#utility.yul\":3045:3067   */\n      iszero\n        /* \"#utility.yul\":3027:3068   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3015:3017   */\n      0x20\n        /* \"#utility.yul\":3000:3018   */\n      add\n        /* \"wLONG/ERC20.sol\":4412:4609  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_22\n        /* \"#utility.yul\":2887:3074   */\n      jump\n        /* \"wLONG/ERC20.sol\":3223:3329  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"wLONG/ERC20.sol\":3310:3322  _totalSupply */\n      sload(0x02)\n        /* \"wLONG/ERC20.sol\":3223:3329  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_30:\n      mload(0x40)\n        /* \"#utility.yul\":8866:8891   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":8854:8856   */\n      0x20\n        /* \"#utility.yul\":8839:8857   */\n      add\n        /* \"wLONG/ERC20.sol\":3223:3329  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_22\n        /* \"#utility.yul\":8720:8897   */\n      jump\n        /* \"wLONG/ERC20.sol\":5171:5457  function transferFrom(... */\n    tag_6:\n      tag_24\n      tag_35\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n        /* \"wLONG/wLONG.sol\":835:925  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"wLONG/wLONG.sol\":893:898  uint8 */\n      0x00\n        /* \"#utility.yul\":9044:9080   */\n      dup2\n      mstore\n        /* \"#utility.yul\":9032:9034   */\n      0x20\n        /* \"#utility.yul\":9017:9035   */\n      add\n        /* \"wLONG/wLONG.sol\":835:925  function decimals() public view virtual override returns (uint8) {... */\n      tag_22\n        /* \"#utility.yul\":8902:9086   */\n      jump\n        /* \"wLONG/ERC20.sol\":5852:6088  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_24\n      tag_44\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_44:\n      tag_45\n      jump\t// in\n        /* \"wLONG/ERC20.sol\":3387:3512  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_30\n      tag_48\n      calldatasize\n      0x04\n      tag_49\n      jump\t// in\n    tag_48:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"wLONG/ERC20.sol\":3487:3505  _balances[account] */\n      and\n        /* \"wLONG/ERC20.sol\":3461:3468  uint256 */\n      0x00\n        /* \"wLONG/ERC20.sol\":3487:3505  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"wLONG/ERC20.sol\":3387:3512  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"wLONG/Ownable.sol\":1029:1114  function owner() public view virtual returns (address) {... */\n    tag_10:\n        /* \"wLONG/Ownable.sol\":1101:1107  _owner */\n      sload(0x05)\n        /* \"wLONG/Ownable.sol\":1029:1114  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"wLONG/Ownable.sol\":1101:1107  _owner */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2825:2876   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2813:2815   */\n      0x20\n        /* \"#utility.yul\":2798:2816   */\n      add\n        /* \"wLONG/Ownable.sol\":1029:1114  function owner() public view virtual returns (address) {... */\n      tag_22\n        /* \"#utility.yul\":2679:2882   */\n      jump\n        /* \"wLONG/ERC20.sol\":2346:2448  function symbol() public view virtual override returns (string memory) {... */\n    tag_11:\n      tag_20\n      tag_57\n      jump\t// in\n        /* \"wLONG/ERC20.sol\":6575:7004  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_12:\n      tag_24\n      tag_60\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_60:\n      tag_61\n      jump\t// in\n        /* \"wLONG/ERC20.sol\":3708:3897  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_13:\n      tag_24\n      tag_64\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_64:\n      tag_65\n      jump\t// in\n        /* \"wLONG/wLONG.sol\":3129:5148  function mint(uint256 amount, bytes memory signature) external virtual returns (bool) {... */\n    tag_14:\n      tag_24\n      tag_68\n      calldatasize\n      0x04\n      tag_69\n      jump\t// in\n    tag_68:\n      tag_70\n      jump\t// in\n        /* \"wLONG/ERC20.sol\":3955:4104  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_15:\n      tag_30\n      tag_73\n      calldatasize\n      0x04\n      tag_74\n      jump\t// in\n    tag_73:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"wLONG/ERC20.sol\":4070:4088  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"wLONG/ERC20.sol\":4044:4051  uint256 */\n      0x00\n        /* \"wLONG/ERC20.sol\":4070:4088  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"wLONG/ERC20.sol\":4070:4081  _allowances */\n      0x01\n        /* \"wLONG/ERC20.sol\":4070:4088  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"wLONG/ERC20.sol\":4070:4097  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"wLONG/ERC20.sol\":3955:4104  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\n        /* \"wLONG/Ownable.sol\":1917:2115  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_16:\n      tag_77\n      tag_78\n      calldatasize\n      0x04\n      tag_49\n      jump\t// in\n    tag_78:\n      tag_79\n      jump\t// in\n    tag_77:\n      stop\n        /* \"wLONG/ERC20.sol\":2135:2233  function name() public view virtual override returns (string memory) {... */\n    tag_21:\n        /* \"wLONG/ERC20.sol\":2189:2202  string memory */\n      0x60\n        /* \"wLONG/ERC20.sol\":2221:2226  _name */\n      0x03\n        /* \"wLONG/ERC20.sol\":2214:2226  return _name */\n      dup1\n      sload\n      tag_81\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_83\n      swap1\n      tag_82\n      jump\t// in\n    tag_83:\n      dup1\n      iszero\n      tag_84\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_85\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_84)\n    tag_85:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_86:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_86\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_84:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"wLONG/ERC20.sol\":2135:2233  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"wLONG/ERC20.sol\":4412:4609  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_27:\n        /* \"wLONG/ERC20.sol\":4495:4499  bool */\n      0x00\n        /* \"wLONG/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"wLONG/ERC20.sol\":4549:4581  _approve(owner, spender, amount) */\n      tag_90\n        /* \"wLONG/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"wLONG/ERC20.sol\":4565:4572  spender */\n      dup6\n        /* \"wLONG/ERC20.sol\":4574:4580  amount */\n      dup6\n        /* \"wLONG/ERC20.sol\":4549:4557  _approve */\n      tag_91\n        /* \"wLONG/ERC20.sol\":4549:4581  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_90:\n      pop\n        /* \"wLONG/ERC20.sol\":4598:4602  true */\n      0x01\n      swap4\n        /* \"wLONG/ERC20.sol\":4412:4609  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"wLONG/ERC20.sol\":5171:5457  function transferFrom(... */\n    tag_37:\n        /* \"wLONG/ERC20.sol\":5298:5302  bool */\n      0x00\n        /* \"wLONG/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"wLONG/ERC20.sol\":5354:5392  _spendAllowance(from, spender, amount) */\n      tag_95\n        /* \"wLONG/ERC20.sol\":5370:5374  from */\n      dup6\n        /* \"wLONG/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"wLONG/ERC20.sol\":5385:5391  amount */\n      dup6\n        /* \"wLONG/ERC20.sol\":5354:5369  _spendAllowance */\n      tag_96\n        /* \"wLONG/ERC20.sol\":5354:5392  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_95:\n        /* \"wLONG/ERC20.sol\":5402:5429  _transfer(from, to, amount) */\n      tag_97\n        /* \"wLONG/ERC20.sol\":5412:5416  from */\n      dup6\n        /* \"wLONG/ERC20.sol\":5418:5420  to */\n      dup6\n        /* \"wLONG/ERC20.sol\":5422:5428  amount */\n      dup6\n        /* \"wLONG/ERC20.sol\":5402:5411  _transfer */\n      tag_98\n        /* \"wLONG/ERC20.sol\":5402:5429  _transfer(from, to, amount) */\n      jump\t// in\n    tag_97:\n      pop\n        /* \"wLONG/ERC20.sol\":5446:5450  true */\n      0x01\n      swap5\n        /* \"wLONG/ERC20.sol\":5171:5457  function transferFrom(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"wLONG/ERC20.sol\":5852:6088  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_45:\n        /* \"wLONG/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"wLONG/ERC20.sol\":5940:5944  bool */\n      0x00\n        /* \"wLONG/ERC20.sol\":6019:6037  _allowances[owner] */\n      dup2\n      dup2\n      mstore\n        /* \"wLONG/ERC20.sol\":6019:6030  _allowances */\n      0x01\n        /* \"wLONG/ERC20.sol\":6019:6037  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"wLONG/ERC20.sol\":6019:6046  _allowances[owner][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"wLONG/ERC20.sol\":5940:5944  bool */\n      swap1\n      swap2\n        /* \"wLONG/Context.sol\":719:729  msg.sender */\n      swap1\n        /* \"wLONG/ERC20.sol\":5994:6060  _approve(owner, spender, _allowances[owner][spender] + addedValue) */\n      tag_90\n      swap1\n        /* \"wLONG/Context.sol\":719:729  msg.sender */\n      dup3\n      swap1\n        /* \"wLONG/ERC20.sol\":6019:6046  _allowances[owner][spender] */\n      dup7\n      swap1\n        /* \"wLONG/ERC20.sol\":6019:6059  _allowances[owner][spender] + addedValue */\n      tag_103\n      swap1\n        /* \"wLONG/ERC20.sol\":6049:6059  addedValue */\n      dup8\n      swap1\n        /* \"wLONG/ERC20.sol\":6019:6059  _allowances[owner][spender] + addedValue */\n      tag_104\n      jump\t// in\n    tag_103:\n        /* \"wLONG/ERC20.sol\":5994:6002  _approve */\n      tag_91\n        /* \"wLONG/ERC20.sol\":5994:6060  _approve(owner, spender, _allowances[owner][spender] + addedValue) */\n      jump\t// in\n        /* \"wLONG/ERC20.sol\":2346:2448  function symbol() public view virtual override returns (string memory) {... */\n    tag_57:\n        /* \"wLONG/ERC20.sol\":2402:2415  string memory */\n      0x60\n        /* \"wLONG/ERC20.sol\":2434:2441  _symbol */\n      0x04\n        /* \"wLONG/ERC20.sol\":2427:2441  return _symbol */\n      dup1\n      sload\n      tag_81\n      swap1\n      tag_82\n      jump\t// in\n        /* \"wLONG/ERC20.sol\":6575:7004  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_61:\n        /* \"wLONG/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"wLONG/ERC20.sol\":6668:6672  bool */\n      0x00\n        /* \"wLONG/ERC20.sol\":6749:6767  _allowances[owner] */\n      dup2\n      dup2\n      mstore\n        /* \"wLONG/ERC20.sol\":6749:6760  _allowances */\n      0x01\n        /* \"wLONG/ERC20.sol\":6749:6767  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"wLONG/ERC20.sol\":6749:6776  _allowances[owner][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"wLONG/ERC20.sol\":6668:6672  bool */\n      swap1\n      swap2\n        /* \"wLONG/Context.sol\":719:729  msg.sender */\n      swap1\n        /* \"wLONG/ERC20.sol\":6794:6829  currentAllowance >= subtractedValue */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"wLONG/ERC20.sol\":6786:6871  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_115\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8156:8158   */\n      0x20\n        /* \"wLONG/ERC20.sol\":6786:6871  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8138:8159   */\n      mstore\n        /* \"#utility.yul\":8195:8197   */\n      0x25\n        /* \"#utility.yul\":8175:8193   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8168:8198   */\n      mstore\n        /* \"#utility.yul\":8234:8268   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":8214:8232   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8207:8269   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":8285:8303   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8278:8313   */\n      mstore\n        /* \"#utility.yul\":8330:8349   */\n      0x84\n      add\n        /* \"wLONG/ERC20.sol\":6786:6871  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_116:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_115:\n        /* \"wLONG/ERC20.sol\":6905:6965  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_97\n        /* \"wLONG/ERC20.sol\":6914:6919  owner */\n      dup3\n        /* \"wLONG/ERC20.sol\":6921:6928  spender */\n      dup7\n        /* \"wLONG/ERC20.sol\":6949:6964  subtractedValue */\n      dup7\n        /* \"wLONG/ERC20.sol\":6930:6946  currentAllowance */\n      dup5\n        /* \"wLONG/ERC20.sol\":6930:6964  currentAllowance - subtractedValue */\n      sub\n        /* \"wLONG/ERC20.sol\":6905:6913  _approve */\n      tag_91\n        /* \"wLONG/ERC20.sol\":6905:6965  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"wLONG/ERC20.sol\":3708:3897  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_65:\n        /* \"wLONG/ERC20.sol\":3787:3791  bool */\n      0x00\n        /* \"wLONG/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"wLONG/ERC20.sol\":3841:3869  _transfer(owner, to, amount) */\n      tag_90\n        /* \"wLONG/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"wLONG/ERC20.sol\":3858:3860  to */\n      dup6\n        /* \"wLONG/ERC20.sol\":3862:3868  amount */\n      dup6\n        /* \"wLONG/ERC20.sol\":3841:3850  _transfer */\n      tag_98\n        /* \"wLONG/ERC20.sol\":3841:3869  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"wLONG/wLONG.sol\":3129:5148  function mint(uint256 amount, bytes memory signature) external virtual returns (bool) {... */\n    tag_70:\n        /* \"wLONG/wLONG.sol\":3422:3426  0x20 */\n      0x20\n        /* \"wLONG/wLONG.sol\":3407:3427  add(signature, 0x20) */\n      dup2\n      dup2\n      add\n        /* \"wLONG/wLONG.sol\":3401:3428  mload(add(signature, 0x20)) */\n      mload\n        /* \"wLONG/wLONG.sol\":3467:3471  0x40 */\n      0x40\n        /* \"wLONG/wLONG.sol\":3452:3472  add(signature, 0x40) */\n      dup1\n      dup5\n      add\n        /* \"wLONG/wLONG.sol\":3446:3473  mload(add(signature, 0x40)) */\n      mload\n        /* \"wLONG/wLONG.sol\":3209:3213  bool */\n      0x00\n        /* \"wLONG/wLONG.sol\":3501:3509  _rset[r] */\n      dup4\n      dup2\n      mstore\n        /* \"wLONG/wLONG.sol\":3501:3506  _rset */\n      0x06\n        /* \"wLONG/wLONG.sol\":3501:3509  _rset[r] */\n      swap1\n      swap5\n      mstore\n      swap1\n      dup4\n      keccak256\n      sload\n        /* \"wLONG/Context.sol\":719:729  msg.sender */\n      caller\n      swap3\n        /* \"wLONG/wLONG.sol\":3401:3428  mload(add(signature, 0x20)) */\n      swap2\n        /* \"wLONG/wLONG.sol\":3446:3473  mload(add(signature, 0x40)) */\n      swap1\n        /* \"wLONG/wLONG.sol\":3501:3509  _rset[r] */\n      0xff\n      and\n        /* \"wLONG/wLONG.sol\":3500:3509  !_rset[r] */\n      iszero\n        /* \"wLONG/wLONG.sol\":3492:3546  require(!_rset[r], \"wLONG: key has already been used\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6626:6628   */\n      0x20\n        /* \"wLONG/wLONG.sol\":3492:3546  require(!_rset[r], \"wLONG: key has already been used\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6608:6629   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":6645:6663   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6638:6668   */\n      mstore\n        /* \"#utility.yul\":6704:6738   */\n      0x774c4f4e473a206b65792068617320616c7265616479206265656e2075736564\n        /* \"#utility.yul\":6684:6702   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6677:6739   */\n      mstore\n        /* \"#utility.yul\":6756:6774   */\n      0x64\n      add\n        /* \"wLONG/wLONG.sol\":3492:3546  require(!_rset[r], \"wLONG: key has already been used\") */\n      tag_116\n        /* \"#utility.yul\":6424:6780   */\n      jump\n        /* \"wLONG/wLONG.sol\":3492:3546  require(!_rset[r], \"wLONG: key has already been used\") */\n    tag_124:\n        /* \"wLONG/wLONG.sol\":3579:3621  abi.encodePacked(minter,\"\\x19\\x01\",amount) */\n      mload(0x40)\n      not(0xffffffffffffffffffffffff)\n        /* \"#utility.yul\":2512:2514   */\n      0x60\n        /* \"#utility.yul\":2508:2523   */\n      dup6\n      swap1\n      shl\n        /* \"#utility.yul\":2504:2557   */\n      and\n        /* \"wLONG/wLONG.sol\":3579:3621  abi.encodePacked(minter,\"\\x19\\x01\",amount) */\n      0x20\n      dup3\n      add\n        /* \"#utility.yul\":2492:2558   */\n      mstore\n      shl(0xf0, 0x1901)\n        /* \"#utility.yul\":2574:2586   */\n      0x34\n      dup3\n      add\n        /* \"#utility.yul\":2567:2603   */\n      mstore\n        /* \"#utility.yul\":2619:2631   */\n      0x36\n      dup2\n      add\n        /* \"#utility.yul\":2612:2640   */\n      dup8\n      swap1\n      mstore\n        /* \"wLONG/wLONG.sol\":3557:3566  bytes32 h */\n      0x00\n      swap1\n        /* \"#utility.yul\":2656:2668   */\n      0x56\n      add\n        /* \"wLONG/wLONG.sol\":3579:3621  abi.encodePacked(minter,\"\\x19\\x01\",amount) */\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      dup3\n      dup3\n      mstore\n        /* \"wLONG/wLONG.sol\":3569:3622  keccak256(abi.encodePacked(minter,\"\\x19\\x01\",amount)) */\n      dup1\n      mload\n        /* \"wLONG/wLONG.sol\":3579:3621  abi.encodePacked(minter,\"\\x19\\x01\",amount) */\n      0x20\n        /* \"wLONG/wLONG.sol\":3569:3622  keccak256(abi.encodePacked(minter,\"\\x19\\x01\",amount)) */\n      swap2\n      dup3\n      add\n      keccak256\n        /* \"wLONG/wLONG.sol\":4575:4590  address signer1 */\n      0x00\n        /* \"wLONG/wLONG.sol\":4593:4622  ecrecover(h, uint8(27), r, s) */\n      dup1\n      dup6\n      mstore\n      swap2\n      dup5\n      add\n      dup1\n      dup5\n      mstore\n        /* \"#utility.yul\":3306:3331   */\n      dup2\n      swap1\n      mstore\n        /* \"wLONG/wLONG.sol\":4612:4614  27 */\n      0x1b\n        /* \"#utility.yul\":3347:3365   */\n      swap3\n      dup5\n      add\n        /* \"#utility.yul\":3340:3385   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":3401:3419   */\n      0x60\n      dup4\n      add\n        /* \"#utility.yul\":3394:3428   */\n      dup7\n      swap1\n      mstore\n        /* \"#utility.yul\":3444:3462   */\n      0x80\n      dup4\n      add\n        /* \"#utility.yul\":3437:3471   */\n      dup6\n      swap1\n      mstore\n        /* \"wLONG/wLONG.sol\":3569:3622  keccak256(abi.encodePacked(minter,\"\\x19\\x01\",amount)) */\n      swap1\n      swap3\n      pop\n        /* \"wLONG/wLONG.sol\":4575:4590  address signer1 */\n      swap1\n        /* \"wLONG/wLONG.sol\":4593:4622  ecrecover(h, uint8(27), r, s) */\n      0x01\n      swap1\n        /* \"#utility.yul\":3278:3297   */\n      0xa0\n      add\n        /* \"wLONG/wLONG.sol\":4593:4622  ecrecover(h, uint8(27), r, s) */\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_132\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_132:\n      pop\n      pop\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      add\n      mload\n        /* \"wLONG/wLONG.sol\":4624:4639  address signer2 */\n      0x00\n        /* \"wLONG/wLONG.sol\":4642:4671  ecrecover(h, uint8(28), r, s) */\n      dup1\n      dup4\n      mstore\n        /* \"wLONG/wLONG.sol\":4593:4622  ecrecover(h, uint8(27), r, s) */\n      0x20\n        /* \"wLONG/wLONG.sol\":4642:4671  ecrecover(h, uint8(28), r, s) */\n      dup4\n      add\n      dup1\n      dup6\n      mstore\n        /* \"#utility.yul\":3306:3331   */\n      dup8\n      swap1\n      mstore\n        /* \"wLONG/wLONG.sol\":4661:4663  28 */\n      0x1c\n        /* \"#utility.yul\":3347:3365   */\n      swap4\n      dup4\n      add\n        /* \"#utility.yul\":3340:3385   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"#utility.yul\":3401:3419   */\n      0x60\n      dup3\n      add\n        /* \"#utility.yul\":3394:3428   */\n      dup9\n      swap1\n      mstore\n        /* \"#utility.yul\":3444:3462   */\n      0x80\n      dup3\n      add\n        /* \"#utility.yul\":3437:3471   */\n      dup8\n      swap1\n      mstore\n        /* \"wLONG/wLONG.sol\":4593:4622  ecrecover(h, uint8(27), r, s) */\n      swap4\n      pop\n        /* \"wLONG/wLONG.sol\":4624:4639  address signer2 */\n      swap1\n      swap2\n      pop\n        /* \"wLONG/wLONG.sol\":4642:4671  ecrecover(h, uint8(28), r, s) */\n      0x01\n      swap1\n        /* \"#utility.yul\":3278:3297   */\n      0xa0\n      add\n        /* \"wLONG/wLONG.sol\":4642:4671  ecrecover(h, uint8(28), r, s) */\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_135\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_135:\n      pop\n      pop\n      pop\n      mload(sub(mload(0x40), 0x20))\n        /* \"wLONG/wLONG.sol\":4624:4671  address signer2 = ecrecover(h, uint8(28), r, s) */\n      swap1\n      pop\n        /* \"wLONG/wLONG.sol\":4698:4705  owner() */\n      tag_136\n        /* \"wLONG/Ownable.sol\":1101:1107  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n      swap1\n        /* \"wLONG/Ownable.sol\":1029:1114  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"wLONG/wLONG.sol\":4698:4705  owner() */\n    tag_136:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"wLONG/wLONG.sol\":4689:4705  signer1==owner() */\n      and\n        /* \"wLONG/wLONG.sol\":4689:4696  signer1 */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"wLONG/wLONG.sol\":4689:4705  signer1==owner() */\n      and\n      eq\n        /* \"wLONG/wLONG.sol\":4689:4725  signer1==owner() || signer2==owner() */\n      dup1\n      tag_137\n      jumpi\n      pop\n        /* \"wLONG/Ownable.sol\":1101:1107  _owner */\n      sload(0x05)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"wLONG/wLONG.sol\":4709:4725  signer2==owner() */\n      dup3\n      dup2\n      and\n        /* \"wLONG/Ownable.sol\":1101:1107  _owner */\n      swap2\n      and\n        /* \"wLONG/wLONG.sol\":4709:4725  signer2==owner() */\n      eq\n        /* \"wLONG/wLONG.sol\":4689:4725  signer1==owner() || signer2==owner() */\n    tag_137:\n        /* \"wLONG/wLONG.sol\":4681:4759  require(signer1==owner() || signer2==owner(), \"wLONG: signature is not valid\") */\n      tag_139\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7798:7800   */\n      0x20\n        /* \"wLONG/wLONG.sol\":4681:4759  require(signer1==owner() || signer2==owner(), \"wLONG: signature is not valid\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7780:7801   */\n      mstore\n        /* \"#utility.yul\":7837:7839   */\n      0x1d\n        /* \"#utility.yul\":7817:7835   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7810:7840   */\n      mstore\n        /* \"#utility.yul\":7876:7907   */\n      0x774c4f4e473a207369676e6174757265206973206e6f742076616c6964000000\n        /* \"#utility.yul\":7856:7874   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7849:7908   */\n      mstore\n        /* \"#utility.yul\":7925:7943   */\n      0x64\n      add\n        /* \"wLONG/wLONG.sol\":4681:4759  require(signer1==owner() || signer2==owner(), \"wLONG: signature is not valid\") */\n      tag_116\n        /* \"#utility.yul\":7596:7949   */\n      jump\n        /* \"wLONG/wLONG.sol\":4681:4759  require(signer1==owner() || signer2==owner(), \"wLONG: signature is not valid\") */\n    tag_139:\n        /* \"wLONG/wLONG.sol\":4921:4929  _rset[r] */\n      0x00\n      dup6\n      dup2\n      mstore\n        /* \"wLONG/wLONG.sol\":4921:4926  _rset */\n      0x06\n        /* \"wLONG/wLONG.sol\":4921:4929  _rset[r] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"wLONG/wLONG.sol\":4921:4934  _rset[r]=true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"wLONG/wLONG.sol\":4930:4934  true */\n      0x01\n        /* \"wLONG/wLONG.sol\":4921:4934  _rset[r]=true */\n      or\n      swap1\n      sstore\n        /* \"wLONG/wLONG.sol\":5020:5041  _mint(minter, amount) */\n      tag_142\n        /* \"wLONG/wLONG.sol\":5026:5032  minter */\n      dup7\n        /* \"wLONG/wLONG.sol\":5034:5040  amount */\n      dup11\n        /* \"wLONG/wLONG.sol\":5020:5025  _mint */\n      tag_143\n        /* \"wLONG/wLONG.sol\":5020:5041  _mint(minter, amount) */\n      jump\t// in\n    tag_142:\n      pop\n        /* \"wLONG/wLONG.sol\":5137:5141  true */\n      0x01\n      swap9\n        /* \"wLONG/wLONG.sol\":3129:5148  function mint(uint256 amount, bytes memory signature) external virtual returns (bool) {... */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"wLONG/Ownable.sol\":1917:2115  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_79:\n        /* \"wLONG/Ownable.sol\":1101:1107  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"wLONG/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"wLONG/Ownable.sol\":1241:1264  owner() == _msgSender() */\n      eq\n        /* \"wLONG/Ownable.sol\":1233:1301  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_148\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6265:6267   */\n      0x20\n        /* \"wLONG/Ownable.sol\":1233:1301  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6247:6268   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":6284:6302   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6277:6307   */\n      mstore\n        /* \"#utility.yul\":6343:6377   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":6323:6341   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6316:6378   */\n      mstore\n        /* \"#utility.yul\":6395:6413   */\n      0x64\n      add\n        /* \"wLONG/Ownable.sol\":1233:1301  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_116\n        /* \"#utility.yul\":6063:6419   */\n      jump\n        /* \"wLONG/Ownable.sol\":1233:1301  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_148:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"wLONG/Ownable.sol\":2005:2027  newOwner != address(0) */\n      dup2\n      and\n        /* \"wLONG/Ownable.sol\":1997:2070  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_152\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4690:4692   */\n      0x20\n        /* \"wLONG/Ownable.sol\":1997:2070  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4672:4693   */\n      mstore\n        /* \"#utility.yul\":4729:4731   */\n      0x26\n        /* \"#utility.yul\":4709:4727   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4702:4732   */\n      mstore\n        /* \"#utility.yul\":4768:4802   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":4748:4766   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4741:4803   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":4819:4837   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4812:4848   */\n      mstore\n        /* \"#utility.yul\":4865:4884   */\n      0x84\n      add\n        /* \"wLONG/Ownable.sol\":1997:2070  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_116\n        /* \"#utility.yul\":4488:4890   */\n      jump\n        /* \"wLONG/Ownable.sol\":1997:2070  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_152:\n        /* \"wLONG/Ownable.sol\":2080:2108  _transferOwnership(newOwner) */\n      tag_155\n        /* \"wLONG/Ownable.sol\":2099:2107  newOwner */\n      dup2\n        /* \"wLONG/Ownable.sol\":2080:2098  _transferOwnership */\n      tag_156\n        /* \"wLONG/Ownable.sol\":2080:2108  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_155:\n        /* \"wLONG/Ownable.sol\":1917:2115  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"wLONG/ERC20.sol\":10118:10488  function _approve(... */\n    tag_91:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"wLONG/ERC20.sol\":10249:10268  owner != address(0) */\n      dup4\n      and\n        /* \"wLONG/ERC20.sol\":10241:10309  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_159\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7393:7395   */\n      0x20\n        /* \"wLONG/ERC20.sol\":10241:10309  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7375:7396   */\n      mstore\n        /* \"#utility.yul\":7432:7434   */\n      0x24\n        /* \"#utility.yul\":7412:7430   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":7405:7435   */\n      mstore\n        /* \"#utility.yul\":7471:7505   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":7451:7469   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7444:7506   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":7522:7540   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7515:7549   */\n      mstore\n        /* \"#utility.yul\":7566:7585   */\n      0x84\n      add\n        /* \"wLONG/ERC20.sol\":10241:10309  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_116\n        /* \"#utility.yul\":7191:7591   */\n      jump\n        /* \"wLONG/ERC20.sol\":10241:10309  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_159:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"wLONG/ERC20.sol\":10327:10348  spender != address(0) */\n      dup3\n      and\n        /* \"wLONG/ERC20.sol\":10319:10387  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_162\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5097:5099   */\n      0x20\n        /* \"wLONG/ERC20.sol\":10319:10387  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5079:5100   */\n      mstore\n        /* \"#utility.yul\":5136:5138   */\n      0x22\n        /* \"#utility.yul\":5116:5134   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5109:5139   */\n      mstore\n        /* \"#utility.yul\":5175:5209   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":5155:5173   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5148:5210   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":5226:5244   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5219:5251   */\n      mstore\n        /* \"#utility.yul\":5268:5287   */\n      0x84\n      add\n        /* \"wLONG/ERC20.sol\":10319:10387  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_116\n        /* \"#utility.yul\":4895:5293   */\n      jump\n        /* \"wLONG/ERC20.sol\":10319:10387  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_162:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"wLONG/ERC20.sol\":10398:10416  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"wLONG/ERC20.sol\":10398:10409  _allowances */\n      0x01\n        /* \"wLONG/ERC20.sol\":10398:10416  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"wLONG/ERC20.sol\":10398:10425  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"wLONG/ERC20.sol\":10398:10434  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"wLONG/ERC20.sol\":10449:10481  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":8866:8891   */\n      dup5\n      dup2\n      mstore\n        /* \"wLONG/ERC20.sol\":10449:10481  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":8839:8857   */\n      add\n        /* \"wLONG/ERC20.sol\":10449:10481  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"wLONG/ERC20.sol\":10118:10488  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"wLONG/ERC20.sol\":10765:11206  function _spendAllowance(... */\n    tag_96:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"wLONG/ERC20.sol\":4070:4088  _allowances[owner] */\n      dup4\n      dup2\n      and\n        /* \"wLONG/ERC20.sol\":10895:10919  uint256 currentAllowance */\n      0x00\n        /* \"wLONG/ERC20.sol\":4070:4088  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"wLONG/ERC20.sol\":4070:4081  _allowances */\n      0x01\n        /* \"wLONG/ERC20.sol\":4070:4088  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"wLONG/ERC20.sol\":4070:4097  _allowances[owner][spender] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      not(0x00)\n        /* \"wLONG/ERC20.sol\":10961:10998  currentAllowance != type(uint256).max */\n      dup2\n      eq\n        /* \"wLONG/ERC20.sol\":10957:11200  if (currentAllowance != type(uint256).max) {... */\n      tag_172\n      jumpi\n        /* \"wLONG/ERC20.sol\":11042:11048  amount */\n      dup2\n        /* \"wLONG/ERC20.sol\":11022:11038  currentAllowance */\n      dup2\n        /* \"wLONG/ERC20.sol\":11022:11048  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"wLONG/ERC20.sol\":11014:11082  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_169\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5500:5502   */\n      0x20\n        /* \"wLONG/ERC20.sol\":11014:11082  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5482:5503   */\n      mstore\n        /* \"#utility.yul\":5539:5541   */\n      0x1d\n        /* \"#utility.yul\":5519:5537   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5512:5542   */\n      mstore\n        /* \"#utility.yul\":5578:5609   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":5558:5576   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5551:5610   */\n      mstore\n        /* \"#utility.yul\":5627:5645   */\n      0x64\n      add\n        /* \"wLONG/ERC20.sol\":11014:11082  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_116\n        /* \"#utility.yul\":5298:5651   */\n      jump\n        /* \"wLONG/ERC20.sol\":11014:11082  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_169:\n        /* \"wLONG/ERC20.sol\":11124:11175  _approve(owner, spender, currentAllowance - amount) */\n      tag_172\n        /* \"wLONG/ERC20.sol\":11133:11138  owner */\n      dup5\n        /* \"wLONG/ERC20.sol\":11140:11147  spender */\n      dup5\n        /* \"wLONG/ERC20.sol\":11168:11174  amount */\n      dup5\n        /* \"wLONG/ERC20.sol\":11149:11165  currentAllowance */\n      dup5\n        /* \"wLONG/ERC20.sol\":11149:11174  currentAllowance - amount */\n      sub\n        /* \"wLONG/ERC20.sol\":11124:11132  _approve */\n      tag_91\n        /* \"wLONG/ERC20.sol\":11124:11175  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_172:\n        /* \"wLONG/ERC20.sol\":10885:11206  {... */\n      pop\n        /* \"wLONG/ERC20.sol\":10765:11206  function _spendAllowance(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"wLONG/ERC20.sol\":7467:8122  function _transfer(... */\n    tag_98:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"wLONG/ERC20.sol\":7593:7611  from != address(0) */\n      dup4\n      and\n        /* \"wLONG/ERC20.sol\":7585:7653  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_174\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6987:6989   */\n      0x20\n        /* \"wLONG/ERC20.sol\":7585:7653  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6969:6990   */\n      mstore\n        /* \"#utility.yul\":7026:7028   */\n      0x25\n        /* \"#utility.yul\":7006:7024   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6999:7029   */\n      mstore\n        /* \"#utility.yul\":7065:7099   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":7045:7063   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7038:7100   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":7116:7134   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7109:7144   */\n      mstore\n        /* \"#utility.yul\":7161:7180   */\n      0x84\n      add\n        /* \"wLONG/ERC20.sol\":7585:7653  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_116\n        /* \"#utility.yul\":6785:7186   */\n      jump\n        /* \"wLONG/ERC20.sol\":7585:7653  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_174:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"wLONG/ERC20.sol\":7671:7687  to != address(0) */\n      dup3\n      and\n        /* \"wLONG/ERC20.sol\":7663:7727  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_177\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4286:4288   */\n      0x20\n        /* \"wLONG/ERC20.sol\":7663:7727  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4268:4289   */\n      mstore\n        /* \"#utility.yul\":4325:4327   */\n      0x23\n        /* \"#utility.yul\":4305:4323   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4298:4328   */\n      mstore\n        /* \"#utility.yul\":4364:4398   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":4344:4362   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4337:4399   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":4415:4433   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4408:4441   */\n      mstore\n        /* \"#utility.yul\":4458:4477   */\n      0x84\n      add\n        /* \"wLONG/ERC20.sol\":7663:7727  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_116\n        /* \"#utility.yul\":4084:4483   */\n      jump\n        /* \"wLONG/ERC20.sol\":7663:7727  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_177:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"wLONG/ERC20.sol\":7811:7826  _balances[from] */\n      dup4\n      and\n        /* \"wLONG/ERC20.sol\":7789:7808  uint256 fromBalance */\n      0x00\n        /* \"wLONG/ERC20.sol\":7811:7826  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"wLONG/ERC20.sol\":7844:7865  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"wLONG/ERC20.sol\":7836:7908  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_180\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5858:5860   */\n      0x20\n        /* \"wLONG/ERC20.sol\":7836:7908  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5840:5861   */\n      mstore\n        /* \"#utility.yul\":5897:5899   */\n      0x26\n        /* \"#utility.yul\":5877:5895   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5870:5900   */\n      mstore\n        /* \"#utility.yul\":5936:5970   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":5916:5934   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5909:5971   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":5987:6005   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5980:6016   */\n      mstore\n        /* \"#utility.yul\":6033:6052   */\n      0x84\n      add\n        /* \"wLONG/ERC20.sol\":7836:7908  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_116\n        /* \"#utility.yul\":5656:6058   */\n      jump\n        /* \"wLONG/ERC20.sol\":7836:7908  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_180:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"wLONG/ERC20.sol\":7942:7957  _balances[from] */\n      dup1\n      dup6\n      and\n        /* \"wLONG/ERC20.sol\":7942:7951  _balances */\n      0x00\n        /* \"wLONG/ERC20.sol\":7942:7957  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"wLONG/ERC20.sol\":7960:7980  fromBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"wLONG/ERC20.sol\":7942:7980  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"wLONG/ERC20.sol\":8000:8013  _balances[to] */\n      swap2\n      dup6\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"wLONG/ERC20.sol\":8000:8023  _balances[to] += amount */\n      dup1\n      sload\n        /* \"wLONG/ERC20.sol\":7974:7980  amount */\n      dup5\n      swap3\n        /* \"wLONG/ERC20.sol\":7942:7951  _balances */\n      swap1\n        /* \"wLONG/ERC20.sol\":8000:8023  _balances[to] += amount */\n      tag_183\n      swap1\n        /* \"wLONG/ERC20.sol\":7974:7980  amount */\n      dup5\n      swap1\n        /* \"wLONG/ERC20.sol\":8000:8023  _balances[to] += amount */\n      tag_104\n      jump\t// in\n    tag_183:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"wLONG/ERC20.sol\":8054:8056  to */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"wLONG/ERC20.sol\":8039:8065  Transfer(from, to, amount) */\n      and\n        /* \"wLONG/ERC20.sol\":8048:8052  from */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"wLONG/ERC20.sol\":8039:8065  Transfer(from, to, amount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"wLONG/ERC20.sol\":8058:8064  amount */\n      dup5\n        /* \"wLONG/ERC20.sol\":8039:8065  Transfer(from, to, amount) */\n      mload(0x40)\n      tag_184\n      swap2\n        /* \"#utility.yul\":8866:8891   */\n      dup2\n      mstore\n        /* \"#utility.yul\":8854:8856   */\n      0x20\n        /* \"#utility.yul\":8839:8857   */\n      add\n      swap1\n        /* \"#utility.yul\":8720:8897   */\n      jump\n        /* \"wLONG/ERC20.sol\":8039:8065  Transfer(from, to, amount) */\n    tag_184:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"wLONG/ERC20.sol\":7575:8122  {... */\n      pop\n        /* \"wLONG/ERC20.sol\":7467:8122  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"wLONG/ERC20.sol\":8398:8791  function _mint(address account, uint256 amount) internal virtual {... */\n    tag_143:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"wLONG/ERC20.sol\":8481:8502  account != address(0) */\n      dup3\n      and\n        /* \"wLONG/ERC20.sol\":8473:8538  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_186\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8562:8564   */\n      0x20\n        /* \"wLONG/ERC20.sol\":8473:8538  require(account != address(0), \"ERC20: mint to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8544:8565   */\n      mstore\n        /* \"#utility.yul\":8601:8603   */\n      0x1f\n        /* \"#utility.yul\":8581:8599   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8574:8604   */\n      mstore\n        /* \"#utility.yul\":8640:8673   */\n      0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n        /* \"#utility.yul\":8620:8638   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8613:8674   */\n      mstore\n        /* \"#utility.yul\":8691:8709   */\n      0x64\n      add\n        /* \"wLONG/ERC20.sol\":8473:8538  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_116\n        /* \"#utility.yul\":8360:8715   */\n      jump\n        /* \"wLONG/ERC20.sol\":8473:8538  require(account != address(0), \"ERC20: mint to the zero address\") */\n    tag_186:\n        /* \"wLONG/ERC20.sol\":8627:8633  amount */\n      dup1\n        /* \"wLONG/ERC20.sol\":8611:8623  _totalSupply */\n      0x02\n      0x00\n        /* \"wLONG/ERC20.sol\":8611:8633  _totalSupply += amount */\n      dup3\n      dup3\n      sload\n      tag_189\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_189:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"wLONG/ERC20.sol\":8643:8661  _balances[account] */\n      dup3\n      and\n        /* \"wLONG/ERC20.sol\":8643:8652  _balances */\n      0x00\n        /* \"wLONG/ERC20.sol\":8643:8661  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"wLONG/ERC20.sol\":8643:8671  _balances[account] += amount */\n      dup1\n      sload\n        /* \"wLONG/ERC20.sol\":8665:8671  amount */\n      dup4\n      swap3\n        /* \"wLONG/ERC20.sol\":8643:8652  _balances */\n      swap1\n        /* \"wLONG/ERC20.sol\":8643:8671  _balances[account] += amount */\n      tag_190\n      swap1\n        /* \"wLONG/ERC20.sol\":8665:8671  amount */\n      dup5\n      swap1\n        /* \"wLONG/ERC20.sol\":8643:8671  _balances[account] += amount */\n      tag_104\n      jump\t// in\n    tag_190:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"wLONG/ERC20.sol\":8686:8723  Transfer(address(0), account, amount) */\n      mload(0x40)\n        /* \"#utility.yul\":8866:8891   */\n      dup2\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"wLONG/ERC20.sol\":8686:8723  Transfer(address(0), account, amount) */\n      dup4\n      and\n      swap1\n        /* \"wLONG/ERC20.sol\":8703:8704  0 */\n      0x00\n      swap1\n        /* \"wLONG/ERC20.sol\":8686:8723  Transfer(address(0), account, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"#utility.yul\":8854:8856   */\n      0x20\n        /* \"#utility.yul\":8839:8857   */\n      add\n        /* \"wLONG/ERC20.sol\":8686:8723  Transfer(address(0), account, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"wLONG/ERC20.sol\":8398:8791  function _mint(address account, uint256 amount) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"wLONG/Ownable.sol\":2269:2456  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_156:\n        /* \"wLONG/Ownable.sol\":2361:2367  _owner */\n      0x05\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"wLONG/Ownable.sol\":2377:2394  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"wLONG/Ownable.sol\":2409:2449  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"wLONG/Ownable.sol\":2361:2367  _owner */\n      swap2\n      and\n      swap2\n        /* \"wLONG/Ownable.sol\":2377:2394  _owner = newOwner */\n      swap1\n        /* \"wLONG/Ownable.sol\":2361:2367  _owner */\n      dup3\n      swap1\n        /* \"wLONG/Ownable.sol\":2409:2449  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"wLONG/Ownable.sol\":2342:2358  address oldOwner */\n      0x00\n      swap1\n        /* \"wLONG/Ownable.sol\":2409:2449  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"wLONG/Ownable.sol\":2332:2456  {... */\n      pop\n        /* \"wLONG/Ownable.sol\":2269:2456  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:187   */\n    tag_194:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_196\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_196:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:378   */\n    tag_49:\n        /* \"#utility.yul\":251:257   */\n      0x00\n        /* \"#utility.yul\":304:306   */\n      0x20\n        /* \"#utility.yul\":292:301   */\n      dup3\n        /* \"#utility.yul\":283:290   */\n      dup5\n        /* \"#utility.yul\":279:302   */\n      sub\n        /* \"#utility.yul\":275:307   */\n      slt\n        /* \"#utility.yul\":272:324   */\n      iszero\n      tag_198\n      jumpi\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":272:324   */\n    tag_198:\n        /* \"#utility.yul\":343:372   */\n      tag_199\n        /* \"#utility.yul\":362:371   */\n      dup3\n        /* \"#utility.yul\":343:372   */\n      tag_194\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":333:372   */\n      swap4\n        /* \"#utility.yul\":192:378   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":383:643   */\n    tag_74:\n        /* \"#utility.yul\":451:457   */\n      0x00\n        /* \"#utility.yul\":459:465   */\n      dup1\n        /* \"#utility.yul\":512:514   */\n      0x40\n        /* \"#utility.yul\":500:509   */\n      dup4\n        /* \"#utility.yul\":491:498   */\n      dup6\n        /* \"#utility.yul\":487:510   */\n      sub\n        /* \"#utility.yul\":483:515   */\n      slt\n        /* \"#utility.yul\":480:532   */\n      iszero\n      tag_201\n      jumpi\n        /* \"#utility.yul\":528:529   */\n      0x00\n        /* \"#utility.yul\":525:526   */\n      dup1\n        /* \"#utility.yul\":518:530   */\n      revert\n        /* \"#utility.yul\":480:532   */\n    tag_201:\n        /* \"#utility.yul\":551:580   */\n      tag_202\n        /* \"#utility.yul\":570:579   */\n      dup4\n        /* \"#utility.yul\":551:580   */\n      tag_194\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":541:580   */\n      swap2\n      pop\n        /* \"#utility.yul\":599:637   */\n      tag_203\n        /* \"#utility.yul\":633:635   */\n      0x20\n        /* \"#utility.yul\":622:631   */\n      dup5\n        /* \"#utility.yul\":618:636   */\n      add\n        /* \"#utility.yul\":599:637   */\n      tag_194\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":589:637   */\n      swap1\n      pop\n        /* \"#utility.yul\":383:643   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":648:976   */\n    tag_36:\n        /* \"#utility.yul\":725:731   */\n      0x00\n        /* \"#utility.yul\":733:739   */\n      dup1\n        /* \"#utility.yul\":741:747   */\n      0x00\n        /* \"#utility.yul\":794:796   */\n      0x60\n        /* \"#utility.yul\":782:791   */\n      dup5\n        /* \"#utility.yul\":773:780   */\n      dup7\n        /* \"#utility.yul\":769:792   */\n      sub\n        /* \"#utility.yul\":765:797   */\n      slt\n        /* \"#utility.yul\":762:814   */\n      iszero\n      tag_205\n      jumpi\n        /* \"#utility.yul\":810:811   */\n      0x00\n        /* \"#utility.yul\":807:808   */\n      dup1\n        /* \"#utility.yul\":800:812   */\n      revert\n        /* \"#utility.yul\":762:814   */\n    tag_205:\n        /* \"#utility.yul\":833:862   */\n      tag_206\n        /* \"#utility.yul\":852:861   */\n      dup5\n        /* \"#utility.yul\":833:862   */\n      tag_194\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":823:862   */\n      swap3\n      pop\n        /* \"#utility.yul\":881:919   */\n      tag_207\n        /* \"#utility.yul\":915:917   */\n      0x20\n        /* \"#utility.yul\":904:913   */\n      dup6\n        /* \"#utility.yul\":900:918   */\n      add\n        /* \"#utility.yul\":881:919   */\n      tag_194\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":871:919   */\n      swap2\n      pop\n        /* \"#utility.yul\":966:968   */\n      0x40\n        /* \"#utility.yul\":955:964   */\n      dup5\n        /* \"#utility.yul\":951:969   */\n      add\n        /* \"#utility.yul\":938:970   */\n      calldataload\n        /* \"#utility.yul\":928:970   */\n      swap1\n      pop\n        /* \"#utility.yul\":648:976   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":981:1235   */\n    tag_26:\n        /* \"#utility.yul\":1049:1055   */\n      0x00\n        /* \"#utility.yul\":1057:1063   */\n      dup1\n        /* \"#utility.yul\":1110:1112   */\n      0x40\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1089:1096   */\n      dup6\n        /* \"#utility.yul\":1085:1108   */\n      sub\n        /* \"#utility.yul\":1081:1113   */\n      slt\n        /* \"#utility.yul\":1078:1130   */\n      iszero\n      tag_209\n      jumpi\n        /* \"#utility.yul\":1126:1127   */\n      0x00\n        /* \"#utility.yul\":1123:1124   */\n      dup1\n        /* \"#utility.yul\":1116:1128   */\n      revert\n        /* \"#utility.yul\":1078:1130   */\n    tag_209:\n        /* \"#utility.yul\":1149:1178   */\n      tag_210\n        /* \"#utility.yul\":1168:1177   */\n      dup4\n        /* \"#utility.yul\":1149:1178   */\n      tag_194\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":1139:1178   */\n      swap5\n        /* \"#utility.yul\":1225:1227   */\n      0x20\n        /* \"#utility.yul\":1210:1228   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1197:1229   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":981:1235   */\n      jump\t// out\n        /* \"#utility.yul\":1240:2229   */\n    tag_69:\n        /* \"#utility.yul\":1317:1323   */\n      0x00\n        /* \"#utility.yul\":1325:1331   */\n      dup1\n        /* \"#utility.yul\":1378:1380   */\n      0x40\n        /* \"#utility.yul\":1366:1375   */\n      dup4\n        /* \"#utility.yul\":1357:1364   */\n      dup6\n        /* \"#utility.yul\":1353:1376   */\n      sub\n        /* \"#utility.yul\":1349:1381   */\n      slt\n        /* \"#utility.yul\":1346:1398   */\n      iszero\n      tag_212\n      jumpi\n        /* \"#utility.yul\":1394:1395   */\n      0x00\n        /* \"#utility.yul\":1391:1392   */\n      dup1\n        /* \"#utility.yul\":1384:1396   */\n      revert\n        /* \"#utility.yul\":1346:1398   */\n    tag_212:\n        /* \"#utility.yul\":1430:1439   */\n      dup3\n        /* \"#utility.yul\":1417:1440   */\n      calldataload\n        /* \"#utility.yul\":1407:1440   */\n      swap2\n      pop\n        /* \"#utility.yul\":1491:1493   */\n      0x20\n        /* \"#utility.yul\":1480:1489   */\n      dup4\n        /* \"#utility.yul\":1476:1494   */\n      add\n        /* \"#utility.yul\":1463:1495   */\n      calldataload\n        /* \"#utility.yul\":1514:1532   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1555:1557   */\n      dup1\n        /* \"#utility.yul\":1547:1553   */\n      dup3\n        /* \"#utility.yul\":1544:1558   */\n      gt\n        /* \"#utility.yul\":1541:1575   */\n      iszero\n      tag_213\n      jumpi\n        /* \"#utility.yul\":1571:1572   */\n      0x00\n        /* \"#utility.yul\":1568:1569   */\n      dup1\n        /* \"#utility.yul\":1561:1573   */\n      revert\n        /* \"#utility.yul\":1541:1575   */\n    tag_213:\n        /* \"#utility.yul\":1609:1615   */\n      dup2\n        /* \"#utility.yul\":1598:1607   */\n      dup6\n        /* \"#utility.yul\":1594:1616   */\n      add\n        /* \"#utility.yul\":1584:1616   */\n      swap2\n      pop\n        /* \"#utility.yul\":1654:1661   */\n      dup6\n        /* \"#utility.yul\":1647:1651   */\n      0x1f\n        /* \"#utility.yul\":1643:1645   */\n      dup4\n        /* \"#utility.yul\":1639:1652   */\n      add\n        /* \"#utility.yul\":1635:1662   */\n      slt\n        /* \"#utility.yul\":1625:1680   */\n      tag_214\n      jumpi\n        /* \"#utility.yul\":1676:1677   */\n      0x00\n        /* \"#utility.yul\":1673:1674   */\n      dup1\n        /* \"#utility.yul\":1666:1678   */\n      revert\n        /* \"#utility.yul\":1625:1680   */\n    tag_214:\n        /* \"#utility.yul\":1712:1714   */\n      dup2\n        /* \"#utility.yul\":1699:1715   */\n      calldataload\n        /* \"#utility.yul\":1734:1736   */\n      dup2\n        /* \"#utility.yul\":1730:1732   */\n      dup2\n        /* \"#utility.yul\":1727:1737   */\n      gt\n        /* \"#utility.yul\":1724:1760   */\n      iszero\n      tag_216\n      jumpi\n        /* \"#utility.yul\":1740:1758   */\n      tag_216\n      tag_217\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":1815:1817   */\n      0x40\n        /* \"#utility.yul\":1809:1818   */\n      mload\n        /* \"#utility.yul\":1783:1785   */\n      0x1f\n        /* \"#utility.yul\":1869:1882   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1865:1887   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":1889:1891   */\n      0x3f\n        /* \"#utility.yul\":1861:1892   */\n      add\n        /* \"#utility.yul\":1857:1897   */\n      and\n        /* \"#utility.yul\":1845:1898   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":1913:1931   */\n      dup4\n      dup3\n      gt\n        /* \"#utility.yul\":1933:1955   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":1910:1956   */\n      or\n        /* \"#utility.yul\":1907:1979   */\n      iszero\n      tag_219\n      jumpi\n        /* \"#utility.yul\":1959:1977   */\n      tag_219\n      tag_217\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":1999:2009   */\n      dup2\n        /* \"#utility.yul\":1995:1997   */\n      0x40\n        /* \"#utility.yul\":1988:2010   */\n      mstore\n        /* \"#utility.yul\":2034:2036   */\n      dup3\n        /* \"#utility.yul\":2026:2032   */\n      dup2\n        /* \"#utility.yul\":2019:2037   */\n      mstore\n        /* \"#utility.yul\":2074:2081   */\n      dup9\n        /* \"#utility.yul\":2069:2071   */\n      0x20\n        /* \"#utility.yul\":2064:2066   */\n      dup5\n        /* \"#utility.yul\":2060:2062   */\n      dup8\n        /* \"#utility.yul\":2056:2067   */\n      add\n        /* \"#utility.yul\":2052:2072   */\n      add\n        /* \"#utility.yul\":2049:2082   */\n      gt\n        /* \"#utility.yul\":2046:2099   */\n      iszero\n      tag_220\n      jumpi\n        /* \"#utility.yul\":2095:2096   */\n      0x00\n        /* \"#utility.yul\":2092:2093   */\n      dup1\n        /* \"#utility.yul\":2085:2097   */\n      revert\n        /* \"#utility.yul\":2046:2099   */\n    tag_220:\n        /* \"#utility.yul\":2151:2153   */\n      dup3\n        /* \"#utility.yul\":2146:2148   */\n      0x20\n        /* \"#utility.yul\":2142:2144   */\n      dup7\n        /* \"#utility.yul\":2138:2149   */\n      add\n        /* \"#utility.yul\":2133:2135   */\n      0x20\n        /* \"#utility.yul\":2125:2131   */\n      dup4\n        /* \"#utility.yul\":2121:2136   */\n      add\n        /* \"#utility.yul\":2108:2154   */\n      calldatacopy\n        /* \"#utility.yul\":2196:2197   */\n      0x00\n        /* \"#utility.yul\":2191:2193   */\n      0x20\n        /* \"#utility.yul\":2186:2188   */\n      dup5\n        /* \"#utility.yul\":2178:2184   */\n      dup4\n        /* \"#utility.yul\":2174:2189   */\n      add\n        /* \"#utility.yul\":2170:2194   */\n      add\n        /* \"#utility.yul\":2163:2198   */\n      mstore\n        /* \"#utility.yul\":2217:2223   */\n      dup1\n        /* \"#utility.yul\":2207:2223   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1240:2229   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3482:4079   */\n    tag_23:\n        /* \"#utility.yul\":3594:3598   */\n      0x00\n        /* \"#utility.yul\":3623:3625   */\n      0x20\n        /* \"#utility.yul\":3652:3654   */\n      dup1\n        /* \"#utility.yul\":3641:3650   */\n      dup4\n        /* \"#utility.yul\":3634:3655   */\n      mstore\n        /* \"#utility.yul\":3684:3690   */\n      dup4\n        /* \"#utility.yul\":3678:3691   */\n      mload\n        /* \"#utility.yul\":3727:3733   */\n      dup1\n        /* \"#utility.yul\":3722:3724   */\n      dup3\n        /* \"#utility.yul\":3711:3720   */\n      dup6\n        /* \"#utility.yul\":3707:3725   */\n      add\n        /* \"#utility.yul\":3700:3734   */\n      mstore\n        /* \"#utility.yul\":3752:3753   */\n      0x00\n        /* \"#utility.yul\":3762:3902   */\n    tag_226:\n        /* \"#utility.yul\":3776:3782   */\n      dup2\n        /* \"#utility.yul\":3773:3774   */\n      dup2\n        /* \"#utility.yul\":3770:3783   */\n      lt\n        /* \"#utility.yul\":3762:3902   */\n      iszero\n      tag_228\n      jumpi\n        /* \"#utility.yul\":3871:3885   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":3867:3890   */\n      dup4\n      add\n        /* \"#utility.yul\":3861:3891   */\n      mload\n        /* \"#utility.yul\":3837:3854   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":3856:3858   */\n      0x40\n        /* \"#utility.yul\":3833:3859   */\n      add\n        /* \"#utility.yul\":3826:3892   */\n      mstore\n        /* \"#utility.yul\":3791:3801   */\n      dup3\n      add\n        /* \"#utility.yul\":3762:3902   */\n      jump(tag_226)\n    tag_228:\n        /* \"#utility.yul\":3920:3926   */\n      dup2\n        /* \"#utility.yul\":3917:3918   */\n      dup2\n        /* \"#utility.yul\":3914:3927   */\n      gt\n        /* \"#utility.yul\":3911:4002   */\n      iszero\n      tag_229\n      jumpi\n        /* \"#utility.yul\":3990:3991   */\n      0x00\n        /* \"#utility.yul\":3985:3987   */\n      0x40\n        /* \"#utility.yul\":3976:3982   */\n      dup4\n        /* \"#utility.yul\":3965:3974   */\n      dup8\n        /* \"#utility.yul\":3961:3983   */\n      add\n        /* \"#utility.yul\":3957:3988   */\n      add\n        /* \"#utility.yul\":3950:3992   */\n      mstore\n        /* \"#utility.yul\":3911:4002   */\n    tag_229:\n      pop\n        /* \"#utility.yul\":4063:4065   */\n      0x1f\n        /* \"#utility.yul\":4042:4057   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":4038:4067   */\n      and\n        /* \"#utility.yul\":4023:4068   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":4070:4072   */\n      0x40\n        /* \"#utility.yul\":4019:4073   */\n      add\n      swap4\n        /* \"#utility.yul\":3482:4079   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9091:9316   */\n    tag_104:\n        /* \"#utility.yul\":9131:9134   */\n      0x00\n        /* \"#utility.yul\":9162:9163   */\n      dup3\n        /* \"#utility.yul\":9158:9164   */\n      not\n        /* \"#utility.yul\":9155:9156   */\n      dup3\n        /* \"#utility.yul\":9152:9165   */\n      gt\n        /* \"#utility.yul\":9149:9285   */\n      iszero\n      tag_245\n      jumpi\n        /* \"#utility.yul\":9207:9217   */\n      0x4e487b71\n        /* \"#utility.yul\":9202:9205   */\n      0xe0\n        /* \"#utility.yul\":9198:9218   */\n      shl\n        /* \"#utility.yul\":9195:9196   */\n      0x00\n        /* \"#utility.yul\":9188:9219   */\n      mstore\n        /* \"#utility.yul\":9242:9246   */\n      0x11\n        /* \"#utility.yul\":9239:9240   */\n      0x04\n        /* \"#utility.yul\":9232:9247   */\n      mstore\n        /* \"#utility.yul\":9270:9274   */\n      0x24\n        /* \"#utility.yul\":9267:9268   */\n      0x00\n        /* \"#utility.yul\":9260:9275   */\n      revert\n        /* \"#utility.yul\":9149:9285   */\n    tag_245:\n      pop\n        /* \"#utility.yul\":9301:9310   */\n      add\n      swap1\n        /* \"#utility.yul\":9091:9316   */\n      jump\t// out\n        /* \"#utility.yul\":9321:9701   */\n    tag_82:\n        /* \"#utility.yul\":9400:9401   */\n      0x01\n        /* \"#utility.yul\":9396:9408   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":9443:9455   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":9464:9525   */\n      tag_247\n      jumpi\n        /* \"#utility.yul\":9518:9522   */\n      0x7f\n        /* \"#utility.yul\":9510:9516   */\n      dup3\n        /* \"#utility.yul\":9506:9523   */\n      and\n        /* \"#utility.yul\":9496:9523   */\n      swap2\n      pop\n        /* \"#utility.yul\":9464:9525   */\n    tag_247:\n        /* \"#utility.yul\":9571:9573   */\n      0x20\n        /* \"#utility.yul\":9563:9569   */\n      dup3\n        /* \"#utility.yul\":9560:9574   */\n      lt\n        /* \"#utility.yul\":9540:9558   */\n      dup2\n        /* \"#utility.yul\":9537:9575   */\n      eq\n        /* \"#utility.yul\":9534:9695   */\n      iszero\n      tag_248\n      jumpi\n        /* \"#utility.yul\":9617:9627   */\n      0x4e487b71\n        /* \"#utility.yul\":9612:9615   */\n      0xe0\n        /* \"#utility.yul\":9608:9628   */\n      shl\n        /* \"#utility.yul\":9605:9606   */\n      0x00\n        /* \"#utility.yul\":9598:9629   */\n      mstore\n        /* \"#utility.yul\":9652:9656   */\n      0x22\n        /* \"#utility.yul\":9649:9650   */\n      0x04\n        /* \"#utility.yul\":9642:9657   */\n      mstore\n        /* \"#utility.yul\":9680:9684   */\n      0x24\n        /* \"#utility.yul\":9677:9678   */\n      0x00\n        /* \"#utility.yul\":9670:9685   */\n      revert\n        /* \"#utility.yul\":9534:9695   */\n    tag_248:\n      pop\n        /* \"#utility.yul\":9321:9701   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9706:9833   */\n    tag_217:\n        /* \"#utility.yul\":9767:9777   */\n      0x4e487b71\n        /* \"#utility.yul\":9762:9765   */\n      0xe0\n        /* \"#utility.yul\":9758:9778   */\n      shl\n        /* \"#utility.yul\":9755:9756   */\n      0x00\n        /* \"#utility.yul\":9748:9779   */\n      mstore\n        /* \"#utility.yul\":9798:9802   */\n      0x41\n        /* \"#utility.yul\":9795:9796   */\n      0x04\n        /* \"#utility.yul\":9788:9803   */\n      mstore\n        /* \"#utility.yul\":9822:9826   */\n      0x24\n        /* \"#utility.yul\":9819:9820   */\n      0x00\n        /* \"#utility.yul\":9812:9827   */\n      revert\n\n    auxdata: 0xa2646970667358221220909c05d01c5ac483746f3215ab089001e5aecf84ae97b29c21619bd54215377964736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_612": {
									"entryPoint": null,
									"id": 612,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_66": {
									"entryPoint": null,
									"id": 66,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_696": {
									"entryPoint": null,
									"id": 696,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_11": {
									"entryPoint": 156,
									"id": 11,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_678": {
									"entryPoint": 160,
									"id": 678,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 408,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:396:6",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "69:325:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "79:22:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "93:1:6",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "96:4:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "89:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "79:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "110:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "140:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "146:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "136:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "136:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "114:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "187:31:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "189:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "203:6:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "211:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "199:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "199:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "189:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "167:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:26:6"
															},
															"nodeType": "YulIf",
															"src": "157:61:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "277:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "298:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "305:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "310:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "301:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "301:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "291:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "291:31:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "291:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "342:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "345:4:6",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "335:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "335:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "335:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "370:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "373:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "363:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "363:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "363:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "233:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "264:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "253:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "253:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "230:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "230:38:6"
															},
															"nodeType": "YulIf",
															"src": "227:161:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "49:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "58:6:6",
														"type": ""
													}
												],
												"src": "14:380:6"
											}
										]
									},
									"contents": "{\n    { }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0xC DUP2 MSTORE PUSH12 0x77726170706564204C4F4E47 PUSH1 0xA0 SHL PUSH1 0x20 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE DUP4 MLOAD DUP1 DUP6 ADD SWAP1 SWAP5 MSTORE PUSH1 0x5 DUP5 MSTORE PUSH5 0x774C4F4E47 PUSH1 0xD8 SHL SWAP1 DUP5 ADD MSTORE DUP2 MLOAD SWAP2 SWAP3 SWAP2 PUSH3 0x63 SWAP2 PUSH1 0x3 SWAP2 PUSH3 0xF2 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x79 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0xF2 JUMP JUMPDEST POP POP POP PUSH3 0x96 PUSH3 0x90 PUSH3 0x9C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xA0 JUMP JUMPDEST PUSH3 0x1D5 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x100 SWAP1 PUSH3 0x198 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x124 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x16F JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x13F JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x16F JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x16F JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x16F JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x152 JUMP JUMPDEST POP PUSH3 0x17D SWAP3 SWAP2 POP PUSH3 0x181 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x17D JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x182 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x1AD JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x1CF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE52 DUP1 PUSH3 0x1E5 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0xDB7FD408 EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x235 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x142 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x177 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x130 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF7 PUSH2 0x24A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0xD50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x120 PUSH2 0x11B CALLDATASIZE PUSH1 0x4 PUSH2 0xC6B JUMP JUMPDEST PUSH2 0x2DC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x104 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x104 JUMP JUMPDEST PUSH2 0x120 PUSH2 0x150 CALLDATASIZE PUSH1 0x4 PUSH2 0xC2F JUMP JUMPDEST PUSH2 0x2F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x104 JUMP JUMPDEST PUSH2 0x120 PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0xC6B JUMP JUMPDEST PUSH2 0x318 JUMP JUMPDEST PUSH2 0x134 PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0xBDA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x104 JUMP JUMPDEST PUSH2 0xF7 PUSH2 0x357 JUMP JUMPDEST PUSH2 0x120 PUSH2 0x1D1 CALLDATASIZE PUSH1 0x4 PUSH2 0xC6B JUMP JUMPDEST PUSH2 0x366 JUMP JUMPDEST PUSH2 0x120 PUSH2 0x1E4 CALLDATASIZE PUSH1 0x4 PUSH2 0xC6B JUMP JUMPDEST PUSH2 0x3FD JUMP JUMPDEST PUSH2 0x120 PUSH2 0x1F7 CALLDATASIZE PUSH1 0x4 PUSH2 0xC95 JUMP JUMPDEST PUSH2 0x40B JUMP JUMPDEST PUSH2 0x134 PUSH2 0x20A CALLDATASIZE PUSH1 0x4 PUSH2 0xBFC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x248 PUSH2 0x243 CALLDATASIZE PUSH1 0x4 PUSH2 0xBDA JUMP JUMPDEST PUSH2 0x63D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x259 SWAP1 PUSH2 0xDCB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0xDCB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2D2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2A7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2D2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2B5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x2EA DUP2 DUP6 DUP6 PUSH2 0x708 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x302 DUP6 DUP3 DUP6 PUSH2 0x82C JUMP JUMPDEST PUSH2 0x30D DUP6 DUP6 DUP6 PUSH2 0x8BE JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x2EA SWAP1 DUP3 SWAP1 DUP7 SWAP1 PUSH2 0x352 SWAP1 DUP8 SWAP1 PUSH2 0xDA5 JUMP JUMPDEST PUSH2 0x708 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x259 SWAP1 PUSH2 0xDCB JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP4 DUP2 LT ISZERO PUSH2 0x3F0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x30D DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x708 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x2EA DUP2 DUP6 DUP6 PUSH2 0x8BE JUMP JUMPDEST PUSH1 0x20 DUP2 DUP2 ADD MLOAD PUSH1 0x40 DUP1 DUP5 ADD MLOAD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x6 SWAP1 SWAP5 MSTORE SWAP1 DUP4 KECCAK256 SLOAD CALLER SWAP3 SWAP2 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x479 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x774C4F4E473A206B65792068617320616C7265616479206265656E2075736564 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP6 SWAP1 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1901 PUSH1 0xF0 SHL PUSH1 0x34 DUP3 ADD MSTORE PUSH1 0x36 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x56 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0x0 DUP1 DUP6 MSTORE SWAP2 DUP5 ADD DUP1 DUP5 MSTORE DUP2 SWAP1 MSTORE PUSH1 0x1B SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP4 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP4 ADD DUP6 SWAP1 MSTORE SWAP1 SWAP3 POP SWAP1 PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x516 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 ADD MLOAD PUSH1 0x0 DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD DUP1 DUP6 MSTORE DUP8 SWAP1 MSTORE PUSH1 0x1C SWAP4 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 DUP3 ADD DUP9 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD DUP8 SWAP1 MSTORE SWAP4 POP SWAP1 SWAP2 POP PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x575 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH2 0x593 PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x5BF JUMPI POP PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP2 AND EQ JUMPDEST PUSH2 0x60B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x774C4F4E473A207369676E6174757265206973206E6F742076616C6964000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3E7 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x62E DUP7 DUP11 PUSH2 0xA8D JUMP JUMPDEST POP PUSH1 0x1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x697 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3E7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x6FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3E7 JUMP JUMPDEST PUSH2 0x705 DUP2 PUSH2 0xB6C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x76A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3E7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x7CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3E7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x8B8 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x8AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3E7 JUMP JUMPDEST PUSH2 0x8B8 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x708 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x922 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3E7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x984 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3E7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x9FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3E7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xA33 SWAP1 DUP5 SWAP1 PUSH2 0xDA5 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA7F SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xAE3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3E7 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xAF5 SWAP2 SWAP1 PUSH2 0xDA5 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xB22 SWAP1 DUP5 SWAP1 PUSH2 0xDA5 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xBD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBF5 DUP3 PUSH2 0xBBE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC18 DUP4 PUSH2 0xBBE JUMP JUMPDEST SWAP2 POP PUSH2 0xC26 PUSH1 0x20 DUP5 ADD PUSH2 0xBBE JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC4D DUP5 PUSH2 0xBBE JUMP JUMPDEST SWAP3 POP PUSH2 0xC5B PUSH1 0x20 DUP6 ADD PUSH2 0xBBE JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC87 DUP4 PUSH2 0xBBE JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xCC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xCDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xCED JUMPI PUSH2 0xCED PUSH2 0xE06 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xD15 JUMPI PUSH2 0xD15 PUSH2 0xE06 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xD2E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xD7D JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xD61 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xD8F JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xDC6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xDDF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xE00 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP1 SWAP13 SDIV 0xD0 SHR GAS 0xC4 DUP4 PUSH21 0x6F3215AB089001E5AECF84AE97B29C21619BD54215 CALLDATACOPY PUSH26 0x64736F6C63430008070033000000000000000000000000000000 ",
							"sourceMap": "448:4702:5:-:0;;;488:51;;;;;;;;;-1:-1:-1;1957:113:1;;;;;;;;;;;-1:-1:-1;;;1957:113:1;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1957:113:1;;;;2023:13;;1957:113;;;2023:13;;:5;;:13;:::i;:::-;-1:-1:-1;2046:17:1;;;;:7;;:17;;;;;:::i;:::-;;1957:113;;914:32:4;933:12;:10;;;:12;;:::i;:::-;914:18;:32::i;:::-;448:4702:5;;640:96:0;719:10;;640:96::o;2269:187:4:-;2361:6;;;-1:-1:-1;;;;;2377:17:4;;;-1:-1:-1;;;;;;2377:17:4;;;;;;;2409:40;;2361:6;;;2377:17;2361:6;;2409:40;;2342:16;;2409:40;2332:124;2269:187;:::o;448:4702:5:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;448:4702:5;;;-1:-1:-1;448:4702:5;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:380:6;93:1;89:12;;;;136;;;157:61;;211:4;203:6;199:17;189:27;;157:61;264:2;256:6;253:14;233:18;230:38;227:161;;;310:10;305:3;301:20;298:1;291:31;345:4;342:1;335:15;373:4;370:1;363:15;227:161;;14:380;;;:::o;:::-;448:4702:5;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_441": {
									"entryPoint": 1800,
									"id": 441,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_mint_396": {
									"entryPoint": 2701,
									"id": 396,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_11": {
									"entryPoint": null,
									"id": 11,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_484": {
									"entryPoint": 2092,
									"id": 484,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_678": {
									"entryPoint": 2924,
									"id": 678,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_358": {
									"entryPoint": 2238,
									"id": 358,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_163": {
									"entryPoint": null,
									"id": 163,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_188": {
									"entryPoint": 732,
									"id": 188,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_120": {
									"entryPoint": null,
									"id": 120,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_706": {
									"entryPoint": null,
									"id": 706,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_293": {
									"entryPoint": 870,
									"id": 293,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_251": {
									"entryPoint": 792,
									"id": 251,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mint_804": {
									"entryPoint": 1035,
									"id": 804,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_76": {
									"entryPoint": 586,
									"id": 76,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_621": {
									"entryPoint": null,
									"id": 621,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_86": {
									"entryPoint": 855,
									"id": 86,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_106": {
									"entryPoint": null,
									"id": 106,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_221": {
									"entryPoint": 756,
									"id": 221,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_658": {
									"entryPoint": 1597,
									"id": 658,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_145": {
									"entryPoint": 1021,
									"id": 145,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 3006,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3034,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3068,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3119,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3179,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_bytes_memory_ptr": {
									"entryPoint": 3221,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_packed_t_address_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_uint256__to_t_address_t_string_memory_ptr_t_uint256__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3408,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a70c7b78c5e633d9032a6be642d96644d9511aac8338a258463f8d905ebe0329__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d9cec86d36eedb89a2f10b3577aac77390acca9943319c01eab3cd4cea0acb56__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3493,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 3531,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 3590,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:9835:6",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:6"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:6",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:6"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:6"
															},
															"nodeType": "YulIf",
															"src": "111:70:6"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:6",
														"type": ""
													}
												],
												"src": "14:173:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "262:116:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "308:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "317:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "320:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "310:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "310:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "283:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "292:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "279:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "304:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:32:6"
															},
															"nodeType": "YulIf",
															"src": "272:52:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "333:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "343:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "343:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "333:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "228:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "239:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "251:6:6",
														"type": ""
													}
												],
												"src": "192:186:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "470:173:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "516:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "525:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "528:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "518:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "518:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "518:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "491:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "500:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "487:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "487:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "512:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "483:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "483:32:6"
															},
															"nodeType": "YulIf",
															"src": "480:52:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "541:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "570:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "551:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "551:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "541:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "589:48:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "622:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "633:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "618:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "618:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "599:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "599:38:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "589:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "428:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "439:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "451:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "459:6:6",
														"type": ""
													}
												],
												"src": "383:260:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "752:224:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "798:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "807:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "810:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "800:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "800:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "800:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "773:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "782:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "769:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "769:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "794:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "765:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "765:32:6"
															},
															"nodeType": "YulIf",
															"src": "762:52:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "823:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "852:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "833:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "833:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "871:48:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "904:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "915:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "900:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "900:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "881:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "881:38:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "871:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "928:42:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "955:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "966:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "951:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "951:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "938:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "938:32:6"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "928:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "702:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "713:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "725:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "733:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "741:6:6",
														"type": ""
													}
												],
												"src": "648:328:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1068:167:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1114:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1123:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1126:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1116:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1116:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1116:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1089:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1085:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1085:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1110:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1081:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1081:32:6"
															},
															"nodeType": "YulIf",
															"src": "1078:52:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1139:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1168:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1149:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1149:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1139:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1187:42:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1214:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1225:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1210:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1210:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1197:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1197:32:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1187:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1026:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1037:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1049:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1057:6:6",
														"type": ""
													}
												],
												"src": "981:254:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1336:893:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1382:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1391:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1394:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1384:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1384:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1384:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1357:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1366:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1353:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1353:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1378:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1349:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1349:32:6"
															},
															"nodeType": "YulIf",
															"src": "1346:52:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1407:33:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1430:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1417:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1417:23:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1407:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1449:46:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1480:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1491:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1476:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1476:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1463:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1463:32:6"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1453:6:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1504:28:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1514:18:6",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1508:2:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1559:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1568:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1571:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1561:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1561:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1561:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1547:6:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1555:2:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1544:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1544:14:6"
															},
															"nodeType": "YulIf",
															"src": "1541:34:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1584:32:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1598:9:6"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1609:6:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1594:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1594:22:6"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "1588:2:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1664:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1673:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1676:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1666:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1666:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1666:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "1643:2:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1647:4:6",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1639:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1639:13:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1654:7:6"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1635:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1635:27:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1628:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1628:35:6"
															},
															"nodeType": "YulIf",
															"src": "1625:55:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1689:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1712:2:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1699:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1699:16:6"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "1693:2:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1738:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1740:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1740:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1740:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1730:2:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1734:2:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1727:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1727:10:6"
															},
															"nodeType": "YulIf",
															"src": "1724:36:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1769:17:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1783:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "1779:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1779:7:6"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "1773:2:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1795:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1815:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1809:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1809:9:6"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "1799:6:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1827:71:6",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1849:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nodeType": "YulIdentifier",
																										"src": "1873:2:6"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1877:4:6",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "1869:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1869:13:6"
																							},
																							{
																								"name": "_4",
																								"nodeType": "YulIdentifier",
																								"src": "1884:2:6"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "1865:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1865:22:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1889:2:6",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1861:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1861:31:6"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "1894:2:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1857:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1857:40:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1845:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1845:53:6"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "1831:10:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1957:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1959:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1959:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1959:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1916:10:6"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1928:2:6"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1913:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1913:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1936:10:6"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1948:6:6"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1933:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1933:22:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1910:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1910:46:6"
															},
															"nodeType": "YulIf",
															"src": "1907:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1995:2:6",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1999:10:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1988:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1988:22:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1988:22:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2026:6:6"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "2034:2:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2019:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2019:18:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2019:18:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2083:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2092:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2095:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2085:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2085:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2085:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "2060:2:6"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "2064:2:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2056:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2056:11:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2069:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2052:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2052:20:6"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2074:7:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2049:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2049:33:6"
															},
															"nodeType": "YulIf",
															"src": "2046:53:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2125:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2133:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2121:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2121:15:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "2142:2:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2146:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2138:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2138:11:6"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "2151:2:6"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "2108:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2108:46:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2108:46:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "2178:6:6"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "2186:2:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2174:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2174:15:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2191:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2170:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2170:24:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2196:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2163:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2163:35:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2163:35:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2207:16:6",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "2217:6:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2207:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1294:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1305:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1317:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1325:6:6",
														"type": ""
													}
												],
												"src": "1240:989:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2482:192:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2499:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2512:2:6",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "2516:6:6"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "2508:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2508:15:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2529:26:6",
																						"type": "",
																						"value": "0xffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2525:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2525:31:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2504:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2504:53:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2492:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2492:66:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2492:66:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2578:3:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2583:2:6",
																				"type": "",
																				"value": "20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2574:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2574:12:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2592:3:6",
																				"type": "",
																				"value": "240"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2597:4:6",
																				"type": "",
																				"value": "6401"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2588:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2588:14:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2567:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2567:36:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2567:36:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2623:3:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2628:2:6",
																				"type": "",
																				"value": "22"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2619:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2619:12:6"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2633:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2612:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2612:28:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2612:28:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2649:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2660:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2665:2:6",
																		"type": "",
																		"value": "54"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2656:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2656:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2649:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_address_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_uint256__to_t_address_t_string_memory_ptr_t_uint256__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2450:3:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2455:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2463:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2474:3:6",
														"type": ""
													}
												],
												"src": "2234:440:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2780:102:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2790:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2802:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2813:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2798:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2798:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2790:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2832:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2847:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2863:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2868:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2859:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2859:11:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2872:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2855:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2855:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2843:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2843:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2825:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2825:51:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2825:51:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2749:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2760:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2771:4:6",
														"type": ""
													}
												],
												"src": "2679:203:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2982:92:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2992:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3004:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3015:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3000:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3000:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2992:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3034:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "3059:6:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3052:6:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3052:14:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3045:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3045:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3027:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3027:41:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3027:41:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2951:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2962:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2973:4:6",
														"type": ""
													}
												],
												"src": "2887:187:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3260:217:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3270:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3282:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3293:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3278:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3278:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3270:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3313:9:6"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3324:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3306:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3306:25:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3306:25:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3351:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3362:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3347:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3347:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "3371:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3379:4:6",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3367:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3367:17:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3340:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3340:45:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3340:45:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3405:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3416:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3401:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3401:18:6"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "3421:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3394:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3394:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3394:34:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3448:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3459:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3444:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3444:18:6"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "3464:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3437:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3437:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3437:34:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3205:9:6",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3216:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3224:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3232:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3240:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3251:4:6",
														"type": ""
													}
												],
												"src": "3079:398:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3603:476:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3613:12:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3623:2:6",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3617:2:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3641:9:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3652:2:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3634:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3634:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3634:21:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3664:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3684:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3678:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3678:13:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3668:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3711:9:6"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3722:2:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3707:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3707:18:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3727:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3700:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3700:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3700:34:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3743:10:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3752:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "3747:1:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3812:90:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "3841:9:6"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "3852:1:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3837:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3837:17:6"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3856:2:6",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3833:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3833:26:6"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "3875:6:6"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "3883:1:6"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "3871:3:6"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "3871:14:6"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "3887:2:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3867:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3867:23:6"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "3861:5:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3861:30:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3826:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3826:66:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3826:66:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3773:1:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3776:6:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3770:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3770:13:6"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3784:19:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3786:15:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "3795:1:6"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "3798:2:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3791:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3791:10:6"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "3786:1:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3766:3:6",
																"statements": []
															},
															"src": "3762:140:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3936:66:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "3965:9:6"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "3976:6:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3961:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3961:22:6"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3985:2:6",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3957:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3957:31:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3990:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3950:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3950:42:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3950:42:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3917:1:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3920:6:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3914:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3914:13:6"
															},
															"nodeType": "YulIf",
															"src": "3911:91:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4011:62:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4027:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "4046:6:6"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4054:2:6",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "4042:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4042:15:6"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4063:2:6",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "4059:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4059:7:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "4038:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4038:29:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4023:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4023:45:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4070:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4019:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4019:54:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4011:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3572:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3583:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3594:4:6",
														"type": ""
													}
												],
												"src": "3482:597:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4258:225:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4275:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4286:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4268:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4268:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4268:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4309:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4320:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4305:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4305:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4325:2:6",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4298:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4298:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4298:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4348:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4359:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4344:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4344:18:6"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4364:34:6",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4337:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4337:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4337:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4419:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4430:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4415:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4415:18:6"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4435:5:6",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4408:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4408:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4408:33:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4450:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4462:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4473:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4458:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4458:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4450:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4235:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4249:4:6",
														"type": ""
													}
												],
												"src": "4084:399:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4662:228:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4679:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4690:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4672:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4672:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4672:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4713:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4724:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4709:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4709:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4729:2:6",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4702:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4702:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4702:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4752:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4763:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4748:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4748:18:6"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4768:34:6",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4741:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4741:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4741:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4823:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4834:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4819:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4819:18:6"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4839:8:6",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4812:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4812:36:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4812:36:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4857:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4869:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4880:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4865:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4865:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4857:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4639:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4653:4:6",
														"type": ""
													}
												],
												"src": "4488:402:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5069:224:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5086:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5097:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5079:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5079:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5079:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5120:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5131:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5116:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5116:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5136:2:6",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5109:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5109:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5109:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5159:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5170:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5155:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5155:18:6"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5175:34:6",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5148:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5148:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5148:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5230:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5241:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5226:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5226:18:6"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5246:4:6",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5219:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5219:32:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5219:32:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5260:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5272:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5283:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5268:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5268:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5260:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5046:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5060:4:6",
														"type": ""
													}
												],
												"src": "4895:398:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5472:179:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5489:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5500:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5482:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5482:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5482:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5523:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5534:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5519:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5519:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5539:2:6",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5512:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5512:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5512:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5562:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5573:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5558:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5558:18:6"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5578:31:6",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5551:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5551:59:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5551:59:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5619:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5631:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5642:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5627:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5627:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5619:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5449:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5463:4:6",
														"type": ""
													}
												],
												"src": "5298:353:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5830:228:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5847:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5858:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5840:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5840:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5840:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5881:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5892:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5877:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5877:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5897:2:6",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5870:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5870:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5870:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5920:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5931:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5916:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5916:18:6"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5936:34:6",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5909:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5909:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5909:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5991:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6002:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5987:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5987:18:6"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6007:8:6",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5980:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5980:36:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5980:36:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6025:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6037:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6048:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6033:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6033:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6025:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5807:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5821:4:6",
														"type": ""
													}
												],
												"src": "5656:402:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6237:182:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6254:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6265:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6247:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6247:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6247:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6288:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6299:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6284:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6284:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6304:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6277:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6277:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6277:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6327:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6338:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6323:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6323:18:6"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6343:34:6",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6316:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6316:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6316:62:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6387:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6399:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6410:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6395:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6395:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6387:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6214:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6228:4:6",
														"type": ""
													}
												],
												"src": "6063:356:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6598:182:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6615:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6626:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6608:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6608:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6608:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6649:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6660:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6645:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6645:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6665:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6638:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6638:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6638:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6688:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6699:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6684:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6684:18:6"
																	},
																	{
																		"hexValue": "774c4f4e473a206b65792068617320616c7265616479206265656e2075736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6704:34:6",
																		"type": "",
																		"value": "wLONG: key has already been used"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6677:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6677:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6677:62:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6748:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6760:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6771:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6756:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6756:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6748:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a70c7b78c5e633d9032a6be642d96644d9511aac8338a258463f8d905ebe0329__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6575:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6589:4:6",
														"type": ""
													}
												],
												"src": "6424:356:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6959:227:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6976:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6987:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6969:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6969:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6969:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7010:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7021:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7006:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7006:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7026:2:6",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6999:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6999:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6999:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7049:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7060:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7045:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7045:18:6"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7065:34:6",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7038:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7038:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7038:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7120:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7131:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7116:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7116:18:6"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7136:7:6",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7109:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7109:35:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7109:35:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7153:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7165:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7176:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7161:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7161:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7153:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6936:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6950:4:6",
														"type": ""
													}
												],
												"src": "6785:401:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7365:226:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7382:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7393:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7375:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7375:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7375:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7416:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7427:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7412:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7412:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7432:2:6",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7405:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7405:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7405:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7455:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7466:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7451:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7451:18:6"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7471:34:6",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7444:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7444:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7444:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7526:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7537:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7522:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7522:18:6"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7542:6:6",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7515:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7515:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7515:34:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7558:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7570:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7581:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7566:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7566:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7558:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7342:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7356:4:6",
														"type": ""
													}
												],
												"src": "7191:400:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7770:179:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7787:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7798:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7780:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7780:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7780:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7821:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7832:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7817:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7817:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7837:2:6",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7810:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7810:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7810:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7860:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7871:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7856:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7856:18:6"
																	},
																	{
																		"hexValue": "774c4f4e473a207369676e6174757265206973206e6f742076616c6964",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7876:31:6",
																		"type": "",
																		"value": "wLONG: signature is not valid"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7849:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7849:59:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7849:59:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7917:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7929:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7940:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7925:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7925:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7917:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d9cec86d36eedb89a2f10b3577aac77390acca9943319c01eab3cd4cea0acb56__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7747:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7761:4:6",
														"type": ""
													}
												],
												"src": "7596:353:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8128:227:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8145:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8156:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8138:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8138:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8138:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8179:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8190:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8175:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8175:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8195:2:6",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8168:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8168:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8168:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8218:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8229:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8214:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8214:18:6"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8234:34:6",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8207:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8207:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8207:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8289:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8300:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8285:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8285:18:6"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8305:7:6",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8278:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8278:35:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8278:35:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8322:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8334:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8345:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8330:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8330:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8322:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8105:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8119:4:6",
														"type": ""
													}
												],
												"src": "7954:401:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8534:181:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8551:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8562:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8544:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8544:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8544:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8585:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8596:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8581:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8581:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8601:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8574:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8574:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8574:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8624:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8635:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8620:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8620:18:6"
																	},
																	{
																		"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8640:33:6",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8613:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8613:61:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8613:61:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8683:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8695:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8706:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8691:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8691:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8683:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8511:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8525:4:6",
														"type": ""
													}
												],
												"src": "8360:355:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8821:76:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8831:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8843:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8854:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8839:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8839:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8831:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8873:9:6"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8884:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8866:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8866:25:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8866:25:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8790:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8801:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8812:4:6",
														"type": ""
													}
												],
												"src": "8720:177:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8999:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9009:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9021:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9032:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9017:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9017:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9009:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9051:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "9066:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9074:4:6",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9062:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9062:17:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9044:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9044:36:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9044:36:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8968:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8979:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8990:4:6",
														"type": ""
													}
												],
												"src": "8902:184:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9139:177:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9174:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9195:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9202:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9207:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "9198:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9198:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "9188:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9188:31:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9188:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9239:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9242:4:6",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "9232:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9232:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9232:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9267:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9270:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9260:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9260:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9260:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9155:1:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "9162:1:6"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "9158:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9158:6:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9152:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9152:13:6"
															},
															"nodeType": "YulIf",
															"src": "9149:136:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9294:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9305:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9308:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9301:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9301:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "9294:3:6"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9122:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9125:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "9131:3:6",
														"type": ""
													}
												],
												"src": "9091:225:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9376:325:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9386:22:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9400:1:6",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "9403:4:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "9396:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9396:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "9386:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9417:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "9447:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9453:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "9443:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9443:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "9421:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9494:31:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "9496:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "9510:6:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9518:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "9506:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9506:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "9496:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "9474:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9467:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9467:26:6"
															},
															"nodeType": "YulIf",
															"src": "9464:61:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9584:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9605:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9612:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9617:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "9608:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9608:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "9598:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9598:31:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9598:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9649:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9652:4:6",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "9642:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9642:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9642:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9677:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9680:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9670:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9670:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9670:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "9540:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "9563:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9571:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "9560:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9560:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "9537:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9537:38:6"
															},
															"nodeType": "YulIf",
															"src": "9534:161:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "9356:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9365:6:6",
														"type": ""
													}
												],
												"src": "9321:380:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9738:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9755:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9762:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9767:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "9758:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9758:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9748:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9748:31:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9748:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9795:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9798:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9788:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9788:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9788:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9819:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9822:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9812:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9812:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9812:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "9706:127:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value1 := memPtr\n    }\n    function abi_encode_tuple_packed_t_address_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_uint256__to_t_address_t_string_memory_ptr_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, and(shl(96, value0), not(0xffffffffffffffffffffffff)))\n        mstore(add(pos, 20), shl(240, 6401))\n        mstore(add(pos, 22), value1)\n        end := add(pos, 54)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a70c7b78c5e633d9032a6be642d96644d9511aac8338a258463f8d905ebe0329__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"wLONG: key has already been used\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_d9cec86d36eedb89a2f10b3577aac77390acca9943319c01eab3cd4cea0acb56__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"wLONG: signature is not valid\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100ea5760003560e01c80638da5cb5b1161008c578063a9059cbb11610066578063a9059cbb146101d6578063db7fd408146101e9578063dd62ed3e146101fc578063f2fde38b1461023557600080fd5b80638da5cb5b146101a057806395d89b41146101bb578063a457c2d7146101c357600080fd5b806323b872dd116100c857806323b872dd14610142578063313ce56714610155578063395093511461016457806370a082311461017757600080fd5b806306fdde03146100ef578063095ea7b31461010d57806318160ddd14610130575b600080fd5b6100f761024a565b6040516101049190610d50565b60405180910390f35b61012061011b366004610c6b565b6102dc565b6040519015158152602001610104565b6002545b604051908152602001610104565b610120610150366004610c2f565b6102f4565b60405160008152602001610104565b610120610172366004610c6b565b610318565b610134610185366004610bda565b6001600160a01b031660009081526020819052604090205490565b6005546040516001600160a01b039091168152602001610104565b6100f7610357565b6101206101d1366004610c6b565b610366565b6101206101e4366004610c6b565b6103fd565b6101206101f7366004610c95565b61040b565b61013461020a366004610bfc565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610248610243366004610bda565b61063d565b005b60606003805461025990610dcb565b80601f016020809104026020016040519081016040528092919081815260200182805461028590610dcb565b80156102d25780601f106102a7576101008083540402835291602001916102d2565b820191906000526020600020905b8154815290600101906020018083116102b557829003601f168201915b5050505050905090565b6000336102ea818585610708565b5060019392505050565b60003361030285828561082c565b61030d8585856108be565b506001949350505050565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091906102ea9082908690610352908790610da5565b610708565b60606004805461025990610dcb565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190838110156103f05760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61030d8286868403610708565b6000336102ea8185856108be565b60208181015160408084015160008381526006909452908320543392919060ff16156104795760405162461bcd60e51b815260206004820181905260248201527f774c4f4e473a206b65792068617320616c7265616479206265656e207573656460448201526064016103e7565b6040516bffffffffffffffffffffffff19606085901b16602082015261190160f01b60348201526036810187905260009060560160408051601f1981840301815282825280516020918201206000808552918401808452819052601b9284019290925260608301869052608083018590529092509060019060a0016020604051602081039080840390855afa158015610516573d6000803e3d6000fd5b505060408051601f19810151600080835260208301808552879052601c938301939093526060820188905260808201879052935090915060019060a0016020604051602081039080840390855afa158015610575573d6000803e3d6000fd5b5050506020604051035190506105936005546001600160a01b031690565b6001600160a01b0316826001600160a01b031614806105bf57506005546001600160a01b038281169116145b61060b5760405162461bcd60e51b815260206004820152601d60248201527f774c4f4e473a207369676e6174757265206973206e6f742076616c696400000060448201526064016103e7565b6000858152600660205260409020805460ff1916600117905561062e868a610a8d565b50600198975050505050505050565b6005546001600160a01b031633146106975760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103e7565b6001600160a01b0381166106fc5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103e7565b61070581610b6c565b50565b6001600160a01b03831661076a5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103e7565b6001600160a01b0382166107cb5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103e7565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383811660009081526001602090815260408083209386168352929052205460001981146108b857818110156108ab5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103e7565b6108b88484848403610708565b50505050565b6001600160a01b0383166109225760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103e7565b6001600160a01b0382166109845760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103e7565b6001600160a01b038316600090815260208190526040902054818110156109fc5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103e7565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610a33908490610da5565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a7f91815260200190565b60405180910390a350505050565b6001600160a01b038216610ae35760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103e7565b8060026000828254610af59190610da5565b90915550506001600160a01b03821660009081526020819052604081208054839290610b22908490610da5565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80356001600160a01b0381168114610bd557600080fd5b919050565b600060208284031215610bec57600080fd5b610bf582610bbe565b9392505050565b60008060408385031215610c0f57600080fd5b610c1883610bbe565b9150610c2660208401610bbe565b90509250929050565b600080600060608486031215610c4457600080fd5b610c4d84610bbe565b9250610c5b60208501610bbe565b9150604084013590509250925092565b60008060408385031215610c7e57600080fd5b610c8783610bbe565b946020939093013593505050565b60008060408385031215610ca857600080fd5b82359150602083013567ffffffffffffffff80821115610cc757600080fd5b818501915085601f830112610cdb57600080fd5b813581811115610ced57610ced610e06565b604051601f8201601f19908116603f01168101908382118183101715610d1557610d15610e06565b81604052828152886020848701011115610d2e57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b600060208083528351808285015260005b81811015610d7d57858101830151858201604001528201610d61565b81811115610d8f576000604083870101525b50601f01601f1916929092016040019392505050565b60008219821115610dc657634e487b7160e01b600052601160045260246000fd5b500190565b600181811c90821680610ddf57607f821691505b60208210811415610e0057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220909c05d01c5ac483746f3215ab089001e5aecf84ae97b29c21619bd54215377964736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0xDB7FD408 EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x235 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x142 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x177 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x130 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF7 PUSH2 0x24A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0xD50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x120 PUSH2 0x11B CALLDATASIZE PUSH1 0x4 PUSH2 0xC6B JUMP JUMPDEST PUSH2 0x2DC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x104 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x104 JUMP JUMPDEST PUSH2 0x120 PUSH2 0x150 CALLDATASIZE PUSH1 0x4 PUSH2 0xC2F JUMP JUMPDEST PUSH2 0x2F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x104 JUMP JUMPDEST PUSH2 0x120 PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0xC6B JUMP JUMPDEST PUSH2 0x318 JUMP JUMPDEST PUSH2 0x134 PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0xBDA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x104 JUMP JUMPDEST PUSH2 0xF7 PUSH2 0x357 JUMP JUMPDEST PUSH2 0x120 PUSH2 0x1D1 CALLDATASIZE PUSH1 0x4 PUSH2 0xC6B JUMP JUMPDEST PUSH2 0x366 JUMP JUMPDEST PUSH2 0x120 PUSH2 0x1E4 CALLDATASIZE PUSH1 0x4 PUSH2 0xC6B JUMP JUMPDEST PUSH2 0x3FD JUMP JUMPDEST PUSH2 0x120 PUSH2 0x1F7 CALLDATASIZE PUSH1 0x4 PUSH2 0xC95 JUMP JUMPDEST PUSH2 0x40B JUMP JUMPDEST PUSH2 0x134 PUSH2 0x20A CALLDATASIZE PUSH1 0x4 PUSH2 0xBFC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x248 PUSH2 0x243 CALLDATASIZE PUSH1 0x4 PUSH2 0xBDA JUMP JUMPDEST PUSH2 0x63D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x259 SWAP1 PUSH2 0xDCB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0xDCB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2D2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2A7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2D2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2B5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x2EA DUP2 DUP6 DUP6 PUSH2 0x708 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x302 DUP6 DUP3 DUP6 PUSH2 0x82C JUMP JUMPDEST PUSH2 0x30D DUP6 DUP6 DUP6 PUSH2 0x8BE JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x2EA SWAP1 DUP3 SWAP1 DUP7 SWAP1 PUSH2 0x352 SWAP1 DUP8 SWAP1 PUSH2 0xDA5 JUMP JUMPDEST PUSH2 0x708 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x259 SWAP1 PUSH2 0xDCB JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP4 DUP2 LT ISZERO PUSH2 0x3F0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x30D DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x708 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x2EA DUP2 DUP6 DUP6 PUSH2 0x8BE JUMP JUMPDEST PUSH1 0x20 DUP2 DUP2 ADD MLOAD PUSH1 0x40 DUP1 DUP5 ADD MLOAD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x6 SWAP1 SWAP5 MSTORE SWAP1 DUP4 KECCAK256 SLOAD CALLER SWAP3 SWAP2 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x479 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x774C4F4E473A206B65792068617320616C7265616479206265656E2075736564 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP6 SWAP1 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1901 PUSH1 0xF0 SHL PUSH1 0x34 DUP3 ADD MSTORE PUSH1 0x36 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x56 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0x0 DUP1 DUP6 MSTORE SWAP2 DUP5 ADD DUP1 DUP5 MSTORE DUP2 SWAP1 MSTORE PUSH1 0x1B SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP4 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP4 ADD DUP6 SWAP1 MSTORE SWAP1 SWAP3 POP SWAP1 PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x516 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 ADD MLOAD PUSH1 0x0 DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD DUP1 DUP6 MSTORE DUP8 SWAP1 MSTORE PUSH1 0x1C SWAP4 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 DUP3 ADD DUP9 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD DUP8 SWAP1 MSTORE SWAP4 POP SWAP1 SWAP2 POP PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x575 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH2 0x593 PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x5BF JUMPI POP PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP2 AND EQ JUMPDEST PUSH2 0x60B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x774C4F4E473A207369676E6174757265206973206E6F742076616C6964000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3E7 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x62E DUP7 DUP11 PUSH2 0xA8D JUMP JUMPDEST POP PUSH1 0x1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x697 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3E7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x6FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3E7 JUMP JUMPDEST PUSH2 0x705 DUP2 PUSH2 0xB6C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x76A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3E7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x7CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3E7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x8B8 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x8AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3E7 JUMP JUMPDEST PUSH2 0x8B8 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x708 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x922 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3E7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x984 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3E7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x9FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3E7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xA33 SWAP1 DUP5 SWAP1 PUSH2 0xDA5 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA7F SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xAE3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3E7 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xAF5 SWAP2 SWAP1 PUSH2 0xDA5 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xB22 SWAP1 DUP5 SWAP1 PUSH2 0xDA5 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xBD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBF5 DUP3 PUSH2 0xBBE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC18 DUP4 PUSH2 0xBBE JUMP JUMPDEST SWAP2 POP PUSH2 0xC26 PUSH1 0x20 DUP5 ADD PUSH2 0xBBE JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC4D DUP5 PUSH2 0xBBE JUMP JUMPDEST SWAP3 POP PUSH2 0xC5B PUSH1 0x20 DUP6 ADD PUSH2 0xBBE JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC87 DUP4 PUSH2 0xBBE JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xCC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xCDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xCED JUMPI PUSH2 0xCED PUSH2 0xE06 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xD15 JUMPI PUSH2 0xD15 PUSH2 0xE06 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xD2E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xD7D JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xD61 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xD8F JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xDC6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xDDF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xE00 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP1 SWAP13 SDIV 0xD0 SHR GAS 0xC4 DUP4 PUSH21 0x6F3215AB089001E5AECF84AE97B29C21619BD54215 CALLDATACOPY PUSH26 0x64736F6C63430008070033000000000000000000000000000000 ",
							"sourceMap": "448:4702:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2135:98:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4412:197;;;;;;:::i;:::-;;:::i;:::-;;;3052:14:6;;3045:22;3027:41;;3015:2;3000:18;4412:197:1;2887:187:6;3223:106:1;3310:12;;3223:106;;;8866:25:6;;;8854:2;8839:18;3223:106:1;8720:177:6;5171:286:1;;;;;;:::i;:::-;;:::i;835:90:5:-;;;893:5;9044:36:6;;9032:2;9017:18;835:90:5;8902:184:6;5852:236:1;;;;;;:::i;:::-;;:::i;3387:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3487:18:1;3461:7;3487:18;;;;;;;;;;;;3387:125;1029:85:4;1101:6;;1029:85;;-1:-1:-1;;;;;1101:6:4;;;2825:51:6;;2813:2;2798:18;1029:85:4;2679:203:6;2346:102:1;;;:::i;6575:429::-;;;;;;:::i;:::-;;:::i;3708:189::-;;;;;;:::i;:::-;;:::i;3129:2019:5:-;;;;;;:::i;:::-;;:::i;3955:149:1:-;;;;;;:::i;:::-;-1:-1:-1;;;;;4070:18:1;;;4044:7;4070:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3955:149;1917:198:4;;;;;;:::i;:::-;;:::i;:::-;;2135:98:1;2189:13;2221:5;2214:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2135:98;:::o;4412:197::-;4495:4;719:10:0;4549:32:1;719:10:0;4565:7:1;4574:6;4549:8;:32::i;:::-;-1:-1:-1;4598:4:1;;4412:197;-1:-1:-1;;;4412:197:1:o;5171:286::-;5298:4;719:10:0;5354:38:1;5370:4;719:10:0;5385:6:1;5354:15;:38::i;:::-;5402:27;5412:4;5418:2;5422:6;5402:9;:27::i;:::-;-1:-1:-1;5446:4:1;;5171:286;-1:-1:-1;;;;5171:286:1:o;5852:236::-;719:10:0;5940:4:1;6019:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;6019:27:1;;;;;;;;;;5940:4;;719:10:0;5994:66:1;;719:10:0;;6019:27:1;;:40;;6049:10;;6019:40;:::i;:::-;5994:8;:66::i;2346:102::-;2402:13;2434:7;2427:14;;;;;:::i;6575:429::-;719:10:0;6668:4:1;6749:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;6749:27:1;;;;;;;;;;6668:4;;719:10:0;6794:35:1;;;;6786:85;;;;-1:-1:-1;;;6786:85:1;;8156:2:6;6786:85:1;;;8138:21:6;8195:2;8175:18;;;8168:30;8234:34;8214:18;;;8207:62;-1:-1:-1;;;8285:18:6;;;8278:35;8330:19;;6786:85:1;;;;;;;;;6905:60;6914:5;6921:7;6949:15;6930:16;:34;6905:8;:60::i;3708:189::-;3787:4;719:10:0;3841:28:1;719:10:0;3858:2:1;3862:6;3841:9;:28::i;3129:2019:5:-;3422:4;3407:20;;;3401:27;3467:4;3452:20;;;3446:27;3209:4;3501:8;;;:5;:8;;;;;;;719:10:0;;3401:27:5;3446;3501:8;;3500:9;3492:54;;;;-1:-1:-1;;;3492:54:5;;6626:2:6;3492:54:5;;;6608:21:6;;;6645:18;;;6638:30;6704:34;6684:18;;;6677:62;6756:18;;3492:54:5;6424:356:6;3492:54:5;3579:42;;-1:-1:-1;;2512:2:6;2508:15;;;2504:53;3579:42:5;;;2492:66:6;-1:-1:-1;;;2574:12:6;;;2567:36;2619:12;;;2612:28;;;3557:9:5;;2656:12:6;;3579:42:5;;;-1:-1:-1;;3579:42:5;;;;;;;;;3569:53;;3579:42;3569:53;;;;4575:15;4593:29;;;;;;;;;3306:25:6;;;4612:2:5;3347:18:6;;;3340:45;;;;3401:18;;;3394:34;;;3444:18;;;3437:34;;;3569:53:5;;-1:-1:-1;4575:15:5;4593:29;;3278:19:6;;4593:29:5;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4593:29:5;;;-1:-1:-1;;4593:29:5;;;4624:15;4642:29;;;4593;4642;;;;;3306:25:6;;;4661:2:5;3347:18:6;;;3340:45;;;;3401:18;;;3394:34;;;3444:18;;;3437:34;;;4593:29:5;-1:-1:-1;4624:15:5;;-1:-1:-1;4642:29:5;;3278:19:6;;4642:29:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4624:47;;4698:7;1101:6:4;;-1:-1:-1;;;;;1101:6:4;;1029:85;4698:7:5;-1:-1:-1;;;;;4689:16:5;:7;-1:-1:-1;;;;;4689:16:5;;:36;;;-1:-1:-1;1101:6:4;;-1:-1:-1;;;;;4709:16:5;;;1101:6:4;;4709:16:5;4689:36;4681:78;;;;-1:-1:-1;;;4681:78:5;;7798:2:6;4681:78:5;;;7780:21:6;7837:2;7817:18;;;7810:30;7876:31;7856:18;;;7849:59;7925:18;;4681:78:5;7596:353:6;4681:78:5;4921:8;;;;:5;:8;;;;;:13;;-1:-1:-1;;4921:13:5;4930:4;4921:13;;;5020:21;5026:6;5034;5020:5;:21::i;:::-;-1:-1:-1;5137:4:5;;3129:2019;-1:-1:-1;;;;;;;;3129:2019:5:o;1917:198:4:-;1101:6;;-1:-1:-1;;;;;1101:6:4;719:10:0;1241:23:4;1233:68;;;;-1:-1:-1;;;1233:68:4;;6265:2:6;1233:68:4;;;6247:21:6;;;6284:18;;;6277:30;6343:34;6323:18;;;6316:62;6395:18;;1233:68:4;6063:356:6;1233:68:4;-1:-1:-1;;;;;2005:22:4;::::1;1997:73;;;::::0;-1:-1:-1;;;1997:73:4;;4690:2:6;1997:73:4::1;::::0;::::1;4672:21:6::0;4729:2;4709:18;;;4702:30;4768:34;4748:18;;;4741:62;-1:-1:-1;;;4819:18:6;;;4812:36;4865:19;;1997:73:4::1;4488:402:6::0;1997:73:4::1;2080:28;2099:8;2080:18;:28::i;:::-;1917:198:::0;:::o;10118:370:1:-;-1:-1:-1;;;;;10249:19:1;;10241:68;;;;-1:-1:-1;;;10241:68:1;;7393:2:6;10241:68:1;;;7375:21:6;7432:2;7412:18;;;7405:30;7471:34;7451:18;;;7444:62;-1:-1:-1;;;7522:18:6;;;7515:34;7566:19;;10241:68:1;7191:400:6;10241:68:1;-1:-1:-1;;;;;10327:21:1;;10319:68;;;;-1:-1:-1;;;10319:68:1;;5097:2:6;10319:68:1;;;5079:21:6;5136:2;5116:18;;;5109:30;5175:34;5155:18;;;5148:62;-1:-1:-1;;;5226:18:6;;;5219:32;5268:19;;10319:68:1;4895:398:6;10319:68:1;-1:-1:-1;;;;;10398:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10449:32;;8866:25:6;;;10449:32:1;;8839:18:6;10449:32:1;;;;;;;10118:370;;;:::o;10765:441::-;-1:-1:-1;;;;;4070:18:1;;;10895:24;4070:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10961:37:1;;10957:243;;11042:6;11022:16;:26;;11014:68;;;;-1:-1:-1;;;11014:68:1;;5500:2:6;11014:68:1;;;5482:21:6;5539:2;5519:18;;;5512:30;5578:31;5558:18;;;5551:59;5627:18;;11014:68:1;5298:353:6;11014:68:1;11124:51;11133:5;11140:7;11168:6;11149:16;:25;11124:8;:51::i;:::-;10885:321;10765:441;;;:::o;7467:655::-;-1:-1:-1;;;;;7593:18:1;;7585:68;;;;-1:-1:-1;;;7585:68:1;;6987:2:6;7585:68:1;;;6969:21:6;7026:2;7006:18;;;6999:30;7065:34;7045:18;;;7038:62;-1:-1:-1;;;7116:18:6;;;7109:35;7161:19;;7585:68:1;6785:401:6;7585:68:1;-1:-1:-1;;;;;7671:16:1;;7663:64;;;;-1:-1:-1;;;7663:64:1;;4286:2:6;7663:64:1;;;4268:21:6;4325:2;4305:18;;;4298:30;4364:34;4344:18;;;4337:62;-1:-1:-1;;;4415:18:6;;;4408:33;4458:19;;7663:64:1;4084:399:6;7663:64:1;-1:-1:-1;;;;;7811:15:1;;7789:19;7811:15;;;;;;;;;;;7844:21;;;;7836:72;;;;-1:-1:-1;;;7836:72:1;;5858:2:6;7836:72:1;;;5840:21:6;5897:2;5877:18;;;5870:30;5936:34;5916:18;;;5909:62;-1:-1:-1;;;5987:18:6;;;5980:36;6033:19;;7836:72:1;5656:402:6;7836:72:1;-1:-1:-1;;;;;7942:15:1;;;:9;:15;;;;;;;;;;;7960:20;;;7942:38;;8000:13;;;;;;;;:23;;7974:6;;7942:9;8000:23;;7974:6;;8000:23;:::i;:::-;;;;;;;;8054:2;-1:-1:-1;;;;;8039:26:1;8048:4;-1:-1:-1;;;;;8039:26:1;;8058:6;8039:26;;;;8866:25:6;;8854:2;8839:18;;8720:177;8039:26:1;;;;;;;;7575:547;7467:655;;;:::o;8398:393::-;-1:-1:-1;;;;;8481:21:1;;8473:65;;;;-1:-1:-1;;;8473:65:1;;8562:2:6;8473:65:1;;;8544:21:6;8601:2;8581:18;;;8574:30;8640:33;8620:18;;;8613:61;8691:18;;8473:65:1;8360:355:6;8473:65:1;8627:6;8611:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8643:18:1;;:9;:18;;;;;;;;;;:28;;8665:6;;8643:9;:28;;8665:6;;8643:28;:::i;:::-;;;;-1:-1:-1;;8686:37:1;;8866:25:6;;;-1:-1:-1;;;;;8686:37:1;;;8703:1;;8686:37;;8854:2:6;8839:18;8686:37:1;;;;;;;8398:393;;:::o;2269:187:4:-;2361:6;;;-1:-1:-1;;;;;2377:17:4;;;-1:-1:-1;;;;;;2377:17:4;;;;;;;2409:40;;2361:6;;;2377:17;2361:6;;2409:40;;2342:16;;2409:40;2332:124;2269:187;:::o;14:173:6:-;82:20;;-1:-1:-1;;;;;131:31:6;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;:::-;333:39;192:186;-1:-1:-1;;;192:186:6:o;383:260::-;451:6;459;512:2;500:9;491:7;487:23;483:32;480:52;;;528:1;525;518:12;480:52;551:29;570:9;551:29;:::i;:::-;541:39;;599:38;633:2;622:9;618:18;599:38;:::i;:::-;589:48;;383:260;;;;;:::o;648:328::-;725:6;733;741;794:2;782:9;773:7;769:23;765:32;762:52;;;810:1;807;800:12;762:52;833:29;852:9;833:29;:::i;:::-;823:39;;881:38;915:2;904:9;900:18;881:38;:::i;:::-;871:48;;966:2;955:9;951:18;938:32;928:42;;648:328;;;;;:::o;981:254::-;1049:6;1057;1110:2;1098:9;1089:7;1085:23;1081:32;1078:52;;;1126:1;1123;1116:12;1078:52;1149:29;1168:9;1149:29;:::i;:::-;1139:39;1225:2;1210:18;;;;1197:32;;-1:-1:-1;;;981:254:6:o;1240:989::-;1317:6;1325;1378:2;1366:9;1357:7;1353:23;1349:32;1346:52;;;1394:1;1391;1384:12;1346:52;1430:9;1417:23;1407:33;;1491:2;1480:9;1476:18;1463:32;1514:18;1555:2;1547:6;1544:14;1541:34;;;1571:1;1568;1561:12;1541:34;1609:6;1598:9;1594:22;1584:32;;1654:7;1647:4;1643:2;1639:13;1635:27;1625:55;;1676:1;1673;1666:12;1625:55;1712:2;1699:16;1734:2;1730;1727:10;1724:36;;;1740:18;;:::i;:::-;1815:2;1809:9;1783:2;1869:13;;-1:-1:-1;;1865:22:6;;;1889:2;1861:31;1857:40;1845:53;;;1913:18;;;1933:22;;;1910:46;1907:72;;;1959:18;;:::i;:::-;1999:10;1995:2;1988:22;2034:2;2026:6;2019:18;2074:7;2069:2;2064;2060;2056:11;2052:20;2049:33;2046:53;;;2095:1;2092;2085:12;2046:53;2151:2;2146;2142;2138:11;2133:2;2125:6;2121:15;2108:46;2196:1;2191:2;2186;2178:6;2174:15;2170:24;2163:35;2217:6;2207:16;;;;;;;1240:989;;;;;:::o;3482:597::-;3594:4;3623:2;3652;3641:9;3634:21;3684:6;3678:13;3727:6;3722:2;3711:9;3707:18;3700:34;3752:1;3762:140;3776:6;3773:1;3770:13;3762:140;;;3871:14;;;3867:23;;3861:30;3837:17;;;3856:2;3833:26;3826:66;3791:10;;3762:140;;;3920:6;3917:1;3914:13;3911:91;;;3990:1;3985:2;3976:6;3965:9;3961:22;3957:31;3950:42;3911:91;-1:-1:-1;4063:2:6;4042:15;-1:-1:-1;;4038:29:6;4023:45;;;;4070:2;4019:54;;3482:597;-1:-1:-1;;;3482:597:6:o;9091:225::-;9131:3;9162:1;9158:6;9155:1;9152:13;9149:136;;;9207:10;9202:3;9198:20;9195:1;9188:31;9242:4;9239:1;9232:15;9270:4;9267:1;9260:15;9149:136;-1:-1:-1;9301:9:6;;9091:225::o;9321:380::-;9400:1;9396:12;;;;9443;;;9464:61;;9518:4;9510:6;9506:17;9496:27;;9464:61;9571:2;9563:6;9560:14;9540:18;9537:38;9534:161;;;9617:10;9612:3;9608:20;9605:1;9598:31;9652:4;9649:1;9642:15;9680:4;9677:1;9670:15;9534:161;;9321:380;;;:::o;9706:127::-;9767:10;9762:3;9758:20;9755:1;9748:31;9798:4;9795:1;9788:15;9822:4;9819:1;9812:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "733200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24647",
								"balanceOf(address)": "2629",
								"decimals()": "222",
								"decreaseAllowance(address,uint256)": "26967",
								"increaseAllowance(address,uint256)": "27012",
								"mint(uint256,bytes)": "infinite",
								"name()": "infinite",
								"owner()": "2324",
								"symbol()": "infinite",
								"totalSupply()": "2349",
								"transfer(address,uint256)": "51192",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28400"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 448,
									"end": 5150,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 488,
									"end": 539,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 488,
									"end": 539,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 488,
									"end": 539,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 488,
									"end": 539,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 488,
									"end": 539,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 488,
									"end": 539,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 488,
									"end": 539,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 488,
									"end": 539,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 488,
									"end": 539,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 488,
									"end": 539,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1957,
									"end": 2070,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1957,
									"end": 2070,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1957,
									"end": 2070,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1957,
									"end": 2070,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1957,
									"end": 2070,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1957,
									"end": 2070,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1957,
									"end": 2070,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1957,
									"end": 2070,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1957,
									"end": 2070,
									"name": "PUSH",
									"source": 1,
									"value": "C"
								},
								{
									"begin": 1957,
									"end": 2070,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1957,
									"end": 2070,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "77726170706564204C4F4E47"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1957,
									"end": 2070,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1957,
									"end": 2070,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1957,
									"end": 2070,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1957,
									"end": 2070,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1957,
									"end": 2070,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1957,
									"end": 2070,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1957,
									"end": 2070,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1957,
									"end": 2070,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1957,
									"end": 2070,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1957,
									"end": 2070,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1957,
									"end": 2070,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1957,
									"end": 2070,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1957,
									"end": 2070,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1957,
									"end": 2070,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 1957,
									"end": 2070,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1957,
									"end": 2070,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1957,
									"end": 2070,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1957,
									"end": 2070,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "774C4F4E47"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "D8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1957,
									"end": 2070,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1957,
									"end": 2070,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1957,
									"end": 2070,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1957,
									"end": 2070,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2023,
									"end": 2036,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2023,
									"end": 2036,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1957,
									"end": 2070,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1957,
									"end": 2070,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1957,
									"end": 2070,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2023,
									"end": 2036,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 2023,
									"end": 2036,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2023,
									"end": 2028,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2023,
									"end": 2028,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2023,
									"end": 2036,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 2023,
									"end": 2036,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2023,
									"end": 2036,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 2023,
									"end": 2036,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2046,
									"end": 2063,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2063,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2063,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2046,
									"end": 2063,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2053,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 2046,
									"end": 2053,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2063,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2046,
									"end": 2063,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2063,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2063,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2063,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 2046,
									"end": 2063,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2046,
									"end": 2063,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2046,
									"end": 2063,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2063,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1957,
									"end": 2070,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1957,
									"end": 2070,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 914,
									"end": 946,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 933,
									"end": 945,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 933,
									"end": 943,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 933,
									"end": 943,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 933,
									"end": 943,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 933,
									"end": 945,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 933,
									"end": 945,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 933,
									"end": 945,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 933,
									"end": 945,
									"name": "tag",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 933,
									"end": 945,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 914,
									"end": 932,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 914,
									"end": 946,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 914,
									"end": 946,
									"name": "tag",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 914,
									"end": 946,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 719,
									"end": 729,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 2269,
									"end": 2456,
									"name": "tag",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 2269,
									"end": 2456,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2361,
									"end": 2367,
									"name": "PUSH",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 2361,
									"end": 2367,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2361,
									"end": 2367,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2377,
									"end": 2394,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2377,
									"end": 2394,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2377,
									"end": 2394,
									"name": "AND",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2377,
									"end": 2394,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2377,
									"end": 2394,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 2377,
									"end": 2394,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2377,
									"end": 2394,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 2377,
									"end": 2394,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2377,
									"end": 2394,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 2377,
									"end": 2394,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 2409,
									"end": 2449,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 2409,
									"end": 2449,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2361,
									"end": 2367,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2361,
									"end": 2367,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 2361,
									"end": 2367,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2377,
									"end": 2394,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2361,
									"end": 2367,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2361,
									"end": 2367,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2409,
									"end": 2449,
									"name": "PUSH",
									"source": 4,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2409,
									"end": 2449,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2342,
									"end": 2358,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2342,
									"end": 2358,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2409,
									"end": 2449,
									"name": "LOG3",
									"source": 4
								},
								{
									"begin": 2332,
									"end": 2456,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2269,
									"end": 2456,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2269,
									"end": 2456,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "tag",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "tag",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "DIV",
									"source": 5
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "tag",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "PUSH",
									"source": 5,
									"value": "FF"
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "tag",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "tag",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "tag",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "tag",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "tag",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "tag",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 14,
									"end": 394,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 14,
									"end": 394,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 93,
									"end": 94,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 89,
									"end": 101,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 89,
									"end": 101,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 89,
									"end": 101,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 89,
									"end": 101,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 136,
									"end": 148,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 136,
									"end": 148,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 136,
									"end": 148,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 157,
									"end": 218,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 157,
									"end": 218,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 211,
									"end": 215,
									"name": "PUSH",
									"source": 6,
									"value": "7F"
								},
								{
									"begin": 203,
									"end": 209,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 199,
									"end": 216,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 189,
									"end": 216,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 189,
									"end": 216,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 157,
									"end": 218,
									"name": "tag",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 157,
									"end": 218,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 264,
									"end": 266,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 256,
									"end": 262,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 253,
									"end": 267,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 233,
									"end": 251,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 230,
									"end": 268,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 227,
									"end": 388,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 227,
									"end": 388,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 227,
									"end": 388,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 310,
									"end": 320,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B71"
								},
								{
									"begin": 305,
									"end": 308,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 301,
									"end": 321,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 298,
									"end": 299,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 291,
									"end": 322,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 345,
									"end": 349,
									"name": "PUSH",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 342,
									"end": 343,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 335,
									"end": 350,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 373,
									"end": 377,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 370,
									"end": 371,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 363,
									"end": 378,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 227,
									"end": 388,
									"name": "tag",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 227,
									"end": 388,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 227,
									"end": 388,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 14,
									"end": 394,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 14,
									"end": 394,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 14,
									"end": 394,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 14,
									"end": 394,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 14,
									"end": 394,
									"name": "tag",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 14,
									"end": 394,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 448,
									"end": 5150,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220909c05d01c5ac483746f3215ab089001e5aecf84ae97b29c21619bd54215377964736f6c63430008070033",
									".code": [
										{
											"begin": 448,
											"end": 5150,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "PUSH",
											"source": 5,
											"value": "8DA5CB5B"
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "PUSH",
											"source": 5,
											"value": "DB7FD408"
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "PUSH",
											"source": 5,
											"value": "DD62ED3E"
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "PUSH",
											"source": 5,
											"value": "F2FDE38B"
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "PUSH",
											"source": 5,
											"value": "8DA5CB5B"
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "PUSH",
											"source": 5,
											"value": "95D89B41"
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "PUSH",
											"source": 5,
											"value": "A457C2D7"
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "PUSH",
											"source": 5,
											"value": "313CE567"
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "PUSH",
											"source": 5,
											"value": "39509351"
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "PUSH",
											"source": 5,
											"value": "6FDDE03"
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "PUSH",
											"source": 5,
											"value": "95EA7B3"
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "PUSH",
											"source": 5,
											"value": "18160DDD"
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 448,
											"end": 5150,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2135,
											"end": 2233,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2135,
											"end": 2233,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2135,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2135,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 2135,
											"end": 2233,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2135,
											"end": 2233,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2135,
											"end": 2233,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2135,
											"end": 2233,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2135,
											"end": 2233,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2135,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2135,
											"end": 2233,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2135,
											"end": 2233,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2135,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2135,
											"end": 2233,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2135,
											"end": 2233,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2135,
											"end": 2233,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2135,
											"end": 2233,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2135,
											"end": 2233,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2135,
											"end": 2233,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2135,
											"end": 2233,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2135,
											"end": 2233,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2135,
											"end": 2233,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2135,
											"end": 2233,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4412,
											"end": 4609,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4412,
											"end": 4609,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4412,
											"end": 4609,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4412,
											"end": 4609,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 4412,
											"end": 4609,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4412,
											"end": 4609,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4412,
											"end": 4609,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 4412,
											"end": 4609,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4412,
											"end": 4609,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 4412,
											"end": 4609,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4412,
											"end": 4609,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 4412,
											"end": 4609,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4412,
											"end": 4609,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4412,
											"end": 4609,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4412,
											"end": 4609,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4412,
											"end": 4609,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3066,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3052,
											"end": 3066,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3045,
											"end": 3067,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3027,
											"end": 3068,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3027,
											"end": 3068,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3015,
											"end": 3017,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3000,
											"end": 3018,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4412,
											"end": 4609,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2887,
											"end": 3074,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3223,
											"end": 3329,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3223,
											"end": 3329,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3310,
											"end": 3322,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3310,
											"end": 3322,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3223,
											"end": 3329,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 3223,
											"end": 3329,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3223,
											"end": 3329,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3223,
											"end": 3329,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8866,
											"end": 8891,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8866,
											"end": 8891,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8866,
											"end": 8891,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8854,
											"end": 8856,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8839,
											"end": 8857,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3223,
											"end": 3329,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 8720,
											"end": 8897,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5171,
											"end": 5457,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 5171,
											"end": 5457,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5171,
											"end": 5457,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5171,
											"end": 5457,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 5171,
											"end": 5457,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5171,
											"end": 5457,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5171,
											"end": 5457,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 5171,
											"end": 5457,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5171,
											"end": 5457,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 5171,
											"end": 5457,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5171,
											"end": 5457,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 5171,
											"end": 5457,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 835,
											"end": 925,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 835,
											"end": 925,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 835,
											"end": 925,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 835,
											"end": 925,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 893,
											"end": 898,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9044,
											"end": 9080,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9044,
											"end": 9080,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9032,
											"end": 9034,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9017,
											"end": 9035,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 835,
											"end": 925,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 8902,
											"end": 9086,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5852,
											"end": 6088,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5852,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5852,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5852,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5852,
											"end": 6088,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5852,
											"end": 6088,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5852,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 5852,
											"end": 6088,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5852,
											"end": 6088,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5852,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5852,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 5852,
											"end": 6088,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3387,
											"end": 3512,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 3387,
											"end": 3512,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3387,
											"end": 3512,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 3387,
											"end": 3512,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3387,
											"end": 3512,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3387,
											"end": 3512,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3387,
											"end": 3512,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 3387,
											"end": 3512,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3387,
											"end": 3512,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3387,
											"end": 3512,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3487,
											"end": 3505,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3461,
											"end": 3468,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3487,
											"end": 3505,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3487,
											"end": 3505,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3487,
											"end": 3505,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3487,
											"end": 3505,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3487,
											"end": 3505,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3487,
											"end": 3505,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3487,
											"end": 3505,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3487,
											"end": 3505,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3487,
											"end": 3505,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3487,
											"end": 3505,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3487,
											"end": 3505,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3487,
											"end": 3505,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3387,
											"end": 3512,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2876,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2825,
											"end": 2876,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2813,
											"end": 2815,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2798,
											"end": 2816,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 2679,
											"end": 2882,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2346,
											"end": 2448,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2346,
											"end": 2448,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2346,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2346,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2346,
											"end": 2448,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6575,
											"end": 7004,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 6575,
											"end": 7004,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6575,
											"end": 7004,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6575,
											"end": 7004,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 6575,
											"end": 7004,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6575,
											"end": 7004,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6575,
											"end": 7004,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 6575,
											"end": 7004,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6575,
											"end": 7004,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 6575,
											"end": 7004,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6575,
											"end": 7004,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 6575,
											"end": 7004,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3708,
											"end": 3897,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 3708,
											"end": 3897,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3897,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3708,
											"end": 3897,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3708,
											"end": 3897,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3897,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3708,
											"end": 3897,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3708,
											"end": 3897,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3708,
											"end": 3897,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3708,
											"end": 3897,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3897,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 3708,
											"end": 3897,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3129,
											"end": 5148,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 3129,
											"end": 5148,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3129,
											"end": 5148,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3129,
											"end": 5148,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 3129,
											"end": 5148,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3129,
											"end": 5148,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3129,
											"end": 5148,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 3129,
											"end": 5148,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3129,
											"end": 5148,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 3129,
											"end": 5148,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3129,
											"end": 5148,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 3129,
											"end": 5148,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3955,
											"end": 4104,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 3955,
											"end": 4104,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3955,
											"end": 4104,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 3955,
											"end": 4104,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 3955,
											"end": 4104,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3955,
											"end": 4104,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3955,
											"end": 4104,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 3955,
											"end": 4104,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3955,
											"end": 4104,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 3955,
											"end": 4104,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4070,
											"end": 4088,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4088,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4088,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4044,
											"end": 4051,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4070,
											"end": 4088,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4088,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4088,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4081,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4070,
											"end": 4088,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4070,
											"end": 4088,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4088,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4088,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4088,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4070,
											"end": 4088,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4088,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4088,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4097,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4097,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4097,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4097,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4097,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4097,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4097,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4097,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4097,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4097,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4097,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4097,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4097,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3955,
											"end": 4104,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1917,
											"end": 2115,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 1917,
											"end": 2115,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1917,
											"end": 2115,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 1917,
											"end": 2115,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 1917,
											"end": 2115,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1917,
											"end": 2115,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1917,
											"end": 2115,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 1917,
											"end": 2115,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1917,
											"end": 2115,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 1917,
											"end": 2115,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1917,
											"end": 2115,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 1917,
											"end": 2115,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1917,
											"end": 2115,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 1917,
											"end": 2115,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1917,
											"end": 2115,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 2135,
											"end": 2233,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 2135,
											"end": 2233,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 2202,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2221,
											"end": 2226,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2135,
											"end": 2233,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2135,
											"end": 2233,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4412,
											"end": 4609,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 4412,
											"end": 4609,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4495,
											"end": 4499,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4549,
											"end": 4581,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4565,
											"end": 4572,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4574,
											"end": 4580,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4549,
											"end": 4557,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 4549,
											"end": 4581,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4549,
											"end": 4581,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 4549,
											"end": 4581,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4598,
											"end": 4602,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4598,
											"end": 4602,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4412,
											"end": 4609,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4412,
											"end": 4609,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5171,
											"end": 5457,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 5171,
											"end": 5457,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5298,
											"end": 5302,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5392,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 5370,
											"end": 5374,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5385,
											"end": 5391,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5354,
											"end": 5369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 5354,
											"end": 5392,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5354,
											"end": 5392,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 5354,
											"end": 5392,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5402,
											"end": 5429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 5412,
											"end": 5416,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5418,
											"end": 5420,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5422,
											"end": 5428,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5402,
											"end": 5411,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 5402,
											"end": 5429,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5402,
											"end": 5429,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 5402,
											"end": 5429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5446,
											"end": 5450,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5446,
											"end": 5450,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5171,
											"end": 5457,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5171,
											"end": 5457,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5852,
											"end": 6088,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 5852,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5944,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6019,
											"end": 6037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6019,
											"end": 6037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6019,
											"end": 6037,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6019,
											"end": 6030,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6019,
											"end": 6037,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6019,
											"end": 6037,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6019,
											"end": 6037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6019,
											"end": 6037,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6019,
											"end": 6037,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6019,
											"end": 6037,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6019,
											"end": 6037,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6019,
											"end": 6037,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6019,
											"end": 6046,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6019,
											"end": 6046,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6019,
											"end": 6046,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6019,
											"end": 6046,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6019,
											"end": 6046,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6019,
											"end": 6046,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6019,
											"end": 6046,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6019,
											"end": 6046,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6019,
											"end": 6046,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6019,
											"end": 6046,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5940,
											"end": 5944,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5940,
											"end": 5944,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5994,
											"end": 6060,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 5994,
											"end": 6060,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6019,
											"end": 6046,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6019,
											"end": 6046,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6019,
											"end": 6059,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 6019,
											"end": 6059,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6049,
											"end": 6059,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6049,
											"end": 6059,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6019,
											"end": 6059,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 6019,
											"end": 6059,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6019,
											"end": 6059,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 6019,
											"end": 6059,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5994,
											"end": 6002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 5994,
											"end": 6060,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2346,
											"end": 2448,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2346,
											"end": 2448,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2402,
											"end": 2415,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2434,
											"end": 2441,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2427,
											"end": 2441,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2427,
											"end": 2441,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2427,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2427,
											"end": 2441,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2427,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2427,
											"end": 2441,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6575,
											"end": 7004,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 6575,
											"end": 7004,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 6668,
											"end": 6672,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6749,
											"end": 6767,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6749,
											"end": 6767,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6749,
											"end": 6767,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6749,
											"end": 6760,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6749,
											"end": 6767,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6749,
											"end": 6767,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6749,
											"end": 6767,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6749,
											"end": 6767,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6749,
											"end": 6767,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6749,
											"end": 6767,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6749,
											"end": 6767,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6749,
											"end": 6767,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6749,
											"end": 6776,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6749,
											"end": 6776,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6749,
											"end": 6776,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6749,
											"end": 6776,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6749,
											"end": 6776,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6749,
											"end": 6776,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6749,
											"end": 6776,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6749,
											"end": 6776,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6749,
											"end": 6776,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6749,
											"end": 6776,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6668,
											"end": 6672,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6668,
											"end": 6672,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6794,
											"end": 6829,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6794,
											"end": 6829,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6794,
											"end": 6829,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6794,
											"end": 6829,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6786,
											"end": 6871,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 6786,
											"end": 6871,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6786,
											"end": 6871,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6786,
											"end": 6871,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6786,
											"end": 6871,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6786,
											"end": 6871,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8156,
											"end": 8158,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6786,
											"end": 6871,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6786,
											"end": 6871,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6786,
											"end": 6871,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8138,
											"end": 8159,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8195,
											"end": 8197,
											"name": "PUSH",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 8175,
											"end": 8193,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 8175,
											"end": 8193,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8175,
											"end": 8193,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8168,
											"end": 8198,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8234,
											"end": 8268,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 8214,
											"end": 8232,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 8214,
											"end": 8232,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8214,
											"end": 8232,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8207,
											"end": 8269,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8285,
											"end": 8303,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 8285,
											"end": 8303,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8285,
											"end": 8303,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8278,
											"end": 8313,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8330,
											"end": 8349,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 8330,
											"end": 8349,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6786,
											"end": 6871,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 6786,
											"end": 6871,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6786,
											"end": 6871,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6786,
											"end": 6871,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6786,
											"end": 6871,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6786,
											"end": 6871,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6786,
											"end": 6871,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6786,
											"end": 6871,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6786,
											"end": 6871,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6786,
											"end": 6871,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 6786,
											"end": 6871,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6905,
											"end": 6965,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 6914,
											"end": 6919,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6921,
											"end": 6928,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6949,
											"end": 6964,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6930,
											"end": 6964,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6905,
											"end": 6913,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 6905,
											"end": 6965,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3708,
											"end": 3897,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 3708,
											"end": 3897,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3787,
											"end": 3791,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3841,
											"end": 3869,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3858,
											"end": 3860,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3862,
											"end": 3868,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3841,
											"end": 3850,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 3841,
											"end": 3869,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3129,
											"end": 5148,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 3129,
											"end": 5148,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3422,
											"end": 3426,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3407,
											"end": 3427,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3407,
											"end": 3427,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3407,
											"end": 3427,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3401,
											"end": 3428,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3467,
											"end": 3471,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3452,
											"end": 3472,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3452,
											"end": 3472,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3452,
											"end": 3472,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3446,
											"end": 3473,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3209,
											"end": 3213,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3501,
											"end": 3509,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3501,
											"end": 3509,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3501,
											"end": 3509,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3501,
											"end": 3506,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 3501,
											"end": 3509,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3501,
											"end": 3509,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 3501,
											"end": 3509,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3501,
											"end": 3509,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3501,
											"end": 3509,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3501,
											"end": 3509,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3501,
											"end": 3509,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3401,
											"end": 3428,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3446,
											"end": 3473,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3501,
											"end": 3509,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 3501,
											"end": 3509,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3500,
											"end": 3509,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3492,
											"end": 3546,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 3492,
											"end": 3546,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3492,
											"end": 3546,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3492,
											"end": 3546,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3492,
											"end": 3546,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3492,
											"end": 3546,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6626,
											"end": 6628,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3492,
											"end": 3546,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3492,
											"end": 3546,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3492,
											"end": 3546,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6645,
											"end": 6663,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 6645,
											"end": 6663,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6645,
											"end": 6663,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6638,
											"end": 6668,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6704,
											"end": 6738,
											"name": "PUSH",
											"source": 6,
											"value": "774C4F4E473A206B65792068617320616C7265616479206265656E2075736564"
										},
										{
											"begin": 6684,
											"end": 6702,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 6684,
											"end": 6702,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6684,
											"end": 6702,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6677,
											"end": 6739,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6774,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 6756,
											"end": 6774,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3492,
											"end": 3546,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 6424,
											"end": 6780,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3492,
											"end": 3546,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 3492,
											"end": 3546,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3579,
											"end": 3621,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3579,
											"end": 3621,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2512,
											"end": 2514,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2508,
											"end": 2523,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2523,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2523,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 2504,
											"end": 2557,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3579,
											"end": 3621,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3579,
											"end": 3621,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3579,
											"end": 3621,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2492,
											"end": 2558,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1901"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2574,
											"end": 2586,
											"name": "PUSH",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 2574,
											"end": 2586,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2574,
											"end": 2586,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2567,
											"end": 2603,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2619,
											"end": 2631,
											"name": "PUSH",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 2619,
											"end": 2631,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2619,
											"end": 2631,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2612,
											"end": 2640,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2612,
											"end": 2640,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2612,
											"end": 2640,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3557,
											"end": 3566,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3557,
											"end": 3566,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2656,
											"end": 2668,
											"name": "PUSH",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 2656,
											"end": 2668,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3579,
											"end": 3621,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3579,
											"end": 3621,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3579,
											"end": 3621,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3579,
											"end": 3621,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3579,
											"end": 3621,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3579,
											"end": 3621,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3579,
											"end": 3621,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3579,
											"end": 3621,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3579,
											"end": 3621,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3579,
											"end": 3621,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3579,
											"end": 3621,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3579,
											"end": 3621,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3569,
											"end": 3622,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3569,
											"end": 3622,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3579,
											"end": 3621,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3569,
											"end": 3622,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3569,
											"end": 3622,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3569,
											"end": 3622,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3569,
											"end": 3622,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4575,
											"end": 4590,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4593,
											"end": 4622,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4593,
											"end": 4622,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4593,
											"end": 4622,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4593,
											"end": 4622,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4593,
											"end": 4622,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4593,
											"end": 4622,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4593,
											"end": 4622,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4593,
											"end": 4622,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4593,
											"end": 4622,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3306,
											"end": 3331,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3306,
											"end": 3331,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3306,
											"end": 3331,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4612,
											"end": 4614,
											"name": "PUSH",
											"source": 5,
											"value": "1B"
										},
										{
											"begin": 3347,
											"end": 3365,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3347,
											"end": 3365,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3347,
											"end": 3365,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3340,
											"end": 3385,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3340,
											"end": 3385,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3340,
											"end": 3385,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3340,
											"end": 3385,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3401,
											"end": 3419,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3401,
											"end": 3419,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3401,
											"end": 3419,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3394,
											"end": 3428,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3394,
											"end": 3428,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3394,
											"end": 3428,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3444,
											"end": 3462,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 3444,
											"end": 3462,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3444,
											"end": 3462,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3437,
											"end": 3471,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3437,
											"end": 3471,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3437,
											"end": 3471,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3569,
											"end": 3622,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3569,
											"end": 3622,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4575,
											"end": 4590,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4593,
											"end": 4622,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4593,
											"end": 4622,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3278,
											"end": 3297,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 3278,
											"end": 3297,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4593,
											"end": 4622,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4593,
											"end": 4622,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4593,
											"end": 4622,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4593,
											"end": 4622,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4593,
											"end": 4622,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4593,
											"end": 4622,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4593,
											"end": 4622,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4593,
											"end": 4622,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4593,
											"end": 4622,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4593,
											"end": 4622,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4593,
											"end": 4622,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4593,
											"end": 4622,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4593,
											"end": 4622,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 4593,
											"end": 4622,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 4593,
											"end": 4622,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4593,
											"end": 4622,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4593,
											"end": 4622,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4593,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 4593,
											"end": 4622,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4593,
											"end": 4622,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4593,
											"end": 4622,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4593,
											"end": 4622,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4593,
											"end": 4622,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 4593,
											"end": 4622,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4593,
											"end": 4622,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4593,
											"end": 4622,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4593,
											"end": 4622,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 4593,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4593,
											"end": 4622,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4593,
											"end": 4622,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4593,
											"end": 4622,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4593,
											"end": 4622,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4593,
											"end": 4622,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4593,
											"end": 4622,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4624,
											"end": 4639,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4642,
											"end": 4671,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4642,
											"end": 4671,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4642,
											"end": 4671,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4593,
											"end": 4622,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4642,
											"end": 4671,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4642,
											"end": 4671,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4642,
											"end": 4671,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4642,
											"end": 4671,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4642,
											"end": 4671,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3306,
											"end": 3331,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3306,
											"end": 3331,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3306,
											"end": 3331,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4661,
											"end": 4663,
											"name": "PUSH",
											"source": 5,
											"value": "1C"
										},
										{
											"begin": 3347,
											"end": 3365,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3347,
											"end": 3365,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3347,
											"end": 3365,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3340,
											"end": 3385,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3340,
											"end": 3385,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3340,
											"end": 3385,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3340,
											"end": 3385,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3401,
											"end": 3419,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3401,
											"end": 3419,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3401,
											"end": 3419,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3394,
											"end": 3428,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 3394,
											"end": 3428,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3394,
											"end": 3428,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3444,
											"end": 3462,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 3444,
											"end": 3462,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3444,
											"end": 3462,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3437,
											"end": 3471,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3437,
											"end": 3471,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3437,
											"end": 3471,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4593,
											"end": 4622,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4624,
											"end": 4639,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4624,
											"end": 4639,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4642,
											"end": 4671,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4642,
											"end": 4671,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3278,
											"end": 3297,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 3278,
											"end": 3297,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4642,
											"end": 4671,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4642,
											"end": 4671,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4642,
											"end": 4671,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4642,
											"end": 4671,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4642,
											"end": 4671,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4642,
											"end": 4671,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4642,
											"end": 4671,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4642,
											"end": 4671,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4642,
											"end": 4671,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4642,
											"end": 4671,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4642,
											"end": 4671,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4642,
											"end": 4671,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4642,
											"end": 4671,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 4642,
											"end": 4671,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 4642,
											"end": 4671,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4642,
											"end": 4671,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4642,
											"end": 4671,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4642,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 4642,
											"end": 4671,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4642,
											"end": 4671,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4642,
											"end": 4671,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4642,
											"end": 4671,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4642,
											"end": 4671,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 4642,
											"end": 4671,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4642,
											"end": 4671,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4642,
											"end": 4671,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4642,
											"end": 4671,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 4642,
											"end": 4671,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4642,
											"end": 4671,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4642,
											"end": 4671,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4642,
											"end": 4671,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4642,
											"end": 4671,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4642,
											"end": 4671,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4642,
											"end": 4671,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4642,
											"end": 4671,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4642,
											"end": 4671,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4624,
											"end": 4671,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4624,
											"end": 4671,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4698,
											"end": 4705,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4698,
											"end": 4705,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 4698,
											"end": 4705,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4689,
											"end": 4705,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4689,
											"end": 4696,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4689,
											"end": 4705,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4689,
											"end": 4705,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 4689,
											"end": 4725,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4689,
											"end": 4725,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 4689,
											"end": 4725,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4709,
											"end": 4725,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4709,
											"end": 4725,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4709,
											"end": 4725,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4709,
											"end": 4725,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 4689,
											"end": 4725,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 4689,
											"end": 4725,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4681,
											"end": 4759,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 4681,
											"end": 4759,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4681,
											"end": 4759,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4681,
											"end": 4759,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4681,
											"end": 4759,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4681,
											"end": 4759,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7798,
											"end": 7800,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4681,
											"end": 4759,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4681,
											"end": 4759,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4681,
											"end": 4759,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7780,
											"end": 7801,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7837,
											"end": 7839,
											"name": "PUSH",
											"source": 6,
											"value": "1D"
										},
										{
											"begin": 7817,
											"end": 7835,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 7817,
											"end": 7835,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7817,
											"end": 7835,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7810,
											"end": 7840,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7876,
											"end": 7907,
											"name": "PUSH",
											"source": 6,
											"value": "774C4F4E473A207369676E6174757265206973206E6F742076616C6964000000"
										},
										{
											"begin": 7856,
											"end": 7874,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 7856,
											"end": 7874,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7856,
											"end": 7874,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7849,
											"end": 7908,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7925,
											"end": 7943,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 7925,
											"end": 7943,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4681,
											"end": 4759,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 7596,
											"end": 7949,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4681,
											"end": 4759,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 4681,
											"end": 4759,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4921,
											"end": 4929,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4921,
											"end": 4929,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4921,
											"end": 4929,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4921,
											"end": 4929,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4921,
											"end": 4926,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 4921,
											"end": 4929,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4921,
											"end": 4929,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4921,
											"end": 4929,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4921,
											"end": 4929,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4921,
											"end": 4929,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4921,
											"end": 4934,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4921,
											"end": 4934,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4921,
											"end": 4934,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4930,
											"end": 4934,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4921,
											"end": 4934,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 4921,
											"end": 4934,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4921,
											"end": 4934,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 5020,
											"end": 5041,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 5026,
											"end": 5032,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5034,
											"end": 5040,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 5020,
											"end": 5025,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 5020,
											"end": 5041,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5020,
											"end": 5041,
											"name": "tag",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 5020,
											"end": 5041,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5137,
											"end": 5141,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 5137,
											"end": 5141,
											"name": "SWAP9",
											"source": 5
										},
										{
											"begin": 3129,
											"end": 5148,
											"name": "SWAP8",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3129,
											"end": 5148,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1917,
											"end": 2115,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 1917,
											"end": 2115,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1241,
											"end": 1264,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6265,
											"end": 6267,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6247,
											"end": 6268,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6247,
											"end": 6268,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6247,
											"end": 6268,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6284,
											"end": 6302,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 6284,
											"end": 6302,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6284,
											"end": 6302,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6277,
											"end": 6307,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6343,
											"end": 6377,
											"name": "PUSH",
											"source": 6,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 6323,
											"end": 6341,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 6323,
											"end": 6341,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6323,
											"end": 6341,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6316,
											"end": 6378,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6395,
											"end": 6413,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 6395,
											"end": 6413,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 6063,
											"end": 6419,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2005,
											"end": 2027,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2005,
											"end": 2027,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1997,
											"end": 2070,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 1997,
											"end": 2070,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1997,
											"end": 2070,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1997,
											"end": 2070,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1997,
											"end": 2070,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1997,
											"end": 2070,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4690,
											"end": 4692,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1997,
											"end": 2070,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1997,
											"end": 2070,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1997,
											"end": 2070,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4672,
											"end": 4693,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4729,
											"end": 4731,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 4709,
											"end": 4727,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4709,
											"end": 4727,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4709,
											"end": 4727,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4702,
											"end": 4732,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4768,
											"end": 4802,
											"name": "PUSH",
											"source": 6,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 4748,
											"end": 4766,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4748,
											"end": 4766,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4748,
											"end": 4766,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4741,
											"end": 4803,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4819,
											"end": 4837,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4819,
											"end": 4837,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4819,
											"end": 4837,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4812,
											"end": 4848,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4865,
											"end": 4884,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 4865,
											"end": 4884,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1997,
											"end": 2070,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 4488,
											"end": 4890,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1997,
											"end": 2070,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 1997,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2080,
											"end": 2108,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 2099,
											"end": 2107,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2080,
											"end": 2098,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 2080,
											"end": 2108,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2080,
											"end": 2108,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 2080,
											"end": 2108,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1917,
											"end": 2115,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1917,
											"end": 2115,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 10118,
											"end": 10488,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 10118,
											"end": 10488,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10249,
											"end": 10268,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10249,
											"end": 10268,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10241,
											"end": 10309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 10241,
											"end": 10309,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10241,
											"end": 10309,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10241,
											"end": 10309,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10241,
											"end": 10309,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10241,
											"end": 10309,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7393,
											"end": 7395,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10241,
											"end": 10309,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10241,
											"end": 10309,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10241,
											"end": 10309,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7396,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7432,
											"end": 7434,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 7412,
											"end": 7430,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7412,
											"end": 7430,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7412,
											"end": 7430,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7405,
											"end": 7435,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7471,
											"end": 7505,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 7451,
											"end": 7469,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 7451,
											"end": 7469,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7451,
											"end": 7469,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7444,
											"end": 7506,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7522,
											"end": 7540,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 7522,
											"end": 7540,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7522,
											"end": 7540,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7515,
											"end": 7549,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7566,
											"end": 7585,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 7566,
											"end": 7585,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10241,
											"end": 10309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 7191,
											"end": 7591,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10241,
											"end": 10309,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 10241,
											"end": 10309,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10327,
											"end": 10348,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10327,
											"end": 10348,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10319,
											"end": 10387,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 10319,
											"end": 10387,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10319,
											"end": 10387,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10319,
											"end": 10387,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10319,
											"end": 10387,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10319,
											"end": 10387,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5099,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10319,
											"end": 10387,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10319,
											"end": 10387,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10319,
											"end": 10387,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5079,
											"end": 5100,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5136,
											"end": 5138,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 5116,
											"end": 5134,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5116,
											"end": 5134,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5116,
											"end": 5134,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5109,
											"end": 5139,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5175,
											"end": 5209,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 5155,
											"end": 5173,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 5155,
											"end": 5173,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5155,
											"end": 5173,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5148,
											"end": 5210,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5226,
											"end": 5244,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 5226,
											"end": 5244,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5226,
											"end": 5244,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5219,
											"end": 5251,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5268,
											"end": 5287,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 5268,
											"end": 5287,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10319,
											"end": 10387,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 4895,
											"end": 5293,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10319,
											"end": 10387,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 10319,
											"end": 10387,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10398,
											"end": 10416,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10398,
											"end": 10416,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10398,
											"end": 10416,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10398,
											"end": 10416,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10398,
											"end": 10416,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10398,
											"end": 10416,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10398,
											"end": 10416,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10398,
											"end": 10409,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10398,
											"end": 10416,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10398,
											"end": 10416,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10398,
											"end": 10416,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10398,
											"end": 10416,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10398,
											"end": 10416,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10398,
											"end": 10416,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10398,
											"end": 10416,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10398,
											"end": 10416,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10398,
											"end": 10425,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 10398,
											"end": 10425,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 10398,
											"end": 10425,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10398,
											"end": 10425,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10398,
											"end": 10425,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10398,
											"end": 10425,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10398,
											"end": 10425,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 10398,
											"end": 10425,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10398,
											"end": 10425,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10398,
											"end": 10425,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10398,
											"end": 10425,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10398,
											"end": 10425,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10398,
											"end": 10425,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10398,
											"end": 10434,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10398,
											"end": 10434,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10398,
											"end": 10434,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10449,
											"end": 10481,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10449,
											"end": 10481,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8866,
											"end": 8891,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8866,
											"end": 8891,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8866,
											"end": 8891,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10449,
											"end": 10481,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10449,
											"end": 10481,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8839,
											"end": 8857,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10449,
											"end": 10481,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10449,
											"end": 10481,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10449,
											"end": 10481,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10449,
											"end": 10481,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10449,
											"end": 10481,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10449,
											"end": 10481,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10449,
											"end": 10481,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10488,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10488,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10488,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10488,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10765,
											"end": 11206,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 10765,
											"end": 11206,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4070,
											"end": 4088,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4088,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4088,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10895,
											"end": 10919,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4070,
											"end": 4088,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4088,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4088,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4081,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4070,
											"end": 4088,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4070,
											"end": 4088,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4088,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4088,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4088,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4070,
											"end": 4088,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4088,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4088,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4097,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4097,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4097,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4097,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4097,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4097,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4097,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4097,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4097,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4097,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10961,
											"end": 10998,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10961,
											"end": 10998,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11200,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 10957,
											"end": 11200,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11042,
											"end": 11048,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11022,
											"end": 11038,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11022,
											"end": 11048,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 11022,
											"end": 11048,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11014,
											"end": 11082,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 11014,
											"end": 11082,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11014,
											"end": 11082,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11014,
											"end": 11082,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11014,
											"end": 11082,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11014,
											"end": 11082,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5500,
											"end": 5502,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11014,
											"end": 11082,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11014,
											"end": 11082,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11014,
											"end": 11082,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5482,
											"end": 5503,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5539,
											"end": 5541,
											"name": "PUSH",
											"source": 6,
											"value": "1D"
										},
										{
											"begin": 5519,
											"end": 5537,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5519,
											"end": 5537,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5519,
											"end": 5537,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5512,
											"end": 5542,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5578,
											"end": 5609,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 5558,
											"end": 5576,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 5558,
											"end": 5576,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5558,
											"end": 5576,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5551,
											"end": 5610,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5627,
											"end": 5645,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 5627,
											"end": 5645,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11014,
											"end": 11082,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 5298,
											"end": 5651,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11014,
											"end": 11082,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 11014,
											"end": 11082,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11124,
											"end": 11175,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 11133,
											"end": 11138,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11140,
											"end": 11147,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11168,
											"end": 11174,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11149,
											"end": 11165,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11149,
											"end": 11174,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11124,
											"end": 11132,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 11124,
											"end": 11175,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11124,
											"end": 11175,
											"name": "tag",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 11124,
											"end": 11175,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10885,
											"end": 11206,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10765,
											"end": 11206,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10765,
											"end": 11206,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10765,
											"end": 11206,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10765,
											"end": 11206,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7467,
											"end": 8122,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 7467,
											"end": 8122,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7585,
											"end": 7653,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 7585,
											"end": 7653,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7585,
											"end": 7653,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7585,
											"end": 7653,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7585,
											"end": 7653,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7585,
											"end": 7653,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6987,
											"end": 6989,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7585,
											"end": 7653,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7585,
											"end": 7653,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7585,
											"end": 7653,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6969,
											"end": 6990,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7026,
											"end": 7028,
											"name": "PUSH",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 7006,
											"end": 7024,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 7006,
											"end": 7024,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7006,
											"end": 7024,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6999,
											"end": 7029,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7065,
											"end": 7099,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 7045,
											"end": 7063,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 7045,
											"end": 7063,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7045,
											"end": 7063,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7038,
											"end": 7100,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7116,
											"end": 7134,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 7116,
											"end": 7134,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7116,
											"end": 7134,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7109,
											"end": 7144,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7161,
											"end": 7180,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 7161,
											"end": 7180,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7585,
											"end": 7653,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 6785,
											"end": 7186,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7585,
											"end": 7653,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 7585,
											"end": 7653,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7671,
											"end": 7687,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7671,
											"end": 7687,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7663,
											"end": 7727,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 7663,
											"end": 7727,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7663,
											"end": 7727,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7663,
											"end": 7727,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7663,
											"end": 7727,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7663,
											"end": 7727,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4286,
											"end": 4288,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7663,
											"end": 7727,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7663,
											"end": 7727,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7663,
											"end": 7727,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4268,
											"end": 4289,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4325,
											"end": 4327,
											"name": "PUSH",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 4305,
											"end": 4323,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4305,
											"end": 4323,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4305,
											"end": 4323,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4298,
											"end": 4328,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4364,
											"end": 4398,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 4344,
											"end": 4362,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4344,
											"end": 4362,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4344,
											"end": 4362,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4337,
											"end": 4399,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4415,
											"end": 4433,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4415,
											"end": 4433,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4415,
											"end": 4433,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4408,
											"end": 4441,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4458,
											"end": 4477,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 4458,
											"end": 4477,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7663,
											"end": 7727,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 4084,
											"end": 4483,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7663,
											"end": 7727,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 7663,
											"end": 7727,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7811,
											"end": 7826,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7811,
											"end": 7826,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7789,
											"end": 7808,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7811,
											"end": 7826,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7811,
											"end": 7826,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7811,
											"end": 7826,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7811,
											"end": 7826,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7811,
											"end": 7826,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7811,
											"end": 7826,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7811,
											"end": 7826,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7811,
											"end": 7826,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7811,
											"end": 7826,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7811,
											"end": 7826,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7811,
											"end": 7826,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7844,
											"end": 7865,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7844,
											"end": 7865,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7844,
											"end": 7865,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7844,
											"end": 7865,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7836,
											"end": 7908,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 7836,
											"end": 7908,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7836,
											"end": 7908,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7836,
											"end": 7908,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7836,
											"end": 7908,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7836,
											"end": 7908,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5858,
											"end": 5860,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7836,
											"end": 7908,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7836,
											"end": 7908,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7836,
											"end": 7908,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5840,
											"end": 5861,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5897,
											"end": 5899,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 5877,
											"end": 5895,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5877,
											"end": 5895,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5877,
											"end": 5895,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5870,
											"end": 5900,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5936,
											"end": 5970,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 5916,
											"end": 5934,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 5916,
											"end": 5934,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5916,
											"end": 5934,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5909,
											"end": 5971,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5987,
											"end": 6005,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 5987,
											"end": 6005,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5987,
											"end": 6005,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5980,
											"end": 6016,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6033,
											"end": 6052,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 6033,
											"end": 6052,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7836,
											"end": 7908,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 5656,
											"end": 6058,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7836,
											"end": 7908,
											"name": "tag",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 7836,
											"end": 7908,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7942,
											"end": 7957,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7942,
											"end": 7957,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7942,
											"end": 7957,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7942,
											"end": 7951,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7942,
											"end": 7957,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7942,
											"end": 7957,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7942,
											"end": 7957,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7942,
											"end": 7957,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7942,
											"end": 7957,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7942,
											"end": 7957,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7942,
											"end": 7957,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7942,
											"end": 7957,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7942,
											"end": 7957,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7942,
											"end": 7957,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7942,
											"end": 7957,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7960,
											"end": 7980,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7960,
											"end": 7980,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7960,
											"end": 7980,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7942,
											"end": 7980,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7942,
											"end": 7980,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8000,
											"end": 8013,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8000,
											"end": 8013,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8000,
											"end": 8013,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8000,
											"end": 8013,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8000,
											"end": 8013,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8000,
											"end": 8013,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8000,
											"end": 8013,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8000,
											"end": 8013,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8000,
											"end": 8023,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8000,
											"end": 8023,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7974,
											"end": 7980,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7974,
											"end": 7980,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7942,
											"end": 7951,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8000,
											"end": 8023,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 8000,
											"end": 8023,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7974,
											"end": 7980,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7974,
											"end": 7980,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8000,
											"end": 8023,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 8000,
											"end": 8023,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8000,
											"end": 8023,
											"name": "tag",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 8000,
											"end": 8023,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8000,
											"end": 8023,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8000,
											"end": 8023,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8000,
											"end": 8023,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8000,
											"end": 8023,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8000,
											"end": 8023,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8000,
											"end": 8023,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8000,
											"end": 8023,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8054,
											"end": 8056,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8039,
											"end": 8065,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8048,
											"end": 8052,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8039,
											"end": 8065,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8039,
											"end": 8065,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8058,
											"end": 8064,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8039,
											"end": 8065,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8039,
											"end": 8065,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8039,
											"end": 8065,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 8039,
											"end": 8065,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8866,
											"end": 8891,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8866,
											"end": 8891,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8854,
											"end": 8856,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8839,
											"end": 8857,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8839,
											"end": 8857,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8720,
											"end": 8897,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8039,
											"end": 8065,
											"name": "tag",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 8039,
											"end": 8065,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8039,
											"end": 8065,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8039,
											"end": 8065,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8039,
											"end": 8065,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8039,
											"end": 8065,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8039,
											"end": 8065,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8039,
											"end": 8065,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8039,
											"end": 8065,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 7575,
											"end": 8122,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7467,
											"end": 8122,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7467,
											"end": 8122,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7467,
											"end": 8122,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7467,
											"end": 8122,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8398,
											"end": 8791,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 8398,
											"end": 8791,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8481,
											"end": 8502,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8481,
											"end": 8502,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8473,
											"end": 8538,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 8473,
											"end": 8538,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8473,
											"end": 8538,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8473,
											"end": 8538,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8473,
											"end": 8538,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8473,
											"end": 8538,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8562,
											"end": 8564,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8473,
											"end": 8538,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8473,
											"end": 8538,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8473,
											"end": 8538,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8544,
											"end": 8565,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8601,
											"end": 8603,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 8581,
											"end": 8599,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 8581,
											"end": 8599,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8581,
											"end": 8599,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8574,
											"end": 8604,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8640,
											"end": 8673,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 8620,
											"end": 8638,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 8620,
											"end": 8638,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8620,
											"end": 8638,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8613,
											"end": 8674,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8691,
											"end": 8709,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 8691,
											"end": 8709,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8473,
											"end": 8538,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 8360,
											"end": 8715,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8473,
											"end": 8538,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 8473,
											"end": 8538,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8627,
											"end": 8633,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8611,
											"end": 8623,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 8611,
											"end": 8623,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8611,
											"end": 8633,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8611,
											"end": 8633,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8611,
											"end": 8633,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8611,
											"end": 8633,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 8611,
											"end": 8633,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8611,
											"end": 8633,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8611,
											"end": 8633,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 8611,
											"end": 8633,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8611,
											"end": 8633,
											"name": "tag",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 8611,
											"end": 8633,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8611,
											"end": 8633,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8611,
											"end": 8633,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8611,
											"end": 8633,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8643,
											"end": 8661,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8643,
											"end": 8661,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8643,
											"end": 8652,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8643,
											"end": 8661,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8643,
											"end": 8661,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8643,
											"end": 8661,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8643,
											"end": 8661,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8643,
											"end": 8661,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8643,
											"end": 8661,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8643,
											"end": 8661,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8643,
											"end": 8661,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8643,
											"end": 8661,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8643,
											"end": 8661,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8643,
											"end": 8671,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8643,
											"end": 8671,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8665,
											"end": 8671,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8665,
											"end": 8671,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8643,
											"end": 8652,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8643,
											"end": 8671,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 8643,
											"end": 8671,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8665,
											"end": 8671,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8665,
											"end": 8671,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8643,
											"end": 8671,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 8643,
											"end": 8671,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8643,
											"end": 8671,
											"name": "tag",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 8643,
											"end": 8671,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8643,
											"end": 8671,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8643,
											"end": 8671,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8643,
											"end": 8671,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8686,
											"end": 8723,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8686,
											"end": 8723,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8866,
											"end": 8891,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8866,
											"end": 8891,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8866,
											"end": 8891,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8686,
											"end": 8723,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8686,
											"end": 8723,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8686,
											"end": 8723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8703,
											"end": 8704,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8703,
											"end": 8704,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8686,
											"end": 8723,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8686,
											"end": 8723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8854,
											"end": 8856,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8839,
											"end": 8857,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8686,
											"end": 8723,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8686,
											"end": 8723,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8686,
											"end": 8723,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8686,
											"end": 8723,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8686,
											"end": 8723,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8686,
											"end": 8723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8686,
											"end": 8723,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 8398,
											"end": 8791,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8398,
											"end": 8791,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8398,
											"end": 8791,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2269,
											"end": 2456,
											"name": "tag",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 2269,
											"end": 2456,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2361,
											"end": 2367,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 2361,
											"end": 2367,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2361,
											"end": 2367,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2377,
											"end": 2394,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2377,
											"end": 2394,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2377,
											"end": 2394,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2377,
											"end": 2394,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2377,
											"end": 2394,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2377,
											"end": 2394,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2377,
											"end": 2394,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 2377,
											"end": 2394,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2377,
											"end": 2394,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2377,
											"end": 2394,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2409,
											"end": 2449,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2409,
											"end": 2449,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2361,
											"end": 2367,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2361,
											"end": 2367,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2361,
											"end": 2367,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2377,
											"end": 2394,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2361,
											"end": 2367,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2361,
											"end": 2367,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2409,
											"end": 2449,
											"name": "PUSH",
											"source": 4,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2409,
											"end": 2449,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2342,
											"end": 2358,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2342,
											"end": 2358,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2409,
											"end": 2449,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2456,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2456,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2456,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 251,
											"end": 257,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 301,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 283,
											"end": 290,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 275,
											"end": 307,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 272,
											"end": 324,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 272,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 272,
											"end": 324,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 362,
											"end": 371,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 333,
											"end": 372,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 192,
											"end": 378,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 383,
											"end": 643,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 383,
											"end": 643,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 451,
											"end": 457,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 459,
											"end": 465,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 512,
											"end": 514,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 500,
											"end": 509,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 491,
											"end": 498,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 487,
											"end": 510,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 483,
											"end": 515,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 480,
											"end": 532,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 480,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 480,
											"end": 532,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 528,
											"end": 529,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 525,
											"end": 526,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 518,
											"end": 530,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 480,
											"end": 532,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 480,
											"end": 532,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 551,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 570,
											"end": 579,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 551,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 541,
											"end": 580,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 541,
											"end": 580,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 599,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 633,
											"end": 635,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 622,
											"end": 631,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 618,
											"end": 636,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 599,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 589,
											"end": 637,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 589,
											"end": 637,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 383,
											"end": 643,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 383,
											"end": 643,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 383,
											"end": 643,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 383,
											"end": 643,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 383,
											"end": 643,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 383,
											"end": 643,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 648,
											"end": 976,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 648,
											"end": 976,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 725,
											"end": 731,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 733,
											"end": 739,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 741,
											"end": 747,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 794,
											"end": 796,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 782,
											"end": 791,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 773,
											"end": 780,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 769,
											"end": 792,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 765,
											"end": 797,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 762,
											"end": 814,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 762,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 762,
											"end": 814,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 810,
											"end": 811,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 808,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 800,
											"end": 812,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 762,
											"end": 814,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 762,
											"end": 814,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 833,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 852,
											"end": 861,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 833,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "tag",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 823,
											"end": 862,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 823,
											"end": 862,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 881,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 915,
											"end": 917,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 904,
											"end": 913,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 900,
											"end": 918,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 881,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 871,
											"end": 919,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 871,
											"end": 919,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 966,
											"end": 968,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 955,
											"end": 964,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 951,
											"end": 969,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 938,
											"end": 970,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 928,
											"end": 970,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 928,
											"end": 970,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 648,
											"end": 976,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 648,
											"end": 976,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 648,
											"end": 976,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 648,
											"end": 976,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 648,
											"end": 976,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 648,
											"end": 976,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 981,
											"end": 1235,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 981,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1049,
											"end": 1055,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1057,
											"end": 1063,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1110,
											"end": 1112,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1089,
											"end": 1096,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1085,
											"end": 1108,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1113,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1126,
											"end": 1127,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1123,
											"end": 1124,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1116,
											"end": 1128,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 1168,
											"end": 1177,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1139,
											"end": 1178,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 1225,
											"end": 1227,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1197,
											"end": 1229,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1197,
											"end": 1229,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 981,
											"end": 1235,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1240,
											"end": 2229,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 1240,
											"end": 2229,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1317,
											"end": 1323,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1325,
											"end": 1331,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1378,
											"end": 1380,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1366,
											"end": 1375,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1357,
											"end": 1364,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1353,
											"end": 1376,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1349,
											"end": 1381,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1346,
											"end": 1398,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1346,
											"end": 1398,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 1346,
											"end": 1398,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1394,
											"end": 1395,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1391,
											"end": 1392,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1384,
											"end": 1396,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1346,
											"end": 1398,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 1346,
											"end": 1398,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1430,
											"end": 1439,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1417,
											"end": 1440,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1407,
											"end": 1440,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1407,
											"end": 1440,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1491,
											"end": 1493,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1480,
											"end": 1489,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1476,
											"end": 1494,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1463,
											"end": 1495,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1514,
											"end": 1532,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1555,
											"end": 1557,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1553,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1544,
											"end": 1558,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1541,
											"end": 1575,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1541,
											"end": 1575,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 1541,
											"end": 1575,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 1572,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1568,
											"end": 1569,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1561,
											"end": 1573,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1541,
											"end": 1575,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 1541,
											"end": 1575,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1609,
											"end": 1615,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1598,
											"end": 1607,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1594,
											"end": 1616,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1584,
											"end": 1616,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1584,
											"end": 1616,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1654,
											"end": 1661,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1647,
											"end": 1651,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1643,
											"end": 1645,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1639,
											"end": 1652,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1635,
											"end": 1662,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1625,
											"end": 1680,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 1625,
											"end": 1680,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1676,
											"end": 1677,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1673,
											"end": 1674,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1666,
											"end": 1678,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1625,
											"end": 1680,
											"name": "tag",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 1625,
											"end": 1680,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1712,
											"end": 1714,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1699,
											"end": 1715,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1734,
											"end": 1736,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1730,
											"end": 1732,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1727,
											"end": 1737,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1724,
											"end": 1760,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1724,
											"end": 1760,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 1724,
											"end": 1760,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1740,
											"end": 1758,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 1740,
											"end": 1758,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 1740,
											"end": 1758,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1740,
											"end": 1758,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 1740,
											"end": 1758,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1815,
											"end": 1817,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1809,
											"end": 1818,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1783,
											"end": 1785,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1869,
											"end": 1882,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1869,
											"end": 1882,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1865,
											"end": 1887,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1865,
											"end": 1887,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1865,
											"end": 1887,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1889,
											"end": 1891,
											"name": "PUSH",
											"source": 6,
											"value": "3F"
										},
										{
											"begin": 1861,
											"end": 1892,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1857,
											"end": 1897,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1845,
											"end": 1898,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1845,
											"end": 1898,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1845,
											"end": 1898,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1913,
											"end": 1931,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1913,
											"end": 1931,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1913,
											"end": 1931,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1933,
											"end": 1955,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1933,
											"end": 1955,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1933,
											"end": 1955,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1910,
											"end": 1956,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1907,
											"end": 1979,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1907,
											"end": 1979,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 1907,
											"end": 1979,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1959,
											"end": 1977,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 1959,
											"end": 1977,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 1959,
											"end": 1977,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1959,
											"end": 1977,
											"name": "tag",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 1959,
											"end": 1977,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1999,
											"end": 2009,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1995,
											"end": 1997,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1988,
											"end": 2010,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2036,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2026,
											"end": 2032,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2019,
											"end": 2037,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2074,
											"end": 2081,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 2069,
											"end": 2071,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2064,
											"end": 2066,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2060,
											"end": 2062,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2056,
											"end": 2067,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2072,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2049,
											"end": 2082,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2046,
											"end": 2099,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2046,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 2046,
											"end": 2099,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2095,
											"end": 2096,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2092,
											"end": 2093,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2085,
											"end": 2097,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2046,
											"end": 2099,
											"name": "tag",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 2046,
											"end": 2099,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2151,
											"end": 2153,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2146,
											"end": 2148,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2142,
											"end": 2144,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2138,
											"end": 2149,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2133,
											"end": 2135,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2125,
											"end": 2131,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2121,
											"end": 2136,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2108,
											"end": 2154,
											"name": "CALLDATACOPY",
											"source": 6
										},
										{
											"begin": 2196,
											"end": 2197,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2191,
											"end": 2193,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2186,
											"end": 2188,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2178,
											"end": 2184,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2174,
											"end": 2189,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2170,
											"end": 2194,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2163,
											"end": 2198,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2217,
											"end": 2223,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2207,
											"end": 2223,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 2207,
											"end": 2223,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2207,
											"end": 2223,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2207,
											"end": 2223,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2207,
											"end": 2223,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2207,
											"end": 2223,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2207,
											"end": 2223,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1240,
											"end": 2229,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1240,
											"end": 2229,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1240,
											"end": 2229,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1240,
											"end": 2229,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1240,
											"end": 2229,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1240,
											"end": 2229,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3482,
											"end": 4079,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 3482,
											"end": 4079,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3594,
											"end": 3598,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3623,
											"end": 3625,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3652,
											"end": 3654,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3641,
											"end": 3650,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3634,
											"end": 3655,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3684,
											"end": 3690,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3678,
											"end": 3691,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3727,
											"end": 3733,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3722,
											"end": 3724,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3711,
											"end": 3720,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3707,
											"end": 3725,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3700,
											"end": 3734,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3752,
											"end": 3753,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3762,
											"end": 3902,
											"name": "tag",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 3762,
											"end": 3902,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3776,
											"end": 3782,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3773,
											"end": 3774,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3770,
											"end": 3783,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3762,
											"end": 3902,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3762,
											"end": 3902,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 3762,
											"end": 3902,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3871,
											"end": 3885,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3871,
											"end": 3885,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3871,
											"end": 3885,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3867,
											"end": 3890,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3867,
											"end": 3890,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3861,
											"end": 3891,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3837,
											"end": 3854,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3837,
											"end": 3854,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3837,
											"end": 3854,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3856,
											"end": 3858,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3833,
											"end": 3859,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3826,
											"end": 3892,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3791,
											"end": 3801,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3791,
											"end": 3801,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3762,
											"end": 3902,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 3762,
											"end": 3902,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3762,
											"end": 3902,
											"name": "tag",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 3762,
											"end": 3902,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3920,
											"end": 3926,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3917,
											"end": 3918,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3914,
											"end": 3927,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3911,
											"end": 4002,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3911,
											"end": 4002,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 3911,
											"end": 4002,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3990,
											"end": 3991,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3985,
											"end": 3987,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3976,
											"end": 3982,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 3974,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3961,
											"end": 3983,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3957,
											"end": 3988,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3950,
											"end": 3992,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3911,
											"end": 4002,
											"name": "tag",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 3911,
											"end": 4002,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4063,
											"end": 4065,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 4042,
											"end": 4057,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4038,
											"end": 4067,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4023,
											"end": 4068,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4023,
											"end": 4068,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4023,
											"end": 4068,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4023,
											"end": 4068,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4070,
											"end": 4072,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4019,
											"end": 4073,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4019,
											"end": 4073,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3482,
											"end": 4079,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3482,
											"end": 4079,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 9091,
											"end": 9316,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 9091,
											"end": 9316,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9131,
											"end": 9134,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9162,
											"end": 9163,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9158,
											"end": 9164,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 9155,
											"end": 9156,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9152,
											"end": 9165,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 9149,
											"end": 9285,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9149,
											"end": 9285,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 9149,
											"end": 9285,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9207,
											"end": 9217,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 9202,
											"end": 9205,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 9198,
											"end": 9218,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 9195,
											"end": 9196,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9188,
											"end": 9219,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9242,
											"end": 9246,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 9239,
											"end": 9240,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9232,
											"end": 9247,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9270,
											"end": 9274,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 9267,
											"end": 9268,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9260,
											"end": 9275,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 9149,
											"end": 9285,
											"name": "tag",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 9149,
											"end": 9285,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9301,
											"end": 9310,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9301,
											"end": 9310,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9091,
											"end": 9316,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 9321,
											"end": 9701,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 9321,
											"end": 9701,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9400,
											"end": 9401,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 9396,
											"end": 9408,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9396,
											"end": 9408,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9396,
											"end": 9408,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 9396,
											"end": 9408,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9443,
											"end": 9455,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9443,
											"end": 9455,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9443,
											"end": 9455,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9464,
											"end": 9525,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 9464,
											"end": 9525,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9518,
											"end": 9522,
											"name": "PUSH",
											"source": 6,
											"value": "7F"
										},
										{
											"begin": 9510,
											"end": 9516,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9506,
											"end": 9523,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9496,
											"end": 9523,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9496,
											"end": 9523,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9464,
											"end": 9525,
											"name": "tag",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 9464,
											"end": 9525,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9571,
											"end": 9573,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9563,
											"end": 9569,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9560,
											"end": 9574,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 9540,
											"end": 9558,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9537,
											"end": 9575,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 9534,
											"end": 9695,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9534,
											"end": 9695,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 9534,
											"end": 9695,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9617,
											"end": 9627,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 9612,
											"end": 9615,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 9608,
											"end": 9628,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 9605,
											"end": 9606,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9598,
											"end": 9629,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9652,
											"end": 9656,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 9649,
											"end": 9650,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9642,
											"end": 9657,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9680,
											"end": 9684,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 9677,
											"end": 9678,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9670,
											"end": 9685,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 9534,
											"end": 9695,
											"name": "tag",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 9534,
											"end": 9695,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9534,
											"end": 9695,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9321,
											"end": 9701,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9321,
											"end": 9701,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9321,
											"end": 9701,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9321,
											"end": 9701,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 9706,
											"end": 9833,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 9706,
											"end": 9833,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9767,
											"end": 9777,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 9762,
											"end": 9765,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 9758,
											"end": 9778,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 9755,
											"end": 9756,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9748,
											"end": 9779,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9798,
											"end": 9802,
											"name": "PUSH",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 9795,
											"end": 9796,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9788,
											"end": 9803,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9822,
											"end": 9826,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 9819,
											"end": 9820,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9812,
											"end": 9827,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"mint(uint256,bytes)": "db7fd408",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\" decimals \\u0441\\u0442\\u043e\\u043b\\u044c\\u043a\\u043e\\u0436\\u0435 \\u0441\\u043a\\u043e\\u043b\\u044c\\u043a\\u043e \\u0438 \\u0432 \\u043e\\u0440\\u0435\\u0433\\u0438\\u043d\\u0430\\u043b\\u044c\\u043d\\u043e\\u043c LONG coin, totalSupply \\u0438\\u0437\\u043d\\u0430\\u0447\\u0430\\u043b\\u044c\\u043d\\u043e 0, \\u0442\\u0430\\u043a \\u043a\\u0430\\u043a \\u0442\\u043e\\u043a\\u0435\\u043d\\u044b \\u043c\\u0438\\u043d\\u0442\\u044f\\u0442\\u0441\\u044f \\u044e\\u0437\\u0435\\u0440\\u0430\\u043c\\u0438 \\u0447\\u0435\\u0440\\u0435\\u0437 \\u043a\\u0443\\u043f\\u043e\\u043d\\u044b, \\u043f\\u043e\\u0434\\u0442\\u0432\\u0435\\u0440\\u0436\\u0434\\u0430\\u044e\\u0449\\u0438\\u0435 \\u0441\\u0436\\u0438\\u0433\\u0430\\u043d\\u0438\\u0435 LONG\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"mint(uint256,bytes)\":{\"details\":\"\\u042d\\u0442\\u043e \\u0435\\u0434\\u0438\\u043d\\u0441\\u0442\\u0432\\u0435\\u043d\\u043d\\u044b\\u0439 \\u043c\\u0435\\u0442\\u043e\\u0434 \\u0434\\u043b\\u044f \\u043c\\u0438\\u043d\\u0442\\u0438\\u043d\\u0433\\u0430 wLONG. \\u0412\\u044b\\u0437\\u044b\\u0432\\u0430\\u044e\\u0449\\u0438\\u0439 \\u0430\\u0434\\u0440\\u0435\\u0441 \\u0434\\u043e\\u043b\\u0436\\u0435 \\u043f\\u0440\\u0435\\u0434\\u043e\\u0441\\u0442\\u0430\\u0432\\u0438\\u0442\\u044c \\u0432\\u0430\\u043b\\u0438\\u0434\\u043d\\u0443\\u044e \\u0441\\u0438\\u0433\\u043d\\u0430\\u0442\\u0443\\u0440\\u0443 (\\u043a\\u0443\\u043f\\u043e\\u043d), \\u043f\\u043e\\u043b\\u0443\\u0447\\u0435\\u043d\\u043d\\u0443\\u044e \\u043f\\u043e\\u0441\\u043b\\u0435 \\u0441\\u0436\\u0438\\u0433\\u0430\\u0433\\u0438\\u044f \\u043e\\u0440\\u0435\\u0433\\u0438\\u043d\\u0430\\u043b\\u044c\\u043d\\u044b\\u0445 LONG \\u0432 \\u043a\\u043e\\u043b\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u0435 amount\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"_rset\":{\"details\":\"\\u0414\\u043b\\u044f \\u043f\\u0440\\u043e\\u0432\\u0435\\u0440\\u043a\\u0438 \\u043a\\u0443\\u043f\\u043e\\u043d\\u043e\\u0432 \\u043d\\u0430 \\u0441\\u043e\\u0436\\u0436\\u0435\\u043d\\u043d\\u044b\\u0439 LONG \\u0438\\u0441\\u043f\\u043e\\u043b\\u044c\\u0437\\u0443\\u0435\\u043c \\u043c\\u0435\\u0445\\u0430\\u043d\\u0438\\u0437\\u043c ECDSA-\\u043f\\u043e\\u0434\\u043f\\u0438\\u0441\\u0438,  \\u0433\\u0434\\u0435 r-\\u0447\\u0430\\u0441\\u0442\\u044c \\u044e\\u0437\\u0430\\u0431\\u0435\\u043b\\u044c\\u043d\\u0430 \\u043a\\u0430\\u043a \\u043e\\u0434\\u043d\\u043e\\u0440\\u0430\\u0437\\u043e\\u0432\\u044b\\u0439 \\u043b\\u0438\\u0446\\u0435\\u043d\\u0437\\u0438\\u043e\\u043d\\u043d\\u044b\\u0439 \\u043a\\u043b\\u044e\\u0447. \\u0427\\u0442\\u043e\\u0431\\u044b \\u043d\\u0435 \\u0431\\u044b\\u043b\\u043e \\u043f\\u043e\\u0434\\u0434\\u0435\\u043b\\u043e\\u043a \\u043d\\u0443\\u0436\\u043d\\u043e r=k*G \\u0433\\u0435\\u043d\\u0435\\u0440\\u0438\\u0440\\u043e\\u0432\\u0430\\u0442\\u044c \\u043a\\u0430\\u0436\\u0434\\u044b\\u0439 \\u0440\\u0430\\u0437 \\u0438\\u0437 \\u043d\\u043e\\u0432\\u043e\\u0433\\u043e \\u0441\\u043b\\u0443\\u0447\\u0430\\u0439\\u043d\\u043e\\u0433\\u043e k (nonce)!!! \\u041f\\u0440\\u0438 \\u0442\\u0430\\u043a\\u043e\\u0439 \\u0441\\u0445\\u0435\\u043c\\u0435 \\u0432 \\u0445\\u0435\\u0448\\u044c \\u0441\\u043e\\u043e\\u0431\\u0449\\u0435\\u043d\\u0438\\u044f \\u0432\\u043a\\u043b\\u044e\\u0447\\u0430\\u0435\\u0442\\u0441\\u044f \\u0447\\u0438\\u0441\\u043b\\u043e \\u0441\\u043e\\u0436\\u0436\\u0435\\u043d\\u043d\\u044b\\u0445 LONG \\u0430 \\u0432\\u043e\\u0441\\u0441\\u0442\\u0430\\u043d\\u0430\\u0432\\u043b\\u0438\\u0432\\u0430\\u0435\\u043c\\u044b\\u0439 \\u043f\\u0440\\u0438 \\u043f\\u0440\\u043e\\u0432\\u0435\\u0440\\u043a\\u0435  \\u0441\\u0438\\u0433\\u043d\\u0430\\u0442\\u0443\\u0440\\u044b \\u0430\\u0434\\u0440\\u0435\\u0441 (\\u043f\\u0443\\u0431\\u043b\\u0438\\u0447\\u043d\\u044b\\u0439 \\u043a\\u043b\\u044e\\u0447\\u044c) - \\u044d\\u0442\\u043e _owner-\\u0430\\u0434\\u0440\\u0435\\u0441 \\u0432 \\u043a\\u043e\\u043d\\u0442\\u0440\\u0430\\u043a\\u0442\\u0435 (\\u0432\\u043e\\u0437\\u043c\\u043e\\u0436\\u043d\\u0430 \\u0435\\u0433\\u043e \\u0441\\u043c\\u0435\\u043d\\u0430 \\u043f\\u0440\\u0438 \\u043a\\u043e\\u043c\\u043f\\u0440\\u043e\\u043c\\u0435\\u043d\\u0442\\u0430\\u0446\\u0438\\u0438) \\u0412\\u0430\\u0436\\u043d\\u043e! \\u0414\\u043b\\u044f \\u043f\\u0440\\u0435\\u0434\\u043e\\u0442\\u0432\\u0440\\u0430\\u0449\\u0435\\u043d\\u0438\\u044f Front Running \\u0432 \\u0445\\u0435\\u0448\\u044c \\u0441\\u043e\\u043e\\u0431\\u0449\\u0435\\u043d\\u0438\\u044f \\u043f\\u043e\\u0434\\u043c\\u0435\\u0448\\u0438\\u0432\\u0430\\u0435\\u0442\\u0441\\u044f \\u0442\\u0430\\u043a\\u0436\\u0435 \\u0430\\u0434\\u0440\\u0435\\u0441 \\u043e\\u0442\\u043f\\u0440\\u0430\\u0432\\u0438\\u0442\\u0435\\u043b\\u044f (_msgSender()), \\u0442\\u043e \\u0435\\u0441\\u0442\\u044c \\u043a\\u0443\\u043f\\u043e\\u043d\\u044b \\u043d\\u0430 \\u0441\\u0436\\u0438\\u0433\\u0430\\u043d\\u0438\\u0435 \\u0432\\u0441\\u0435\\u0433\\u0434\\u0430 \\u0438\\u043c\\u0435\\u043d\\u043d\\u044b\\u0435 \\u0438 \\u0437\\u0430\\u044e\\u0437\\u0430\\u0442\\u044c \\u0441 \\u0434\\u0440\\u0443\\u0433\\u043e\\u0433\\u043e \\u0430\\u0434\\u0440\\u0435\\u0441\\u0430 \\u043d\\u0435\\u0432\\u043e\\u0437\\u043c\\u043e\\u0436\\u043d\\u043e \"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"wLONG/wLONG.sol\":\"wLONG\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"wLONG/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"wLONG/ERC20.sol\":{\"keccak256\":\"0x502b3c5628698f37a5fa40e176566b97970628471678f7a077c4d7e28c070f4f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b3361bd7195607a59cc5a624cefc89ce3f4bad791a5ae60e875dfcca6d4c299\",\"dweb:/ipfs/QmdypjtxS53WedhoNM1ZZfcqpCJXEiF3edkLWz9QtENSGe\"]},\"wLONG/IERC20.sol\":{\"keccak256\":\"0x8b6892b3623b26123d16a0fe6ee822d293d570a620e8e3c2a4167bb48b2e837a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fa89422c1d99038539ed51c528f0284f78d62f09dd9975789495d220a6fadb69\",\"dweb:/ipfs/QmfMLTkCvWJL8v5G1oyGgD1MfWvu1MC6HoCvDu1A4JTzZm\"]},\"wLONG/IERC20Metadata.sol\":{\"keccak256\":\"0xc9728de78b2dc3785bc6cc070e1ed8a2a855459b99f6bc1b8d17b4d2821fe36e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2977d4a4bfcd16800b9442abd22134592100c156d5a5f2b6d1cd3d62818ab7b\",\"dweb:/ipfs/QmcKhKHMKriycRzyFKaQMAqFun33547tykyn2A1tA1KBBW\"]},\"wLONG/Ownable.sol\":{\"keccak256\":\"0xbcc9148a06a43bc84a2b808bedebbbe84b92b43fc6bb9dd3db45778765e7d847\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://79f5a2d7fb3c0a8ed15b39cca0fd18b1d451a989ecf57338a902ded590e03ba3\",\"dweb:/ipfs/QmUSn9dnKP1NRTL1HHvCSBhLZiXqHEBknVEMtnW9ETWVLs\"]},\"wLONG/wLONG.sol\":{\"keccak256\":\"0xe30d6416ff5a7246c0af0c89c7e04539392cf1f5fdb00e3598552222c602251a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://57feb3f9f24d585e2839bae37392b5023582f7c87d0d05d537b22fb2ff7cdd4d\",\"dweb:/ipfs/QmSnWikizJDYPvEjMYxCU9NS4KMLueu4TuSwzqRjmUkYJi\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"wLONG/Context.sol": {
				"ast": {
					"absolutePath": "wLONG/Context.sol",
					"exportedSymbols": {
						"Context": [
							21
						]
					},
					"id": 22,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 21,
							"linearizedBaseContracts": [
								21
							],
							"name": "Context",
							"nameLocation": "626:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 10,
										"nodeType": "Block",
										"src": "702:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 7,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 8,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 6,
												"id": 9,
												"nodeType": "Return",
												"src": "712:17:0"
											}
										]
									},
									"id": 11,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "693:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:0"
									},
									"scope": 21,
									"src": "640:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 19,
										"nodeType": "Block",
										"src": "809:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 16,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 15,
												"id": 18,
												"nodeType": "Return",
												"src": "819:15:0"
											}
										]
									},
									"id": 20,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "793:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 13,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:0"
									},
									"scope": 21,
									"src": "742:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 22,
							"src": "608:235:0",
							"usedErrors": []
						}
					],
					"src": "86:758:0"
				},
				"id": 0
			},
			"wLONG/ERC20.sol": {
				"ast": {
					"absolutePath": "wLONG/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							21
						],
						"ERC20": [
							485
						],
						"IERC20": [
							563
						],
						"IERC20Metadata": [
							588
						]
					},
					"id": 486,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 23,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:1"
						},
						{
							"absolutePath": "wLONG/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 24,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 486,
							"sourceUnit": 564,
							"src": "130:22:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "wLONG/IERC20Metadata.sol",
							"file": "./IERC20Metadata.sol",
							"id": 25,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 486,
							"sourceUnit": 589,
							"src": "153:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "wLONG/Context.sol",
							"file": "./Context.sol",
							"id": 26,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 486,
							"sourceUnit": 22,
							"src": "184:23:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 28,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 21,
										"src": "1400:7:1"
									},
									"id": 29,
									"nodeType": "InheritanceSpecifier",
									"src": "1400:7:1"
								},
								{
									"baseName": {
										"id": 30,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 563,
										"src": "1409:6:1"
									},
									"id": 31,
									"nodeType": "InheritanceSpecifier",
									"src": "1409:6:1"
								},
								{
									"baseName": {
										"id": 32,
										"name": "IERC20Metadata",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 588,
										"src": "1417:14:1"
									},
									"id": 33,
									"nodeType": "InheritanceSpecifier",
									"src": "1417:14:1"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 27,
								"nodeType": "StructuredDocumentation",
								"src": "209:1172:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 485,
							"linearizedBaseContracts": [
								485,
								588,
								563,
								21
							],
							"name": "ERC20",
							"nameLocation": "1391:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 37,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1474:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 485,
									"src": "1438:45:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 36,
										"keyType": {
											"id": 34,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1446:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1438:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 35,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1457:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 43,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1546:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 485,
									"src": "1490:67:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 42,
										"keyType": {
											"id": 38,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1498:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1490:47:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 41,
											"keyType": {
												"id": 39,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1517:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1509:27:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 40,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1528:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 45,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1580:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 485,
									"src": "1564:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 44,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1564:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 47,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1614:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 485,
									"src": "1599:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 46,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1599:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 49,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1640:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 485,
									"src": "1625:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 48,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1625:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 65,
										"nodeType": "Block",
										"src": "2013:57:1",
										"statements": [
											{
												"expression": {
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 57,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 47,
														"src": "2023:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 58,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 52,
														"src": "2031:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2023:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 60,
												"nodeType": "ExpressionStatement",
												"src": "2023:13:1"
											},
											{
												"expression": {
													"id": 63,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 61,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 49,
														"src": "2046:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 62,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "2056:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2046:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 64,
												"nodeType": "ExpressionStatement",
												"src": "2046:17:1"
											}
										]
									},
									"documentation": {
										"id": 50,
										"nodeType": "StructuredDocumentation",
										"src": "1654:298:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 66,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1983:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "1969:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 51,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1969:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2004:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "1990:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 53,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1990:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1968:44:1"
									},
									"returnParameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2013:0:1"
									},
									"scope": 485,
									"src": "1957:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										575
									],
									"body": {
										"id": 75,
										"nodeType": "Block",
										"src": "2204:29:1",
										"statements": [
											{
												"expression": {
													"id": 73,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 47,
													"src": "2221:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 72,
												"id": 74,
												"nodeType": "Return",
												"src": "2214:12:1"
											}
										]
									},
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "2076:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 76,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2144:4:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 69,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2171:8:1"
									},
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2148:2:1"
									},
									"returnParameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2189:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 70,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2189:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2188:15:1"
									},
									"scope": 485,
									"src": "2135:98:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										581
									],
									"body": {
										"id": 85,
										"nodeType": "Block",
										"src": "2417:31:1",
										"statements": [
											{
												"expression": {
													"id": 83,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 49,
													"src": "2434:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 82,
												"id": 84,
												"nodeType": "Return",
												"src": "2427:14:1"
											}
										]
									},
									"documentation": {
										"id": 77,
										"nodeType": "StructuredDocumentation",
										"src": "2239:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 86,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2355:6:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 79,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2384:8:1"
									},
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2361:2:1"
									},
									"returnParameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "2402:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 80,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2402:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2401:15:1"
									},
									"scope": 485,
									"src": "2346:102:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										587
									],
									"body": {
										"id": 95,
										"nodeType": "Block",
										"src": "3137:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 93,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3154:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 92,
												"id": 94,
												"nodeType": "Return",
												"src": "3147:9:1"
											}
										]
									},
									"documentation": {
										"id": 87,
										"nodeType": "StructuredDocumentation",
										"src": "2454:613:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 96,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3081:8:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 89,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3112:8:1"
									},
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3089:2:1"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "3130:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 90,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3130:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3129:7:1"
									},
									"scope": 485,
									"src": "3072:91:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										494
									],
									"body": {
										"id": 105,
										"nodeType": "Block",
										"src": "3293:36:1",
										"statements": [
											{
												"expression": {
													"id": 103,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 45,
													"src": "3310:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 102,
												"id": 104,
												"nodeType": "Return",
												"src": "3303:19:1"
											}
										]
									},
									"documentation": {
										"id": 97,
										"nodeType": "StructuredDocumentation",
										"src": "3169:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 106,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3232:11:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 99,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3266:8:1"
									},
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3243:2:1"
									},
									"returnParameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "3284:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3284:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3283:9:1"
									},
									"scope": 485,
									"src": "3223:106:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										502
									],
									"body": {
										"id": 119,
										"nodeType": "Block",
										"src": "3470:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 115,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 37,
														"src": "3487:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 117,
													"indexExpression": {
														"id": 116,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 109,
														"src": "3497:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3487:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 114,
												"id": 118,
												"nodeType": "Return",
												"src": "3480:25:1"
											}
										]
									},
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "3335:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3396:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 111,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3443:8:1"
									},
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3414:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "3406:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3406:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3405:17:1"
									},
									"returnParameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "3461:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3461:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3460:9:1"
									},
									"scope": 485,
									"src": "3387:125:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										512
									],
									"body": {
										"id": 144,
										"nodeType": "Block",
										"src": "3793:104:1",
										"statements": [
											{
												"assignments": [
													132
												],
												"declarations": [
													{
														"constant": false,
														"id": 132,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3811:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 144,
														"src": "3803:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 131,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3803:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 133,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "3819:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3819:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3803:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 137,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 132,
															"src": "3851:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 138,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 123,
															"src": "3858:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 139,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 125,
															"src": "3862:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 136,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 358,
														"src": "3841:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3841:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 141,
												"nodeType": "ExpressionStatement",
												"src": "3841:28:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3886:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 130,
												"id": 143,
												"nodeType": "Return",
												"src": "3879:11:1"
											}
										]
									},
									"documentation": {
										"id": 121,
										"nodeType": "StructuredDocumentation",
										"src": "3518:185:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 145,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3717:8:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 127,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3769:8:1"
									},
									"parameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3734:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "3726:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3726:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3746:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "3738:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3738:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3725:28:1"
									},
									"returnParameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "3787:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 128,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3787:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3786:6:1"
									},
									"scope": 485,
									"src": "3708:189:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										522
									],
									"body": {
										"id": 162,
										"nodeType": "Block",
										"src": "4053:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 156,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "4070:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 158,
														"indexExpression": {
															"id": 157,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 148,
															"src": "4082:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4070:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 160,
													"indexExpression": {
														"id": 159,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "4089:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4070:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 155,
												"id": 161,
												"nodeType": "Return",
												"src": "4063:34:1"
											}
										]
									},
									"documentation": {
										"id": 146,
										"nodeType": "StructuredDocumentation",
										"src": "3903:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 163,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3964:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 152,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4026:8:1"
									},
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3982:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "3974:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3974:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3997:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "3989:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3989:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3973:32:1"
									},
									"returnParameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "4044:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4044:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4043:9:1"
									},
									"scope": 485,
									"src": "3955:149:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										532
									],
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "4501:108:1",
										"statements": [
											{
												"assignments": [
													175
												],
												"declarations": [
													{
														"constant": false,
														"id": 175,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4519:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 187,
														"src": "4511:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 174,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4511:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 178,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 176,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "4527:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4527:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4511:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 180,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 175,
															"src": "4558:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 181,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 166,
															"src": "4565:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 182,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 168,
															"src": "4574:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 179,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 441,
														"src": "4549:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4549:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 184,
												"nodeType": "ExpressionStatement",
												"src": "4549:32:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4598:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 173,
												"id": 186,
												"nodeType": "Return",
												"src": "4591:11:1"
											}
										]
									},
									"documentation": {
										"id": 164,
										"nodeType": "StructuredDocumentation",
										"src": "4110:297:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 188,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4421:7:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 170,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4477:8:1"
									},
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4437:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "4429:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4429:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4454:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "4446:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4446:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4428:33:1"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "4495:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 171,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4495:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4494:6:1"
									},
									"scope": 485,
									"src": "4412:197:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										544
									],
									"body": {
										"id": 220,
										"nodeType": "Block",
										"src": "5304:153:1",
										"statements": [
											{
												"assignments": [
													202
												],
												"declarations": [
													{
														"constant": false,
														"id": 202,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5322:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 220,
														"src": "5314:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 201,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5314:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 205,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 203,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "5332:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5332:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5314:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 207,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 191,
															"src": "5370:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 208,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 202,
															"src": "5376:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 209,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "5385:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 206,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 484,
														"src": "5354:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5354:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 211,
												"nodeType": "ExpressionStatement",
												"src": "5354:38:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 213,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 191,
															"src": "5412:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 214,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "5418:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 215,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "5422:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 212,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 358,
														"src": "5402:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5402:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 217,
												"nodeType": "ExpressionStatement",
												"src": "5402:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 218,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5446:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 200,
												"id": 219,
												"nodeType": "Return",
												"src": "5439:11:1"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "4615:551:1",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5180:12:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 197,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5280:8:1"
									},
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5210:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "5202:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5202:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5232:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "5224:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5224:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5252:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "5244:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5244:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5192:72:1"
									},
									"returnParameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "5298:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 198,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5298:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5297:6:1"
									},
									"scope": 485,
									"src": "5171:286:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 250,
										"nodeType": "Block",
										"src": "5946:142:1",
										"statements": [
											{
												"assignments": [
													232
												],
												"declarations": [
													{
														"constant": false,
														"id": 232,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "5964:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 250,
														"src": "5956:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 231,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5956:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 235,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 233,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "5972:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5972:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5956:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 237,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "6003:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 238,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "6010:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 239,
																		"name": "_allowances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 43,
																		"src": "6019:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 241,
																	"indexExpression": {
																		"id": 240,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 232,
																		"src": "6031:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6019:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 243,
																"indexExpression": {
																	"id": 242,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 224,
																	"src": "6038:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6019:27:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 244,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 226,
																"src": "6049:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6019:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 236,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 441,
														"src": "5994:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5994:66:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 247,
												"nodeType": "ExpressionStatement",
												"src": "5994:66:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6077:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 230,
												"id": 249,
												"nodeType": "Return",
												"src": "6070:11:1"
											}
										]
									},
									"documentation": {
										"id": 222,
										"nodeType": "StructuredDocumentation",
										"src": "5463:384:1",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 251,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "5861:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5887:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "5879:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5879:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "5904:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "5896:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5896:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5878:37:1"
									},
									"returnParameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "5940:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 228,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5940:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5939:6:1"
									},
									"scope": 485,
									"src": "5852:236:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 292,
										"nodeType": "Block",
										"src": "6674:330:1",
										"statements": [
											{
												"assignments": [
													262
												],
												"declarations": [
													{
														"constant": false,
														"id": 262,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "6692:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 292,
														"src": "6684:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 261,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6684:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 265,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 263,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "6700:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6700:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6684:28:1"
											},
											{
												"assignments": [
													267
												],
												"declarations": [
													{
														"constant": false,
														"id": 267,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "6730:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 292,
														"src": "6722:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 266,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6722:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 273,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 268,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "6749:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 270,
														"indexExpression": {
															"id": 269,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 262,
															"src": "6761:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6749:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 272,
													"indexExpression": {
														"id": 271,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 254,
														"src": "6768:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6749:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6722:54:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 275,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 267,
																"src": "6794:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 276,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 256,
																"src": "6814:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6794:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 278,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6831:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 274,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6786:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6786:85:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 280,
												"nodeType": "ExpressionStatement",
												"src": "6786:85:1"
											},
											{
												"id": 289,
												"nodeType": "UncheckedBlock",
												"src": "6881:95:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 282,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 262,
																	"src": "6914:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 283,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 254,
																	"src": "6921:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 286,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 284,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 267,
																		"src": "6930:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 285,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 256,
																		"src": "6949:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6930:34:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 281,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 441,
																"src": "6905:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 287,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6905:60:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 288,
														"nodeType": "ExpressionStatement",
														"src": "6905:60:1"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6993:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 260,
												"id": 291,
												"nodeType": "Return",
												"src": "6986:11:1"
											}
										]
									},
									"documentation": {
										"id": 252,
										"nodeType": "StructuredDocumentation",
										"src": "6094:476:1",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 293,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "6584:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6610:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "6602:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6602:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "6627:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "6619:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6619:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6601:42:1"
									},
									"returnParameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "6668:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 258,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6668:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6667:6:1"
									},
									"scope": 485,
									"src": "6575:429:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 357,
										"nodeType": "Block",
										"src": "7575:547:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 309,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 304,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 296,
																"src": "7593:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 307,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7609:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 306,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7601:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 305,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7601:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 308,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7601:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7593:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 310,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7613:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 303,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7585:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7585:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 312,
												"nodeType": "ExpressionStatement",
												"src": "7585:68:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 319,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 314,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 298,
																"src": "7671:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 317,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7685:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 316,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7677:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 315,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7677:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 318,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7677:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7671:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 320,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7689:37:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 313,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7663:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7663:64:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 322,
												"nodeType": "ExpressionStatement",
												"src": "7663:64:1"
											},
											{
												"assignments": [
													324
												],
												"declarations": [
													{
														"constant": false,
														"id": 324,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "7797:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 357,
														"src": "7789:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 323,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7789:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 328,
												"initialValue": {
													"baseExpression": {
														"id": 325,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 37,
														"src": "7811:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 327,
													"indexExpression": {
														"id": 326,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 296,
														"src": "7821:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7811:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7789:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 332,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 330,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 324,
																"src": "7844:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 331,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 300,
																"src": "7859:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7844:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 333,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7867:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 329,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7836:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7836:72:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 335,
												"nodeType": "ExpressionStatement",
												"src": "7836:72:1"
											},
											{
												"id": 344,
												"nodeType": "UncheckedBlock",
												"src": "7918:73:1",
												"statements": [
													{
														"expression": {
															"id": 342,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 336,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 37,
																	"src": "7942:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 338,
																"indexExpression": {
																	"id": 337,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 296,
																	"src": "7952:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "7942:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 341,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 339,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 324,
																	"src": "7960:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 340,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 300,
																	"src": "7974:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7960:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7942:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 343,
														"nodeType": "ExpressionStatement",
														"src": "7942:38:1"
													}
												]
											},
											{
												"expression": {
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 345,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 37,
															"src": "8000:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 347,
														"indexExpression": {
															"id": 346,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 298,
															"src": "8010:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8000:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 348,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 300,
														"src": "8017:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8000:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 350,
												"nodeType": "ExpressionStatement",
												"src": "8000:23:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 352,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 296,
															"src": "8048:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 353,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 298,
															"src": "8054:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 354,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 300,
															"src": "8058:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 351,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 553,
														"src": "8039:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8039:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 356,
												"nodeType": "EmitStatement",
												"src": "8034:31:1"
											}
										]
									},
									"documentation": {
										"id": 294,
										"nodeType": "StructuredDocumentation",
										"src": "7010:452:1",
										"text": " @dev Moves `amount` of tokens from `sender` to `recipient`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
									},
									"id": 358,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "7476:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7503:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "7495:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7495:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7525:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "7517:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7517:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7545:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "7537:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7537:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7485:72:1"
									},
									"returnParameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7575:0:1"
									},
									"scope": 485,
									"src": "7467:655:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 395,
										"nodeType": "Block",
										"src": "8463:328:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 372,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 367,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 361,
																"src": "8481:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 370,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8500:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 369,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8492:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 368,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8492:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 371,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8492:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8481:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 373,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8504:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 366,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8473:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8473:65:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 375,
												"nodeType": "ExpressionStatement",
												"src": "8473:65:1"
											},
											{
												"expression": {
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 376,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 45,
														"src": "8611:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 377,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 363,
														"src": "8627:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8611:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "8611:22:1"
											},
											{
												"expression": {
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 380,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 37,
															"src": "8643:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 382,
														"indexExpression": {
															"id": 381,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 361,
															"src": "8653:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8643:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 383,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 363,
														"src": "8665:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8643:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 385,
												"nodeType": "ExpressionStatement",
												"src": "8643:28:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 389,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8703:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 388,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8695:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 387,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8695:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 390,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8695:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 391,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 361,
															"src": "8707:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 392,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "8716:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 386,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 553,
														"src": "8686:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8686:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 394,
												"nodeType": "EmitStatement",
												"src": "8681:42:1"
											}
										]
									},
									"documentation": {
										"id": 359,
										"nodeType": "StructuredDocumentation",
										"src": "8128:265:1",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 396,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8407:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8421:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 396,
												"src": "8413:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 360,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8413:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8438:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 396,
												"src": "8430:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 362,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8430:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8412:33:1"
									},
									"returnParameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8463:0:1"
									},
									"scope": 485,
									"src": "8398:393:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 440,
										"nodeType": "Block",
										"src": "10231:257:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 412,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 407,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 399,
																"src": "10249:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10266:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 409,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10258:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 408,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10258:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 411,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10258:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10249:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 413,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10270:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 406,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10241:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10241:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 415,
												"nodeType": "ExpressionStatement",
												"src": "10241:68:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 417,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 401,
																"src": "10327:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 420,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10346:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 419,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10338:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 418,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10338:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 421,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10338:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10327:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 423,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10350:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 416,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10319:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10319:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 425,
												"nodeType": "ExpressionStatement",
												"src": "10319:68:1"
											},
											{
												"expression": {
													"id": 432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 426,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "10398:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 429,
															"indexExpression": {
																"id": 427,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 399,
																"src": "10410:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10398:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 430,
														"indexExpression": {
															"id": 428,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 401,
															"src": "10417:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10398:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 431,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "10428:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10398:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 433,
												"nodeType": "ExpressionStatement",
												"src": "10398:36:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 435,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 399,
															"src": "10458:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 436,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 401,
															"src": "10465:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 437,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "10474:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 434,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 562,
														"src": "10449:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10449:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 439,
												"nodeType": "EmitStatement",
												"src": "10444:37:1"
											}
										]
									},
									"documentation": {
										"id": 397,
										"nodeType": "StructuredDocumentation",
										"src": "9701:412:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 441,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10127:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10153:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "10145:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 398,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10145:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10176:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "10168:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 400,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10168:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10201:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "10193:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10193:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10135:78:1"
									},
									"returnParameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10231:0:1"
									},
									"scope": 485,
									"src": "10118:370:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 483,
										"nodeType": "Block",
										"src": "10885:321:1",
										"statements": [
											{
												"assignments": [
													452
												],
												"declarations": [
													{
														"constant": false,
														"id": 452,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10903:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 483,
														"src": "10895:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 451,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10895:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 457,
												"initialValue": {
													"arguments": [
														{
															"id": 454,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 444,
															"src": "10932:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 455,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "10939:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 453,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "10922:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10922:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10895:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 458,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 452,
														"src": "10961:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 461,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10986:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 460,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10986:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 459,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10981:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 462,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10981:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 463,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10981:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10961:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 482,
												"nodeType": "IfStatement",
												"src": "10957:243:1",
												"trueBody": {
													"id": 481,
													"nodeType": "Block",
													"src": "11000:200:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 468,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 466,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 452,
																			"src": "11022:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 467,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 448,
																			"src": "11042:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11022:26:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 469,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11050:31:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		},
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		}
																	],
																	"id": 465,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "11014:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 470,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11014:68:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 471,
															"nodeType": "ExpressionStatement",
															"src": "11014:68:1"
														},
														{
															"id": 480,
															"nodeType": "UncheckedBlock",
															"src": "11096:94:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 473,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 444,
																				"src": "11133:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 474,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 446,
																				"src": "11140:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 477,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 475,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 452,
																					"src": "11149:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 476,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 448,
																					"src": "11168:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11149:25:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 472,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 441,
																			"src": "11124:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 478,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11124:51:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 479,
																	"nodeType": "ExpressionStatement",
																	"src": "11124:51:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 442,
										"nodeType": "StructuredDocumentation",
										"src": "10494:266:1",
										"text": " @dev Spend `amount` form the allowance of `owner` toward `spender`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
									},
									"id": 484,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10774:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10807:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "10799:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 443,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10799:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10830:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "10822:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 445,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10822:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10855:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "10847:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 447,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10847:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10789:78:1"
									},
									"returnParameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10885:0:1"
									},
									"scope": 485,
									"src": "10765:441:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 486,
							"src": "1382:11183:1",
							"usedErrors": []
						}
					],
					"src": "105:12461:1"
				},
				"id": 1
			},
			"wLONG/IERC20.sol": {
				"ast": {
					"absolutePath": "wLONG/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							563
						]
					},
					"id": 564,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 487,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 488,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 563,
							"linearizedBaseContracts": [
								563
							],
							"name": "IERC20",
							"nameLocation": "212:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 489,
										"nodeType": "StructuredDocumentation",
										"src": "225:67:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 494,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "306:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "317:2:2"
									},
									"returnParameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "343:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "343:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "342:9:2"
									},
									"scope": 563,
									"src": "297:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 495,
										"nodeType": "StructuredDocumentation",
										"src": "358:72:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 502,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "444:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "462:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "454:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 496,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "454:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "453:17:2"
									},
									"returnParameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "494:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 499,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "494:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "493:9:2"
									},
									"scope": 563,
									"src": "435:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 503,
										"nodeType": "StructuredDocumentation",
										"src": "509:202:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 512,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "725:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "742:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "734:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 504,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "734:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "754:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "746:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "746:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "733:28:2"
									},
									"returnParameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "780:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 509,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "780:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "779:6:2"
									},
									"scope": 563,
									"src": "716:70:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 513,
										"nodeType": "StructuredDocumentation",
										"src": "792:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 522,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1070:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1088:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "1080:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 514,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1080:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1103:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "1095:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 516,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1095:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1079:32:2"
									},
									"returnParameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "1135:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 519,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1135:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1134:9:2"
									},
									"scope": 563,
									"src": "1061:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 523,
										"nodeType": "StructuredDocumentation",
										"src": "1150:642:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 532,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1806:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1822:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "1814:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 524,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1814:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1839:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "1831:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 526,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1831:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1813:33:2"
									},
									"returnParameters": {
										"id": 531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "1865:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 529,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1865:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1864:6:2"
									},
									"scope": 563,
									"src": "1797:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 533,
										"nodeType": "StructuredDocumentation",
										"src": "1877:287:2",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 544,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2178:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2208:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "2200:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 534,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2200:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2230:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "2222:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 536,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2222:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2250:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "2242:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2242:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2190:72:2"
									},
									"returnParameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "2281:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 541,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2281:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2280:6:2"
									},
									"scope": 563,
									"src": "2169:118:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 545,
										"nodeType": "StructuredDocumentation",
										"src": "2293:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 553,
									"name": "Transfer",
									"nameLocation": "2462:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 547,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2487:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "2471:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2471:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2509:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "2493:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 548,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2493:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2521:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "2513:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 550,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2513:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2470:57:2"
									},
									"src": "2456:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 554,
										"nodeType": "StructuredDocumentation",
										"src": "2534:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 562,
									"name": "Approval",
									"nameLocation": "2693:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 556,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2718:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "2702:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 555,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2702:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 558,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2741:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "2725:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 560,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2758:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "2750:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 559,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2750:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2701:63:2"
									},
									"src": "2687:78:2"
								}
							],
							"scope": 564,
							"src": "202:2565:2",
							"usedErrors": []
						}
					],
					"src": "106:2662:2"
				},
				"id": 2
			},
			"wLONG/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "wLONG/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							563
						],
						"IERC20Metadata": [
							588
						]
					},
					"id": 589,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 565,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:3"
						},
						{
							"absolutePath": "wLONG/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 566,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 589,
							"sourceUnit": 564,
							"src": "135:22:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 568,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 563,
										"src": "304:6:3"
									},
									"id": 569,
									"nodeType": "InheritanceSpecifier",
									"src": "304:6:3"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 567,
								"nodeType": "StructuredDocumentation",
								"src": "159:116:3",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 588,
							"linearizedBaseContracts": [
								588,
								563
							],
							"name": "IERC20Metadata",
							"nameLocation": "286:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 570,
										"nodeType": "StructuredDocumentation",
										"src": "317:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 575,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "385:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "389:2:3"
									},
									"returnParameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "415:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 572,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "415:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "414:15:3"
									},
									"scope": 588,
									"src": "376:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 576,
										"nodeType": "StructuredDocumentation",
										"src": "436:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 581,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "506:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "512:2:3"
									},
									"returnParameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "538:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 578,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "538:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "537:15:3"
									},
									"scope": 588,
									"src": "497:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 582,
										"nodeType": "StructuredDocumentation",
										"src": "559:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 587,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "638:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "646:2:3"
									},
									"returnParameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "672:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 584,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "672:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "671:7:3"
									},
									"scope": 588,
									"src": "629:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 589,
							"src": "276:405:3",
							"usedErrors": []
						}
					],
					"src": "110:572:3"
				},
				"id": 3
			},
			"wLONG/Ownable.sol": {
				"ast": {
					"absolutePath": "wLONG/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							21
						],
						"Ownable": [
							679
						]
					},
					"id": 680,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 590,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:4"
						},
						{
							"absolutePath": "wLONG/Context.sol",
							"file": "./Context.sol",
							"id": 591,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 680,
							"sourceUnit": 22,
							"src": "112:23:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 593,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 21,
										"src": "661:7:4"
									},
									"id": 594,
									"nodeType": "InheritanceSpecifier",
									"src": "661:7:4"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 592,
								"nodeType": "StructuredDocumentation",
								"src": "137:494:4",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 679,
							"linearizedBaseContracts": [
								679,
								21
							],
							"name": "Ownable",
							"nameLocation": "650:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 596,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "691:6:4",
									"nodeType": "VariableDeclaration",
									"scope": 679,
									"src": "675:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 595,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "675:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 602,
									"name": "OwnershipTransferred",
									"nameLocation": "710:20:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 598,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "747:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "731:29:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 597,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "731:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 600,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "778:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "762:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 599,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "762:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "730:57:4"
									},
									"src": "704:84:4"
								},
								{
									"body": {
										"id": 611,
										"nodeType": "Block",
										"src": "904:49:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 607,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "933:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 608,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "933:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 606,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "914:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "914:32:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 610,
												"nodeType": "ExpressionStatement",
												"src": "914:32:4"
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "794:91:4",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 612,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "901:2:4"
									},
									"returnParameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "904:0:4"
									},
									"scope": 679,
									"src": "890:63:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 620,
										"nodeType": "Block",
										"src": "1084:30:4",
										"statements": [
											{
												"expression": {
													"id": 618,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 596,
													"src": "1101:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 617,
												"id": 619,
												"nodeType": "Return",
												"src": "1094:13:4"
											}
										]
									},
									"documentation": {
										"id": 613,
										"nodeType": "StructuredDocumentation",
										"src": "959:65:4",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 621,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1038:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1043:2:4"
									},
									"returnParameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "1075:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 615,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1075:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1074:9:4"
									},
									"scope": 679,
									"src": "1029:85:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 634,
										"nodeType": "Block",
										"src": "1223:96:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 629,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 625,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 621,
																	"src": "1241:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 626,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1241:7:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 627,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 11,
																	"src": "1252:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1252:12:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1241:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 630,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1266:34:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 624,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1233:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1233:68:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 632,
												"nodeType": "ExpressionStatement",
												"src": "1233:68:4"
											},
											{
												"id": 633,
												"nodeType": "PlaceholderStatement",
												"src": "1311:1:4"
											}
										]
									},
									"documentation": {
										"id": 622,
										"nodeType": "StructuredDocumentation",
										"src": "1120:77:4",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 635,
									"name": "onlyOwner",
									"nameLocation": "1211:9:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1220:2:4"
									},
									"src": "1202:117:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 657,
										"nodeType": "Block",
										"src": "1987:128:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 644,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 638,
																"src": "2005:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 647,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2025:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 646,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2017:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 645,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2017:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 648,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2017:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2005:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 650,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2029:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 643,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1997:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1997:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 652,
												"nodeType": "ExpressionStatement",
												"src": "1997:73:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 654,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "2099:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 653,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "2080:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2080:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 656,
												"nodeType": "ExpressionStatement",
												"src": "2080:28:4"
											}
										]
									},
									"documentation": {
										"id": 636,
										"nodeType": "StructuredDocumentation",
										"src": "1774:138:4",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 658,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 641,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 640,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 635,
												"src": "1977:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1977:9:4"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1926:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1952:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "1944:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 637,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1944:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1943:18:4"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1987:0:4"
									},
									"scope": 679,
									"src": "1917:198:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 677,
										"nodeType": "Block",
										"src": "2332:124:4",
										"statements": [
											{
												"assignments": [
													665
												],
												"declarations": [
													{
														"constant": false,
														"id": 665,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2350:8:4",
														"nodeType": "VariableDeclaration",
														"scope": 677,
														"src": "2342:16:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 664,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2342:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 667,
												"initialValue": {
													"id": 666,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 596,
													"src": "2361:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2342:25:4"
											},
											{
												"expression": {
													"id": 670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 668,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 596,
														"src": "2377:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 669,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 661,
														"src": "2386:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2377:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 671,
												"nodeType": "ExpressionStatement",
												"src": "2377:17:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 673,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 665,
															"src": "2430:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 674,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 661,
															"src": "2440:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 672,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 602,
														"src": "2409:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2409:40:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 676,
												"nodeType": "EmitStatement",
												"src": "2404:45:4"
											}
										]
									},
									"documentation": {
										"id": 659,
										"nodeType": "StructuredDocumentation",
										"src": "2121:143:4",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 678,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2278:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2305:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "2297:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 660,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2297:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2296:18:4"
									},
									"returnParameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2332:0:4"
									},
									"scope": 679,
									"src": "2269:187:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 680,
							"src": "632:1826:4",
							"usedErrors": []
						}
					],
					"src": "87:2372:4"
				},
				"id": 4
			},
			"wLONG/wLONG.sol": {
				"ast": {
					"absolutePath": "wLONG/wLONG.sol",
					"exportedSymbols": {
						"Context": [
							21
						],
						"ERC20": [
							485
						],
						"IERC20": [
							563
						],
						"IERC20Metadata": [
							588
						],
						"Ownable": [
							679
						],
						"wLONG": [
							805
						]
					},
					"id": 806,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 681,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "351:23:5"
						},
						{
							"absolutePath": "wLONG/ERC20.sol",
							"file": "./ERC20.sol",
							"id": 682,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 806,
							"sourceUnit": 486,
							"src": "376:21:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "wLONG/Context.sol",
							"file": "./Context.sol",
							"id": 683,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 806,
							"sourceUnit": 22,
							"src": "398:23:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "wLONG/Ownable.sol",
							"file": "./Ownable.sol",
							"id": 684,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 806,
							"sourceUnit": 680,
							"src": "422:23:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 685,
										"name": "ERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 485,
										"src": "466:5:5"
									},
									"id": 686,
									"nodeType": "InheritanceSpecifier",
									"src": "466:5:5"
								},
								{
									"baseName": {
										"id": 687,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 679,
										"src": "473:7:5"
									},
									"id": 688,
									"nodeType": "InheritanceSpecifier",
									"src": "473:7:5"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 805,
							"linearizedBaseContracts": [
								805,
								679,
								485,
								588,
								563,
								21
							],
							"name": "wLONG",
							"nameLocation": "457:5:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 695,
										"nodeType": "Block",
										"src": "532:7:5",
										"statements": []
									},
									"id": 696,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "77726170706564204c4f4e47",
													"id": 691,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "508:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_dcaa9df3b9dcd2418466a688a78f26d16e10febcee9fda64ccf8ce16b81346c3",
														"typeString": "literal_string \"wrapped LONG\""
													},
													"value": "wrapped LONG"
												},
												{
													"hexValue": "774c4f4e47",
													"id": 692,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "523:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_185092712b519e7ca580902d728da1aca09208422c4bcea642d51df632d5f4d5",
														"typeString": "literal_string \"wLONG\""
													},
													"value": "wLONG"
												}
											],
											"id": 693,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 690,
												"name": "ERC20",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 485,
												"src": "502:5:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "502:29:5"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "499:2:5"
									},
									"returnParameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "532:0:5"
									},
									"scope": 805,
									"src": "488:51:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										96
									],
									"body": {
										"id": 705,
										"nodeType": "Block",
										"src": "900:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 703,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "917:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 702,
												"id": 704,
												"nodeType": "Return",
												"src": "910:8:5"
											}
										]
									},
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "544:286:5",
										"text": "@dev \n decimals столькоже сколько и в орегинальном LONG coin, totalSupply изначально 0, так как\n токены минтятся юзерами через купоны, подтверждающие сжигание LONG"
									},
									"functionSelector": "313ce567",
									"id": 706,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "844:8:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 699,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "875:8:5"
									},
									"parameters": {
										"id": 698,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "852:2:5"
									},
									"returnParameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "893:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 700,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "893:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "892:7:5"
									},
									"scope": 805,
									"src": "835:90:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "1119:1152:5",
										"text": "@dev\n Для проверки купонов на сожженный LONG используем механизм ECDSA-подписи, \n где r-часть юзабельна как одноразовый лицензионный ключ.\n Чтобы не было подделок нужно r=k*G генерировать каждый раз из нового случайного k (nonce)!!!\n При такой схеме в хешь сообщения включается число сожженных LONG а восстанавливаемый при проверке \n сигнатуры адрес (публичный ключь) - это _owner-адрес в контракте (возможна его смена при компроментации)\n Важно! Для предотвращения Front Running в хешь сообщения подмешивается также адрес отправителя (_msgSender()),\n то есть купоны на сжигание всегда именные и заюзать с другого адреса невозможно\n "
									},
									"id": 711,
									"mutability": "mutable",
									"name": "_rset",
									"nameLocation": "2310:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 805,
									"src": "2277:38:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
										"typeString": "mapping(bytes32 => bool)"
									},
									"typeName": {
										"id": 710,
										"keyType": {
											"id": 708,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2285:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2277:24:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
											"typeString": "mapping(bytes32 => bool)"
										},
										"valueType": {
											"id": 709,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "2296:4:5",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 803,
										"nodeType": "Block",
										"src": "3215:1933:5",
										"statements": [
											{
												"assignments": [
													722
												],
												"declarations": [
													{
														"constant": false,
														"id": 722,
														"mutability": "mutable",
														"name": "minter",
														"nameLocation": "3312:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 803,
														"src": "3304:14:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 721,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3304:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 725,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 723,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "3319:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3319:12:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3304:27:5"
											},
											{
												"assignments": [
													727
												],
												"declarations": [
													{
														"constant": false,
														"id": 727,
														"mutability": "mutable",
														"name": "r",
														"nameLocation": "3350:1:5",
														"nodeType": "VariableDeclaration",
														"scope": 803,
														"src": "3342:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 726,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3342:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 728,
												"nodeType": "VariableDeclarationStatement",
												"src": "3342:9:5"
											},
											{
												"assignments": [
													730
												],
												"declarations": [
													{
														"constant": false,
														"id": 730,
														"mutability": "mutable",
														"name": "s",
														"nameLocation": "3361:1:5",
														"nodeType": "VariableDeclaration",
														"scope": 803,
														"src": "3353:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 729,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3353:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 731,
												"nodeType": "VariableDeclarationStatement",
												"src": "3353:9:5"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3382:101:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3396:32:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "signature",
																				"nodeType": "YulIdentifier",
																				"src": "3411:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3422:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3407:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3407:20:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3401:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3401:27:5"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "3396:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3441:32:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "signature",
																				"nodeType": "YulIdentifier",
																				"src": "3456:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3467:4:5",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3452:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3452:20:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3446:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3446:27:5"
															},
															"variableNames": [
																{
																	"name": "s",
																	"nodeType": "YulIdentifier",
																	"src": "3441:1:5"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 727,
														"isOffset": false,
														"isSlot": false,
														"src": "3396:1:5",
														"valueSize": 1
													},
													{
														"declaration": 730,
														"isOffset": false,
														"isSlot": false,
														"src": "3441:1:5",
														"valueSize": 1
													},
													{
														"declaration": 716,
														"isOffset": false,
														"isSlot": false,
														"src": "3411:9:5",
														"valueSize": 1
													},
													{
														"declaration": 716,
														"isOffset": false,
														"isSlot": false,
														"src": "3456:9:5",
														"valueSize": 1
													}
												],
												"id": 732,
												"nodeType": "InlineAssembly",
												"src": "3373:110:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 737,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "3500:9:5",
															"subExpression": {
																"baseExpression": {
																	"id": 734,
																	"name": "_rset",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 711,
																	"src": "3501:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
																		"typeString": "mapping(bytes32 => bool)"
																	}
																},
																"id": 736,
																"indexExpression": {
																	"id": 735,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 727,
																	"src": "3507:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3501:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "774c4f4e473a206b65792068617320616c7265616479206265656e2075736564",
															"id": 738,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3511:34:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a70c7b78c5e633d9032a6be642d96644d9511aac8338a258463f8d905ebe0329",
																"typeString": "literal_string \"wLONG: key has already been used\""
															},
															"value": "wLONG: key has already been used"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a70c7b78c5e633d9032a6be642d96644d9511aac8338a258463f8d905ebe0329",
																"typeString": "literal_string \"wLONG: key has already been used\""
															}
														],
														"id": 733,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3492:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3492:54:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 740,
												"nodeType": "ExpressionStatement",
												"src": "3492:54:5"
											},
											{
												"assignments": [
													742
												],
												"declarations": [
													{
														"constant": false,
														"id": 742,
														"mutability": "mutable",
														"name": "h",
														"nameLocation": "3565:1:5",
														"nodeType": "VariableDeclaration",
														"scope": 803,
														"src": "3557:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 741,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3557:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 751,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 746,
																	"name": "minter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 722,
																	"src": "3596:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"hexValue": "1901",
																	"id": 747,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3603:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string hex\"1901\""
																	},
																	"value": "\u0019\u0001"
																},
																{
																	"id": 748,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 714,
																	"src": "3614:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string hex\"1901\""
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 744,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "3579:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "3579:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 749,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3579:42:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 743,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "3569:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3569:53:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3557:65:5"
											},
											{
												"assignments": [
													754
												],
												"declarations": [
													{
														"constant": false,
														"id": 754,
														"mutability": "mutable",
														"name": "signer1",
														"nameLocation": "4583:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 803,
														"src": "4575:15:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 753,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4575:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"documentation": "@dev\n При восстановлении точки публичного ключа (адреса) есть неоднозначность (malleable) в сигнатуре вида +-s mod n,\n которая даст один и тот-же адрес. Поскольку r сохраняется в контракте, то второй раз использовать \"противоположную\"\n s не удастся. Поскольку сигнатура генерится из случайного k, а ecrecover() предполагает восстановление из \n malleable-сигнатур, мы вынуждены проверить два варианта для v ∈ {27, 28} без лишних заморочек, тратящих газ.",
												"id": 764,
												"initialValue": {
													"arguments": [
														{
															"id": 756,
															"name": "h",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 742,
															"src": "4603:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "3237",
																	"id": 759,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4612:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_27_by_1",
																		"typeString": "int_const 27"
																	},
																	"value": "27"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_27_by_1",
																		"typeString": "int_const 27"
																	}
																],
																"id": 758,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4606:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 757,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "4606:5:5",
																	"typeDescriptions": {}
																}
															},
															"id": 760,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4606:9:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 761,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 727,
															"src": "4617:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 762,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 730,
															"src": "4620:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 755,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967290,
														"src": "4593:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4593:29:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4575:47:5"
											},
											{
												"assignments": [
													766
												],
												"declarations": [
													{
														"constant": false,
														"id": 766,
														"mutability": "mutable",
														"name": "signer2",
														"nameLocation": "4632:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 803,
														"src": "4624:15:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 765,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4624:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 776,
												"initialValue": {
													"arguments": [
														{
															"id": 768,
															"name": "h",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 742,
															"src": "4652:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "3238",
																	"id": 771,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4661:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_28_by_1",
																		"typeString": "int_const 28"
																	},
																	"value": "28"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_28_by_1",
																		"typeString": "int_const 28"
																	}
																],
																"id": 770,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4655:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 769,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "4655:5:5",
																	"typeDescriptions": {}
																}
															},
															"id": 772,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4655:9:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 773,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 727,
															"src": "4666:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 774,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 730,
															"src": "4669:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 767,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967290,
														"src": "4642:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4642:29:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4624:47:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 786,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 781,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 778,
																	"name": "signer1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 754,
																	"src": "4689:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 779,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 621,
																		"src": "4698:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 780,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4698:7:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4689:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 785,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 782,
																	"name": "signer2",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 766,
																	"src": "4709:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 783,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 621,
																		"src": "4718:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 784,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4718:7:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4709:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4689:36:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "774c4f4e473a207369676e6174757265206973206e6f742076616c6964",
															"id": 787,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4727:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d9cec86d36eedb89a2f10b3577aac77390acca9943319c01eab3cd4cea0acb56",
																"typeString": "literal_string \"wLONG: signature is not valid\""
															},
															"value": "wLONG: signature is not valid"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d9cec86d36eedb89a2f10b3577aac77390acca9943319c01eab3cd4cea0acb56",
																"typeString": "literal_string \"wLONG: signature is not valid\""
															}
														],
														"id": 777,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4681:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4681:78:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 789,
												"nodeType": "ExpressionStatement",
												"src": "4681:78:5"
											},
											{
												"expression": {
													"id": 794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 790,
															"name": "_rset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 711,
															"src": "4921:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
																"typeString": "mapping(bytes32 => bool)"
															}
														},
														"id": 792,
														"indexExpression": {
															"id": 791,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 727,
															"src": "4927:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4921:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 793,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4930:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "4921:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 795,
												"nodeType": "ExpressionStatement",
												"src": "4921:13:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 797,
															"name": "minter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 722,
															"src": "5026:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 798,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 714,
															"src": "5034:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 796,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 396,
														"src": "5020:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5020:21:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 800,
												"nodeType": "ExpressionStatement",
												"src": "5020:21:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 801,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5137:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 720,
												"id": 802,
												"nodeType": "Return",
												"src": "5130:11:5"
											}
										]
									},
									"documentation": {
										"id": 712,
										"nodeType": "StructuredDocumentation",
										"src": "2793:331:5",
										"text": "@dev\n Это единственный метод для минтинга wLONG. Вызывающий адрес долже предоставить валидную\n сигнатуру (купон), полученную после сжигагия орегинальных LONG в количестве amount"
									},
									"functionSelector": "db7fd408",
									"id": 804,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "3138:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3151:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "3143:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 713,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3143:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "3172:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "3159:22:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 715,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3159:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3142:40:5"
									},
									"returnParameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "3209:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 718,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3209:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3208:6:5"
									},
									"scope": 805,
									"src": "3129:2019:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								}
							],
							"scope": 806,
							"src": "448:4702:5",
							"usedErrors": []
						}
					],
					"src": "351:4799:5"
				},
				"id": 5
			}
		}
	}
}